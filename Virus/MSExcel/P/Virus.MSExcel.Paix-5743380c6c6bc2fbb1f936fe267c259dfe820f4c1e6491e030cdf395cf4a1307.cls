olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSExcel.Paix-5743380c6c6bc2fbb1f936fe267c259dfe820f4c1e6491e030cdf395cf4a1307
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO xlm_macro.txt 
in file: xlm_macro - OLE stream: 'xlm_macro'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' 0085     12 BOUNDSHEET : Sheet Information - Excel 4.0 macro sheet, very hidden - !!!GO
' 0085     13 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible - Sheet1
' 0085     13 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible - Sheet2
' 0085     13 BOUNDSHEET : Sheet Information - worksheet or dialog sheet, visible - Sheet3
' 0018     50 LABEL : Cell Value, String Constant - activation_feuille hidden len=18 ptgRef3d 65535!ƣH1 *UNKNOWN TOKEN* 0x008b *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\x00\x05\x80\x00\x00\x00\x00%\x00\x00'
' 0018     33 LABEL : Cell Value, String Constant - built-in-name 2 Auto_Close hidden len=18 ptgRef3d 65535!ƦJ1 *UNKNOWN TOKEN* 0x008b *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\x00\x05\x80\x00\x00\x00\x00f\x00\x00'
' 0018     33 LABEL : Cell Value, String Constant - built-in-name 1 Auto_Open hidden len=18 ptgRef3d 65535!ƮJ1 *UNKNOWN TOKEN* 0x008b *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\x00\x05\x80\x00\x00\x00\x00\x01\x00\x00'
' 0018     27 LABEL : Cell Value, String Constant - create_xla len=3 ptgInt 0 
' 0018     23 LABEL : Cell Value, String Constant - existe len=3 ptgInt 1 
' 0018     39 LABEL : Cell Value, String Constant - feuille_base len=13 ptgStr ptgFuncCEA  *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'lsheet.xla'
' 0018     34 LABEL : Cell Value, String Constant - GO hidden len=18 ptgRef3d 65535!ƴB1 *UNKNOWN TOKEN* 0x008b *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\x00\x05\x80\x00\x00\x00\x00P\x00\x00'
' 0018     18 LABEL : Cell Value, String Constant - i len=3 ptgInt 2 
' 0018     52 LABEL : Cell Value, String Constant - liste_classeur len=8 ptgArrayA  *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\x01\x01\x00\xd45\x8b\x00'
' 0018     41 LABEL : Cell Value, String Constant - noprotect hidden len=18 ptgRefErr3d  *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\xff\xff\x00\x00\x8b\xa6\x8b\x00\x05\x80\x00\x00\x00\x00LL\x00'
' 0018     33 LABEL : Cell Value, String Constant - nouveau_classeur hidden len=3 ptgStr ptgAreaErr3d 
' 0018     39 LABEL : Cell Value, String Constant - nouvelle_feuille len=9 ptgStr ptgAreaV  *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'08.XLS'
' 0018     34 LABEL : Cell Value, String Constant - path_xla len=12 ptgStr ptgNameV  *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b':\\WINDOWS'
' 0018     39 LABEL : Cell Value, String Constant - protect hidden len=18 ptgRef3d 65535!A1 *UNKNOWN TOKEN* 0x0000 *INCOMPLETE FORMULA PARSING* Remaining, unparsed expression: b'\x00\x05\x80\x00\x00\x00\x00=\x00\x00'
' 002a      2 PRINTHEADERS : Print Row/Column Labels
' 0204     19 LABEL : Cell Value, String Constant
' 0204     26 LABEL : Cell Value, String Constant
' 0204     15 LABEL : Cell Value, String Constant
' 0204     13 LABEL : Cell Value, String Constant
' 0204     19 LABEL : Cell Value, String Constant
' 002a      2 PRINTHEADERS : Print Row/Column Labels
' 002a      2 PRINTHEADERS : Print Row/Column Labels
' 002a      2 PRINTHEADERS : Print Row/Column Labels
' Sheet,Reference,Formula,Value
' !!!GO,A3,"<ERROR>",""
' !!!GO,A4,"<ERROR>",""
' !!!GO,A5,ERROR(FALSE),""
' !!!GO,A6,ECHO(FALSE),""
' !!!GO,A7,"['GET.DOCUMENT(88)', '"<ERROR>"']",""
' !!!GO,A8,"",""
' !!!GO,A9,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A10,"<ERROR>",""
' !!!GO,A11,"<ERROR>",""
' !!!GO,A12,liste_classeur,""
' !!!GO,A13,"['liste_classeur', '*STACKERROR* not enough operands for operator: <']",""
' !!!GO,A14,"<ERROR>",""
' !!!GO,A15,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A16,"<ERROR>",""
' !!!GO,A17,NEXT(),""
' !!!GO,A18,[],""
' !!!GO,A19,"['LEFT(GET.DOCUMENT(2),1)', '"<ERROR>"']",""
' !!!GO,A20,"<ERROR>",""
' !!!GO,A21,*STACKERROR* not enough arguments for function: ELSE,""
' !!!GO,A22,"<ERROR>",""
' !!!GO,A23,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A24,[],""
' !!!GO,A25,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A26,3,""
' !!!GO,A27,"['1', '"<ERROR>"']",""
' !!!GO,A28,"ADDIN.MANAGER(1,"<ERROR>")",""
' !!!GO,A29,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A30,"<ERROR>",""
' !!!GO,A31,*STACKERROR* not enough arguments for function: ELSE,""
' !!!GO,A32,"<ERROR>",""
' !!!GO,A33,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A34,ECHO(TRUE),""
' !!!GO,A35,ERROR(TRUE),""
' !!!GO,A36,RETURN(),""
' !!!GO,A39,"<ERROR>",""
' !!!GO,A40,ERROR(FALSE),""
' !!!GO,A41,ECHO(FALSE),""
' !!!GO,A42,[],""
' !!!GO,A43,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A44,[],""
' !!!GO,A45,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A46,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A47,GO,""
' !!!GO,A48,*STACKERROR* not enough arguments for function: ELSE,""
' !!!GO,A49,IF(NOT(ISNA(GET.DOCUMENT(2)))),""
' !!!GO,A50,"<ERROR>",""
' !!!GO,A51,SAVE(),""
' !!!GO,A52,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A53,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A54,[],""
' !!!GO,A55,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A56,[],""
' !!!GO,A57,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A58,ECHO(TRUE),""
' !!!GO,A59,ERROR(TRUE),""
' !!!GO,A60,RETURN(),""
' !!!GO,A63,"<ERROR>",""
' !!!GO,A64,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A65,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A66,"<ERROR>",""
' !!!GO,A67,"<ERROR>",""
' !!!GO,A68,"<ERROR>",""
' !!!GO,A69,"<ERROR>",""
' !!!GO,A70,"<ERROR>",""
' !!!GO,A71,"<ERROR>",""
' !!!GO,A72,"<ERROR>",""
' !!!GO,A73,"<ERROR>",""
' !!!GO,A74,"<ERROR>",""
' !!!GO,A75,"<ERROR>",""
' !!!GO,A76,*UNKNOWN FUNCTION*("<ERROR>"),""
' !!!GO,A77,"['TRUE', '', '*UNKNOWN FUNCTION*("<ERROR>")']",""
' !!!GO,A78,"WORKBOOK.HIDE(,TRUE)",""
' !!!GO,A79,RETURN(),""
' !!!GO,A82,ERROR(FALSE),""
' !!!GO,A83,IF(*STACKERROR* not enough arguments for function: RAND*100>98),""
' !!!GO,A84,[],""
' !!!GO,A85,SHOW.BAR(ADD.BAR()),""
' !!!GO,A86,"<ERROR>",""
' !!!GO,A87,[],""
' !!!GO,A88,[],""
' !!!GO,A89,"<ERROR>",""
' !!!GO,A90,NEXT(),""
' !!!GO,A91,"OPTIONS.VIEW(FALSE,FALSE,,,,,,,,,FALSE,FALSE,FALSE,FALSE,FALSE)",""
' !!!GO,A92,"<ERROR>",""
' !!!GO,A93,liste_classeur,""
' !!!GO,A94,liste_classeur,""
' !!!GO,A95,HIDE(),""
' !!!GO,A96,"<ERROR>",""
' !!!GO,A97,NEXT(),""
' !!!GO,A98,"<ERROR>",""
' !!!GO,A99,*STACKERROR* not enough arguments for function: END.IF,""
' !!!GO,A100,ERROR(TRUE),""
' !!!GO,A101,RETURN(),""
' !!!GO,A104,[],""
' !!!GO,A105,RETURN(),""
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Auto_Open           |Runs when the Excel Workbook is opened       |
|AutoExec  |Auto_Close          |Runs when the Excel Workbook is closed       |
|Suspicious|WINDOWS             |May enumerate application windows (if        |
|          |                    |combined with Shell.Application object)      |
|Suspicious|XLM macro           |XLM macro found. It may contain malicious    |
|          |                    |code                                         |
+----------+--------------------+---------------------------------------------+

